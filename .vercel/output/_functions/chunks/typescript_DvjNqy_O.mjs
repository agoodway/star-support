import { d as createVNode, K as Fragment, b5 as __astro_tag_component__ } from './astro/server_CeKHpNWz.mjs';
import { $ as $$Since } from './Since_BJvBqJyZ.mjs';
import { $ as $$PackageManagerTabs } from './PackageManagerTabs_DXh8l6mS.mjs';
import { $ as $$ReadMore } from './ReadMore_CcGJl1uo.mjs';

const frontmatter = {
  "title": "TypeScript",
  "description": "Learn how to use Astro's built-in TypeScript support.",
  "i18nReady": true
};
function getHeadings() {
  return [{
    "depth": 2,
    "slug": "setup",
    "text": "Setup"
  }, {
    "depth": 3,
    "slug": "tsconfig-templates",
    "text": "TSConfig templates"
  }, {
    "depth": 3,
    "slug": "typescript-editor-plugin",
    "text": "TypeScript editor plugin"
  }, {
    "depth": 3,
    "slug": "ui-frameworks",
    "text": "UI Frameworks"
  }, {
    "depth": 2,
    "slug": "type-imports",
    "text": "Type Imports"
  }, {
    "depth": 2,
    "slug": "import-aliases",
    "text": "Import Aliases"
  }, {
    "depth": 2,
    "slug": "extending-window-and-globalthis",
    "text": "Extending window and globalThis"
  }, {
    "depth": 2,
    "slug": "component-props",
    "text": "Component Props"
  }, {
    "depth": 3,
    "slug": "common-prop-type-patterns",
    "text": "Common prop type patterns"
  }, {
    "depth": 2,
    "slug": "type-utilities",
    "text": "Type Utilities"
  }, {
    "depth": 3,
    "slug": "built-in-html-attributes",
    "text": "Built-in HTML attributes"
  }, {
    "depth": 3,
    "slug": "componentprops-type",
    "text": "ComponentProps type"
  }, {
    "depth": 3,
    "slug": "polymorphic-type",
    "text": "Polymorphic type"
  }, {
    "depth": 3,
    "slug": "infer-getstaticpaths-types",
    "text": "Infer getStaticPaths() types"
  }, {
    "depth": 2,
    "slug": "type-checking",
    "text": "Type checking"
  }, {
    "depth": 2,
    "slug": "troubleshooting",
    "text": "Troubleshooting"
  }, {
    "depth": 3,
    "slug": "errors-typing-multiple-jsx-frameworks-at-the-same-time",
    "text": "Errors typing multiple JSX frameworks at the same time"
  }];
}
function _createMdxContent(props) {
  const _components = {
    p: "p",
    ...props.components
  }, {Fragment: Fragment$1} = _components;
  if (!Fragment$1) _missingMdxReference("Fragment");
  return createVNode(Fragment, {
    children: [createVNode(Fragment$1, {
      "set:html": "<p>Astro ships with built-in support for <a href=\"https://www.typescriptlang.org/\">TypeScript</a>. You can import <code dir=\"auto\">.ts</code> and <code dir=\"auto\">.tsx</code> files in your Astro project, write TypeScript code directly inside your <a href=\"/en/basics/astro-components/#the-component-script\">Astro component</a>, and even use an <a href=\"/en/guides/configuring-astro/#the-astro-config-file\"><code dir=\"auto\">astro.config.ts</code></a> file for your Astro configuration if you like.</p>\n<p>Using TypeScript, you can prevent errors at runtime by defining the shapes of objects and components in your code. For example, if you use TypeScript to <a href=\"#component-props\">type your component’s props</a>, you’ll get an error in your editor if you set a prop that your component doesn’t accept.</p>\n<p>You don’t need to write TypeScript code in your Astro projects to benefit from it. Astro always treats your component code as TypeScript, and the <a href=\"/en/editor-setup/\">Astro VS Code Extension</a> will infer as much as it can to provide autocompletion, hints, and errors in your editor.</p>\n<p>The Astro dev server won’t perform any type checking, but you can use a <a href=\"#type-checking\">separate script</a> to check for type errors from the command line.</p>\n<div class=\"sl-heading-wrapper level-h2\"><h2 id=\"setup\">Setup</h2><a class=\"sl-anchor-link\" href=\"#setup\"><span aria-hidden=\"true\" class=\"sl-anchor-icon\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg></span><span class=\"sr-only\">Section titled “Setup”</span></a></div>\n<p>Astro starter projects include a <code dir=\"auto\">tsconfig.json</code> file in your project. Even if you don’t write TypeScript code, this file is important so that tools like Astro and VS Code know how to understand your project. Some features (like npm package imports) aren’t fully supported in the editor without a <code dir=\"auto\">tsconfig.json</code> file. If you install Astro manually, be sure to create this file yourself.</p>\n<div class=\"sl-heading-wrapper level-h3\"><h3 id=\"tsconfig-templates\">TSConfig templates</h3><a class=\"sl-anchor-link\" href=\"#tsconfig-templates\"><span aria-hidden=\"true\" class=\"sl-anchor-icon\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg></span><span class=\"sr-only\">Section titled “TSConfig templates”</span></a></div>\n<p>Three extensible <code dir=\"auto\">tsconfig.json</code> templates are included in Astro: <code dir=\"auto\">base</code>, <code dir=\"auto\">strict</code>, and <code dir=\"auto\">strictest</code>. The <code dir=\"auto\">base</code> template enables support for modern JavaScript features and is also used as a basis for the other templates. We recommend using <code dir=\"auto\">strict</code> or <code dir=\"auto\">strictest</code> if you plan to write TypeScript in your project. You can view and compare the three template configurations at <a href=\"https://github.com/withastro/astro/blob/main/packages/astro/tsconfigs/\">astro/tsconfigs/</a>.</p>\n<p>To inherit from one of the templates, use <a href=\"https://www.typescriptlang.org/tsconfig#extends\">the <code dir=\"auto\">extends</code> setting</a>:</p>\n<div class=\"expressive-code\"><link rel=\"stylesheet\" href=\"/_astro/ec.rvnnt.css\"><script type=\"module\" src=\"/_astro/ec.8zarh.js\"></script><figure class=\"frame has-title not-content\"><figcaption class=\"header\"><span class=\"title\">tsconfig.json</span></figcaption><pre data-language=\"json\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#D6DEEB;--1:#403F53\">{</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#7FDBCA;--1:#096E72\">\"extends\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">: </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#C789D6;--1:#7C5686\">astro/tsconfigs/base</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#D6DEEB;--1:#403F53\">}</span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"{  &#x22;extends&#x22;: &#x22;astro/tsconfigs/base&#x22;}\"><div></div></button></div></figure></div>\n<p>Additionally, we recommend setting <code dir=\"auto\">include</code> and <code dir=\"auto\">exclude</code> as follows to benefit from Astro types and avoid checking built files:</p>\n<div class=\"expressive-code\"><figure class=\"frame has-title not-content\"><figcaption class=\"header\"><span class=\"title\">tsconfig.json</span></figcaption><pre data-language=\"json\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#D6DEEB;--1:#403F53\">{</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#7FDBCA;--1:#096E72\">\"extends\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">: </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#C789D6;--1:#7C5686\">astro/tsconfigs/base</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">,</span></div></div><div class=\"ec-line highlight ins\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#7FDBCA;--1:#075457\">\"include\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">: [</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#d5a7e0;--1:#5d4165\">.astro/types.d.ts</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">, </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#d5a7e0;--1:#5d4165\">**/*</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">],</span></div></div><div class=\"ec-line highlight ins\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#7FDBCA;--1:#075457\">\"exclude\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">: [</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#d5a7e0;--1:#5d4165\">dist</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">]</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#D6DEEB;--1:#403F53\">}</span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"{  &#x22;extends&#x22;: &#x22;astro/tsconfigs/base&#x22;,  &#x22;include&#x22;: [&#x22;.astro/types.d.ts&#x22;, &#x22;**/*&#x22;],  &#x22;exclude&#x22;: [&#x22;dist&#x22;]}\"><div></div></button></div></figure></div>\n<p>You can create <code dir=\"auto\">src/env.d.ts</code> as a convention for adding custom types declarations, or to benefit from Astro types if you don’t have a <code dir=\"auto\">tsconfig.json</code>:</p>\n<div class=\"expressive-code\"><figure class=\"frame has-title not-content\"><figcaption class=\"header\"><span class=\"title\">src/env.d.ts</span></figcaption><pre data-language=\"ts\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#919F9F;--1:#5D6376\">// Custom types declarations</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">declare var </span><span style=\"--0:#D6DEEB;--1:#403F53\">myString</span><span style=\"--0:#7FDBCA;--1:#096E72\">:</span><span style=\"--0:#C792EA;--1:#8844AE\"> </span><span style=\"--0:#C5E478;--1:#3B61B0\">string</span><span style=\"--0:#D6DEEB;--1:#403F53\">;</span></div></div><div class=\"ec-line\"><div class=\"code\">\n</div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#919F9F;--1:#5D6376\">// Astro types, not necessary if you already have a `tsconfig.json`</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#919F9F;--1:#5F636F\">/// </span><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\">&#x3C;</span><span style=\"--0:#CAECE6\">reference</span><span style=\"--0:#7FDBCA\"> </span></span><span style=\"--0:#C5E478;--1:#3B61B0\">path</span><span style=\"--0:#C792EA;--1:#8844AE\">=</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#984E4D\">../.astro/types.d.ts</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#7FDBCA;--1:#8844AE\"> /></span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"// Custom types declarationsdeclare var myString: string;// Astro types, not necessary if you already have a &#x60;tsconfig.json&#x60;/// <reference path=&#x22;../.astro/types.d.ts&#x22; />\"><div></div></button></div></figure></div>\n<div class=\"sl-heading-wrapper level-h3\"><h3 id=\"typescript-editor-plugin\">TypeScript editor plugin</h3><a class=\"sl-anchor-link\" href=\"#typescript-editor-plugin\"><span aria-hidden=\"true\" class=\"sl-anchor-icon\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg></span><span class=\"sr-only\">Section titled “TypeScript editor plugin”</span></a></div>\n<p>The <a href=\"https://www.npmjs.com/package/@astrojs/ts-plugin\">Astro TypeScript plugin</a> can be installed separately when you are not using the <a href=\"https://marketplace.visualstudio.com/items?itemName=astro-build.astro-vscode\">official Astro VS Code extension</a>. This plugin is automatically installed and configured by the VS Code extension, and you do not need to install both.</p>\n<p>This plugin runs only in the editor. When running <code dir=\"auto\">tsc</code> in the terminal, <code dir=\"auto\">.astro</code> files are ignored entirely. Instead, you can use <a href=\"/en/reference/cli-reference/#astro-check\">the <code dir=\"auto\">astro check</code> CLI command</a> to check both <code dir=\"auto\">.astro</code> and <code dir=\"auto\">.ts</code> files.</p>\n<p>This plugin also supports importing <code dir=\"auto\">.astro</code> files from <code dir=\"auto\">.ts</code> files (which can be useful for re-exporting).</p>\n"
    }), createVNode($$PackageManagerTabs, {
      children: [createVNode(Fragment$1, {
        slot: "npm",
        "set:html": "<div class=\"expressive-code\"><figure class=\"frame is-terminal not-content\"><figcaption class=\"header\"><span class=\"title\"></span><span class=\"sr-only\">Terminal window</span></figcaption><pre data-language=\"shell\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#82AAFF;--1:#3B61B0\">npm</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#ECC48D;--1:#3B61B0\">install</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#ECC48D;--1:#3B61B0\">@astrojs/ts-plugin</span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"npm install @astrojs/ts-plugin\"><div></div></button></div></figure></div>"
      }), createVNode(Fragment$1, {
        slot: "pnpm",
        "set:html": "<div class=\"expressive-code\"><figure class=\"frame is-terminal not-content\"><figcaption class=\"header\"><span class=\"title\"></span><span class=\"sr-only\">Terminal window</span></figcaption><pre data-language=\"shell\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#82AAFF;--1:#3B61B0\">pnpm</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#ECC48D;--1:#3B61B0\">add</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#ECC48D;--1:#3B61B0\">@astrojs/ts-plugin</span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"pnpm add @astrojs/ts-plugin\"><div></div></button></div></figure></div>"
      }), createVNode(Fragment$1, {
        slot: "yarn",
        "set:html": "<div class=\"expressive-code\"><figure class=\"frame is-terminal not-content\"><figcaption class=\"header\"><span class=\"title\"></span><span class=\"sr-only\">Terminal window</span></figcaption><pre data-language=\"shell\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#82AAFF;--1:#3B61B0\">yarn</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#ECC48D;--1:#3B61B0\">add</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#ECC48D;--1:#3B61B0\">@astrojs/ts-plugin</span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"yarn add @astrojs/ts-plugin\"><div></div></button></div></figure></div>"
      })]
    }), "\n", createVNode(Fragment$1, {
      "set:html": "<p>Then, add the following to your <code dir=\"auto\">tsconfig.json</code>:</p>\n<div class=\"expressive-code\"><figure class=\"frame has-title not-content\"><figcaption class=\"header\"><span class=\"title\">tsconfig.json</span></figcaption><pre data-language=\"json\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#D6DEEB;--1:#403F53\">{</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#7FDBCA;--1:#096E72\">\"compilerOptions\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">: {</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">    </span><span style=\"--0:#7FDBCA;--1:#096E72\">\"plugins\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">: [</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">      </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">{</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">        </span><span style=\"--0:#7FDBCA;--1:#096E72\">\"name\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">: </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#C789D6;--1:#7C5686\">@astrojs/ts-plugin</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">      </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">},</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">    </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">],</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">  </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">}</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#D6DEEB;--1:#403F53\">}</span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"{  &#x22;compilerOptions&#x22;: {    &#x22;plugins&#x22;: [      {        &#x22;name&#x22;: &#x22;@astrojs/ts-plugin&#x22;      },    ],  }}\"><div></div></button></div></figure></div>\n<p>To check that the plugin is working, create a <code dir=\"auto\">.ts</code> file and import an Astro component into it. You should have no warning messages from your editor.</p>\n<div class=\"sl-heading-wrapper level-h3\"><h3 id=\"ui-frameworks\">UI Frameworks</h3><a class=\"sl-anchor-link\" href=\"#ui-frameworks\"><span aria-hidden=\"true\" class=\"sl-anchor-icon\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg></span><span class=\"sr-only\">Section titled “UI Frameworks”</span></a></div>\n<p>If your project uses a <a href=\"/en/guides/framework-components/\">UI framework</a>, additional settings depending on the framework might be needed. Please see your framework’s TypeScript documentation for more information. (<a href=\"https://vuejs.org/guide/typescript/overview.html#using-vue-with-typescript\">Vue</a>, <a href=\"https://react-typescript-cheatsheet.netlify.app/docs/basic/setup\">React</a>, <a href=\"https://preactjs.com/guide/v10/typescript\">Preact</a>, <a href=\"https://www.solidjs.com/guides/typescript\">Solid</a>)</p>\n<div class=\"sl-heading-wrapper level-h2\"><h2 id=\"type-imports\">Type Imports</h2><a class=\"sl-anchor-link\" href=\"#type-imports\"><span aria-hidden=\"true\" class=\"sl-anchor-icon\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg></span><span class=\"sr-only\">Section titled “Type Imports”</span></a></div>\n<p>Use explicit type imports and exports whenever possible.</p>\n<div class=\"expressive-code\"><figure class=\"frame not-content\"><figcaption class=\"header\"></figcaption><pre data-language=\"js\"><code><div class=\"ec-line highlight del\"><div class=\"code\"><span style=\"--0:#d0a3ed;--1:#663383\">import</span><span style=\"--0:#D6DEEB;--1:#403F53\"> { SomeType } </span><span style=\"--0:#d0a3ed;--1:#663383\">from</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#723b3a\">./script</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">;</span></div></div><div class=\"ec-line highlight ins\"><div class=\"code\"><span style=\"--0:#d2a6ee;--1:#6a3588\">import</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><ins><span style=\"--0:#dab8f1;--1:#5b2e75\">type</span></ins><span style=\"--0:#D6DEEB;--1:#403F53\"> { SomeType } </span><span style=\"--0:#d2a6ee;--1:#6a3588\">from</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#723b3a\">./script</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">;</span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"import { SomeType } from &#x22;./script&#x22;;import type { SomeType } from &#x22;./script&#x22;;\"><div></div></button></div></figure></div>\n<p>This way, you avoid edge cases where Astro’s bundler may try to incorrectly bundle your imported types as if they were JavaScript.</p>\n<p>You can configure TypeScript to enforce type imports in your <code dir=\"auto\">tsconfig.json</code> file. Set <a href=\"https://www.typescriptlang.org/tsconfig#verbatimModuleSyntax\"><code dir=\"auto\">verbatimModuleSyntax</code></a> to <code dir=\"auto\">true</code>. TypeScript will check your imports and tell you when <code dir=\"auto\">import type</code> should be used. This setting is enabled by default in all our presets.</p>\n<div class=\"expressive-code\"><figure class=\"frame has-title not-content\"><figcaption class=\"header\"><span class=\"title\">tsconfig.json</span></figcaption><pre data-language=\"json\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#D6DEEB;--1:#403F53\">{</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#7FDBCA;--1:#096E72\">\"compilerOptions\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">: {</span></div></div><div class=\"ec-line highlight ins\"><div class=\"code\"><span class=\"indent\">    </span><span style=\"--0:#7FDBCA;--1:#075457\">\"verbatimModuleSyntax\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">: </span><span style=\"--0:#ff99aa;--1:#7a3636\">true</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">  </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">}</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#D6DEEB;--1:#403F53\">}</span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"{  &#x22;compilerOptions&#x22;: {    &#x22;verbatimModuleSyntax&#x22;: true  }}\"><div></div></button></div></figure></div>\n<div class=\"sl-heading-wrapper level-h2\"><h2 id=\"import-aliases\">Import Aliases</h2><a class=\"sl-anchor-link\" href=\"#import-aliases\"><span aria-hidden=\"true\" class=\"sl-anchor-icon\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg></span><span class=\"sr-only\">Section titled “Import Aliases”</span></a></div>\n<p>Astro supports <a href=\"/en/guides/imports/#aliases\">import aliases</a> that you define in your <code dir=\"auto\">tsconfig.json</code> <code dir=\"auto\">paths</code> configuration. <a href=\"/en/guides/imports/#aliases\">Read our guide</a> to learn more.</p>\n<div class=\"expressive-code\"><figure class=\"frame has-title not-content\"><figcaption class=\"header\"><span class=\"title\">src/pages/about/nate.astro</span></figcaption><pre data-language=\"astro\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#919F9F;--1:#5F636F\">---</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">import</span><span style=\"--0:#D6DEEB;--1:#403F53\"> HelloWorld </span><span style=\"--0:#C792EA;--1:#8844AE\">from</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><mark><span style=\"--0:#ECC48D;--1:#804241\">@components</span></mark><span style=\"--0:#ECC48D;--1:#984E4D\">/HelloWorld.astro</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">;</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">import</span><span style=\"--0:#D6DEEB;--1:#403F53\"> Layout </span><span style=\"--0:#C792EA;--1:#8844AE\">from</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><mark><span style=\"--0:#ECC48D;--1:#804241\">@layouts</span></mark><span style=\"--0:#ECC48D;--1:#984E4D\">/Layout.astro</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">;</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#919F9F;--1:#5F636F\">---</span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"---import HelloWorld from &#x22;@components/HelloWorld.astro&#x22;;import Layout from &#x22;@layouts/Layout.astro&#x22;;---\"><div></div></button></div></figure></div>\n<div class=\"expressive-code\"><figure class=\"frame has-title not-content\"><figcaption class=\"header\"><span class=\"title\">tsconfig.json</span></figcaption><pre data-language=\"json\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#D6DEEB;--1:#403F53\">{</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#7FDBCA;--1:#096E72\">\"compilerOptions\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">: {</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">    </span><span style=\"--0:#7FDBCA;--1:#096E72\">\"paths\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">: {</span></div></div><div class=\"ec-line highlight mark\"><div class=\"code\"><span class=\"indent\">      </span><span style=\"--0:#7FDBCA;--1:#085f62\">\"@components/*\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">: [</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#d4a4df;--1:#694971\">src/components/*</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">],</span></div></div><div class=\"ec-line highlight mark\"><div class=\"code\"><span class=\"indent\">      </span><span style=\"--0:#7FDBCA;--1:#085f62\">\"@layouts/*\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">: [</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#d4a4df;--1:#694971\">src/layouts/*</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">]</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">    </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">}</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">  </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">}</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#D6DEEB;--1:#403F53\">}</span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"{  &#x22;compilerOptions&#x22;: {    &#x22;paths&#x22;: {      &#x22;@components/*&#x22;: [&#x22;src/components/*&#x22;],      &#x22;@layouts/*&#x22;: [&#x22;src/layouts/*&#x22;]    }  }}\"><div></div></button></div></figure></div>\n<div class=\"sl-heading-wrapper level-h2\"><h2 id=\"extending-window-and-globalthis\">Extending <code dir=\"auto\">window</code> and <code dir=\"auto\">globalThis</code></h2><a class=\"sl-anchor-link\" href=\"#extending-window-and-globalthis\"><span aria-hidden=\"true\" class=\"sl-anchor-icon\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg></span><span class=\"sr-only\">Section titled “Extending window and globalThis”</span></a></div>\n<p>You may want to add a property to the global object. You can do this by adding top-level declarations using the <code dir=\"auto\">declare</code> keyword to your <code dir=\"auto\">env.d.ts</code> file:</p>\n<div class=\"expressive-code\"><figure class=\"frame has-title not-content\"><figcaption class=\"header\"><span class=\"title\">src/env.d.ts</span></figcaption><pre data-language=\"ts\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">declare var </span><span style=\"--0:#D6DEEB;--1:#403F53\">myString</span><span style=\"--0:#7FDBCA;--1:#096E72\">:</span><span style=\"--0:#C792EA;--1:#8844AE\"> </span><span style=\"--0:#C5E478;--1:#3B61B0\">string</span><span style=\"--0:#D6DEEB;--1:#403F53\">;</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">declare</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#C792EA;--1:#8844AE\">function</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#82AAFF;--1:#3B61B0\">myFunction</span><span style=\"--0:#D9F5DD;--1:#111111\">()</span><span style=\"--0:#7FDBCA;--1:#096E72\">:</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#C5E478;--1:#3B61B0\">boolean</span><span style=\"--0:#D6DEEB;--1:#403F53\">;</span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"declare var myString: string;declare function myFunction(): boolean;\"><div></div></button></div></figure></div>\n<p>This will provide typing to <code dir=\"auto\">globalThis.myString</code> and <code dir=\"auto\">globalThis.myFunction</code>, as well as <code dir=\"auto\">window.myString</code> and <code dir=\"auto\">window.myFunction</code>.</p>\n<p>Note that <code dir=\"auto\">window</code> is only available in client-side code. <code dir=\"auto\">globalThis</code> is available both server-side and client-side, but its server-side value won’t be shared with the client.</p>\n<p>If you only want to type a property on the <code dir=\"auto\">window</code> object, provide a <code dir=\"auto\">Window</code> interface instead:</p>\n<div class=\"expressive-code\"><figure class=\"frame has-title not-content\"><figcaption class=\"header\"><span class=\"title\">src/env.d.ts</span></figcaption><pre data-language=\"ts\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">interface</span><span style=\"--0:#D6DEEB;--1:#403F53\"> Window {</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#82AAFF;--1:#3B61B0\">myFunction</span><span style=\"--0:#D9F5DD;--1:#111111\">()</span><span style=\"--0:#7FDBCA;--1:#096E72\">:</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#C5E478;--1:#3B61B0\">boolean</span><span style=\"--0:#D6DEEB;--1:#403F53\">;</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#D6DEEB;--1:#403F53\">}</span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"interface Window {  myFunction(): boolean;}\"><div></div></button></div></figure></div>\n<div class=\"sl-heading-wrapper level-h2\"><h2 id=\"component-props\">Component Props</h2><a class=\"sl-anchor-link\" href=\"#component-props\"><span aria-hidden=\"true\" class=\"sl-anchor-icon\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg></span><span class=\"sr-only\">Section titled “Component Props”</span></a></div>\n<p>Astro supports typing your component props via TypeScript. To enable, add a TypeScript <code dir=\"auto\">Props</code> interface to your component frontmatter. An <code dir=\"auto\">export</code> statement may be used, but is not necessary. The <a href=\"/en/editor-setup/\">Astro VS Code Extension</a> will automatically look for the <code dir=\"auto\">Props</code> interface and give you proper TS support when you use that component inside another template.</p>\n<div class=\"expressive-code\"><figure class=\"frame has-title not-content\"><figcaption class=\"header\"><span class=\"title\">src/components/HelloProps.astro</span></figcaption><pre data-language=\"astro\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#919F9F;--1:#5F636F\">---</span></div></div><div class=\"ec-line highlight ins\"><div class=\"code\"><span style=\"--0:#d2a6ee;--1:#6a3588\">interface</span><span style=\"--0:#D6DEEB;--1:#403F53\"> Props {</span></div></div><div class=\"ec-line highlight ins\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">  </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">name</span><span style=\"--0:#7FDBCA;--1:#075457\">:</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#C5E478;--1:#2d4a87\">string</span><span style=\"--0:#D6DEEB;--1:#403F53\">;</span></div></div><div class=\"ec-line highlight ins\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">  </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">greeting</span><span style=\"--0:#7FDBCA;--1:#075457\">?:</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#C5E478;--1:#2d4a87\">string</span><span style=\"--0:#D6DEEB;--1:#403F53\">;</span></div></div><div class=\"ec-line highlight ins\"><div class=\"code\"><span style=\"--0:#D6DEEB;--1:#403F53\">}</span></div></div><div class=\"ec-line\"><div class=\"code\">\n</div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">const { </span><span style=\"--0:#82AAFF;--1:#3B61B0\">greeting</span><span style=\"--0:#C792EA;--1:#8844AE\"> = </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#984E4D\">Hello</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#C792EA;--1:#8844AE\">, </span><span style=\"--0:#82AAFF;--1:#3B61B0\">name</span><span style=\"--0:#C792EA;--1:#8844AE\"> } = </span><span style=\"--0:#D6DEEB;--1:#403F53\">Astro</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#7FDBCA;--1:#096E72\">props</span><span style=\"--0:#D6DEEB;--1:#403F53\">;</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#919F9F;--1:#5F636F\">---</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\">&#x3C;</span><span style=\"--0:#CAECE6\">h2</span><span style=\"--0:#7FDBCA\">></span></span><span style=\"--0:#E2817F;--1:#B23834\">{</span><span style=\"--0:#D6DEEB;--1:#403F53\">greeting</span><span style=\"--0:#E2817F;--1:#B23834\">}</span><span style=\"--0:#D6DEEB;--1:#403F53\">, </span><span style=\"--0:#E2817F;--1:#B23834\">{</span><span style=\"--0:#D6DEEB;--1:#403F53\">name</span><span style=\"--0:#E2817F;--1:#B23834\">}</span><span style=\"--0:#D6DEEB;--1:#403F53\">!</span><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\">&#x3C;/</span><span style=\"--0:#CAECE6\">h2</span><span style=\"--0:#7FDBCA\">></span></span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"---interface Props {  name: string;  greeting?: string;}const { greeting = &#x22;Hello&#x22;, name } = Astro.props;---<h2>{greeting}, {name}!</h2>\"><div></div></button></div></figure></div>\n<div class=\"sl-heading-wrapper level-h3\"><h3 id=\"common-prop-type-patterns\">Common prop type patterns</h3><a class=\"sl-anchor-link\" href=\"#common-prop-type-patterns\"><span aria-hidden=\"true\" class=\"sl-anchor-icon\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg></span><span class=\"sr-only\">Section titled “Common prop type patterns”</span></a></div>\n<ul>\n<li>If your component takes no props or slotted content, you can use <code dir=\"auto\">type Props = Record&#x3C;string, never></code>.</li>\n<li>If your component must be passed children to its default slot, you can enforce this by using <code dir=\"auto\">type Props = { children: any; };</code>.</li>\n</ul>\n<div class=\"sl-heading-wrapper level-h2\"><h2 id=\"type-utilities\">Type Utilities</h2><a class=\"sl-anchor-link\" href=\"#type-utilities\"><span aria-hidden=\"true\" class=\"sl-anchor-icon\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg></span><span class=\"sr-only\">Section titled “Type Utilities”</span></a></div>\n"
    }), createVNode(_components.p, {
      children: createVNode($$Since, {
        v: "1.6.0"
      })
    }), "\n", createVNode(Fragment$1, {
      "set:html": "<p>Astro comes with some built-in utility types for common prop type patterns. These are available under the <code dir=\"auto\">astro/types</code> entrypoint.</p>\n<div class=\"sl-heading-wrapper level-h3\"><h3 id=\"built-in-html-attributes\">Built-in HTML attributes</h3><a class=\"sl-anchor-link\" href=\"#built-in-html-attributes\"><span aria-hidden=\"true\" class=\"sl-anchor-icon\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg></span><span class=\"sr-only\">Section titled “Built-in HTML attributes”</span></a></div>\n<p>Astro provides the <code dir=\"auto\">HTMLAttributes</code> type to check that your markup is using valid HTML attributes. You can use these types to help build component props.</p>\n<p>For example, if you were building a <code dir=\"auto\">&#x3C;Link></code> component, you could do the following to mirror the default HTML attributes for <code dir=\"auto\">&#x3C;a></code> tags in your component’s prop types.</p>\n<div class=\"expressive-code\"><figure class=\"frame has-title not-content\"><figcaption class=\"header\"><span class=\"title\">src/components/Link.astro</span></figcaption><pre data-language=\"astro\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#919F9F;--1:#5F636F\">---</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">import</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#C792EA;--1:#8844AE\">type</span><span style=\"--0:#D6DEEB;--1:#403F53\"> { </span><ins><span style=\"--0:#D6DEEB;--1:#403F53\">HTMLAttributes</span></ins><span style=\"--0:#D6DEEB;--1:#403F53\"> } </span><span style=\"--0:#C792EA;--1:#8844AE\">from</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#984E4D\">astro/types</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">;</span></div></div><div class=\"ec-line\"><div class=\"code\">\n</div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#919F9F;--1:#5D6376\">// use a `type`</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">type</span><span style=\"--0:#D6DEEB;--1:#403F53\"> Props </span><span style=\"--0:#C792EA;--1:#8844AE\">=</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><ins><span style=\"--0:#FFCB8B;--1:#111111\">HTMLAttributes</span></ins><span style=\"--0:#D6DEEB;--1:#403F53\">&#x3C;</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#984E4D\">a</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">>;</span></div></div><div class=\"ec-line\"><div class=\"code\">\n</div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#919F9F;--1:#5D6376\">// or extend with an `interface`</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">interface</span><span style=\"--0:#D6DEEB;--1:#403F53\"> Props </span><span style=\"--0:#C792EA;--1:#8844AE\">extends</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><ins><span style=\"--0:#C5E478;--1:#2d4a87\">HTMLAttributes</span></ins><span style=\"--0:#D6DEEB;--1:#403F53\">&#x3C;</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#984E4D\">a</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">> {</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">  </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">myProp</span><span style=\"--0:#7FDBCA;--1:#096E72\">?:</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#C5E478;--1:#3B61B0\">boolean</span><span style=\"--0:#D6DEEB;--1:#403F53\">;</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#D6DEEB;--1:#403F53\">}</span></div></div><div class=\"ec-line\"><div class=\"code\">\n</div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">const { </span><span style=\"--0:#82AAFF;--1:#3B61B0\">href</span><span style=\"--0:#C792EA;--1:#8844AE\">, </span><span style=\"--0:#7FDBCA;--1:#096E72\">...</span><span style=\"--0:#82AAFF;--1:#3B61B0\">attrs</span><span style=\"--0:#C792EA;--1:#8844AE\"> } = </span><span style=\"--0:#D6DEEB;--1:#403F53\">Astro</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#7FDBCA;--1:#096E72\">props</span><span style=\"--0:#D6DEEB;--1:#403F53\">;</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#919F9F;--1:#5F636F\">---</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\">&#x3C;</span><span style=\"--0:#CAECE6\">a</span><span style=\"--0:#7FDBCA\"> </span></span><span style=\"--0:#C5E478;--1:#3B61B0\">href</span><span style=\"--0:#7FDBCA;--1:#8844AE\">=</span><span style=\"--0:#E2817F;--1:#B23834\">{</span><span style=\"--0:#D6DEEB;--1:#403F53\">href</span><span style=\"--0:#E2817F;--1:#B23834\">}</span><span style=\"--0:#7FDBCA;--1:#8844AE\"> {</span><span style=\"--0:#7FDBCA;--1:#096E72\">...</span><span style=\"--0:#D6DEEB;--1:#403F53\">attrs</span><span style=\"--0:#7FDBCA;--1:#8844AE\">}></span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\">&#x3C;</span><span style=\"--0:#CAECE6\">slot</span><span style=\"--0:#7FDBCA\"> /></span></span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\">&#x3C;/</span><span style=\"--0:#CAECE6\">a</span><span style=\"--0:#7FDBCA\">></span></span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"---import type { HTMLAttributes } from &#x22;astro/types&#x22;;// use a &#x60;type&#x60;type Props = HTMLAttributes<&#x22;a&#x22;>;// or extend with an &#x60;interface&#x60;interface Props extends HTMLAttributes<&#x22;a&#x22;> {  myProp?: boolean;}const { href, ...attrs } = Astro.props;---<a href={href} {...attrs}>  <slot /></a>\"><div></div></button></div></figure></div>\n<p>It is also possible to extend the default JSX definitions to add non-standard attributes by redeclaring the <code dir=\"auto\">astroHTML.JSX</code> namespace in a <code dir=\"auto\">.d.ts</code> file.</p>\n<div class=\"expressive-code\"><figure class=\"frame has-title not-content\"><figcaption class=\"header\"><span class=\"title\">src/custom-attributes.d.ts</span></figcaption><pre data-language=\"ts\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">declare</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#C792EA;--1:#8844AE\">namespace</span><span style=\"--0:#D6DEEB;--1:#403F53\"> astroHTML</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#D6DEEB;--1:#403F53\">JSX {</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#C792EA;--1:#8844AE\">interface</span><span style=\"--0:#D6DEEB;--1:#403F53\"> HTMLAttributes {</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">    </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#984E4D\">data-count</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#7FDBCA;--1:#096E72\">?:</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#C5E478;--1:#3B61B0\">number</span><span style=\"--0:#D6DEEB;--1:#403F53\">;</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">    </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#984E4D\">data-label</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#7FDBCA;--1:#096E72\">?:</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#C5E478;--1:#3B61B0\">string</span><span style=\"--0:#D6DEEB;--1:#403F53\">;</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">  </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">}</span></div></div><div class=\"ec-line\"><div class=\"code\">\n</div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#919F9F;--1:#5D6376\">// Add a CSS custom property to the style object</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#C792EA;--1:#8844AE\">interface</span><span style=\"--0:#D6DEEB;--1:#403F53\"> CSSProperties {</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">    </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#984E4D\">--theme-color</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#7FDBCA;--1:#096E72\">?:</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#984E4D\">black</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#7FDBCA;--1:#096E72\">|</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#984E4D\">white</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">;</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">  </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">}</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#D6DEEB;--1:#403F53\">}</span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"declare namespace astroHTML.JSX {  interface HTMLAttributes {    &#x22;data-count&#x22;?: number;    &#x22;data-label&#x22;?: string;  }  // Add a CSS custom property to the style object  interface CSSProperties {    &#x22;--theme-color&#x22;?: &#x22;black&#x22; | &#x22;white&#x22;;  }}\"><div></div></button></div></figure></div>\n<aside aria-label=\"Note\" class=\"starlight-aside starlight-aside--note\"><p class=\"starlight-aside__title\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"starlight-aside__icon\"><path d=\"M12 11C11.7348 11 11.4804 11.1054 11.2929 11.2929C11.1054 11.4804 11 11.7348 11 12V16C11 16.2652 11.1054 16.5196 11.2929 16.7071C11.4804 16.8946 11.7348 17 12 17C12.2652 17 12.5196 16.8946 12.7071 16.7071C12.8946 16.5196 13 16.2652 13 16V12C13 11.7348 12.8946 11.4804 12.7071 11.2929C12.5196 11.1054 12.2652 11 12 11ZM12.38 7.08C12.1365 6.97998 11.8635 6.97998 11.62 7.08C11.4973 7.12759 11.3851 7.19896 11.29 7.29C11.2017 7.3872 11.1306 7.49882 11.08 7.62C11.024 7.73868 10.9966 7.86882 11 8C10.9992 8.13161 11.0245 8.26207 11.0742 8.38391C11.124 8.50574 11.1973 8.61656 11.29 8.71C11.3872 8.79833 11.4988 8.86936 11.62 8.92C11.7715 8.98224 11.936 9.00632 12.099 8.99011C12.2619 8.97391 12.4184 8.91792 12.5547 8.82707C12.691 8.73622 12.8029 8.61328 12.8805 8.46907C12.9582 8.32486 12.9992 8.16378 13 8C12.9963 7.73523 12.8927 7.48163 12.71 7.29C12.6149 7.19896 12.5028 7.12759 12.38 7.08ZM12 2C10.0222 2 8.08879 2.58649 6.4443 3.6853C4.79981 4.78412 3.51809 6.3459 2.76121 8.17317C2.00433 10.0004 1.8063 12.0111 2.19215 13.9509C2.578 15.8907 3.53041 17.6725 4.92894 19.0711C6.32746 20.4696 8.10929 21.422 10.0491 21.8079C11.9889 22.1937 13.9996 21.9957 15.8268 21.2388C17.6541 20.4819 19.2159 19.2002 20.3147 17.5557C21.4135 15.9112 22 13.9778 22 12C22 10.6868 21.7413 9.38642 21.2388 8.17317C20.7363 6.95991 19.9997 5.85752 19.0711 4.92893C18.1425 4.00035 17.0401 3.26375 15.8268 2.7612C14.6136 2.25866 13.3132 2 12 2ZM12 20C10.4178 20 8.87104 19.5308 7.55544 18.6518C6.23985 17.7727 5.21447 16.5233 4.60897 15.0615C4.00347 13.5997 3.84504 11.9911 4.15372 10.4393C4.4624 8.88743 5.22433 7.46197 6.34315 6.34315C7.46197 5.22433 8.88743 4.4624 10.4393 4.15372C11.9911 3.84504 13.5997 4.00346 15.0615 4.60896C16.5233 5.21447 17.7727 6.23984 18.6518 7.55544C19.5308 8.87103 20 10.4177 20 12C20 14.1217 19.1572 16.1566 17.6569 17.6569C16.1566 19.1571 14.1217 20 12 20Z\"></path></svg>Note</p><div class=\"starlight-aside__content\"><p><code dir=\"auto\">astroHTML</code> is injected globally inside <code dir=\"auto\">.astro</code> components. To use it in TypeScript files, use a <a href=\"https://www.typescriptlang.org/docs/handbook/triple-slash-directives.html\">triple-slash directive</a>:</p><div class=\"expressive-code\"><figure class=\"frame not-content\"><figcaption class=\"header\"></figcaption><pre data-language=\"ts\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#919F9F;--1:#5F636F\">/// </span><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\">&#x3C;</span><span style=\"--0:#CAECE6\">reference</span><span style=\"--0:#7FDBCA\"> </span></span><span style=\"--0:#C5E478;--1:#3B61B0\">types</span><span style=\"--0:#C792EA;--1:#8844AE\">=</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#984E4D\">astro/astro-jsx</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#7FDBCA;--1:#8844AE\"> /></span></div></div><div class=\"ec-line\"><div class=\"code\">\n</div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">type</span><span style=\"--0:#D6DEEB;--1:#403F53\"> MyAttributes </span><span style=\"--0:#C792EA;--1:#8844AE\">=</span><span style=\"--0:#D6DEEB;--1:#403F53\"> astroHTML</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#D6DEEB;--1:#403F53\">JSX</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#FFCB8B;--1:#111111\">ImgHTMLAttributes</span><span style=\"--0:#D6DEEB;--1:#403F53\">;</span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"/// <reference types=&#x22;astro/astro-jsx&#x22; />type MyAttributes = astroHTML.JSX.ImgHTMLAttributes;\"><div></div></button></div></figure></div></div></aside>\n<div class=\"sl-heading-wrapper level-h3\"><h3 id=\"componentprops-type\"><code dir=\"auto\">ComponentProps</code> type</h3><a class=\"sl-anchor-link\" href=\"#componentprops-type\"><span aria-hidden=\"true\" class=\"sl-anchor-icon\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg></span><span class=\"sr-only\">Section titled “ComponentProps type”</span></a></div>\n"
    }), createVNode(_components.p, {
      children: createVNode($$Since, {
        v: "4.3.0"
      })
    }), "\n", createVNode(Fragment$1, {
      "set:html": "<p>This type export allows you to reference the <code dir=\"auto\">Props</code> accepted by another component, even if that component doesn’t export that <code dir=\"auto\">Props</code> type directly.</p>\n<p>The following example shows using the <code dir=\"auto\">ComponentProps</code> utility from <code dir=\"auto\">astro/types</code> to reference a <code dir=\"auto\">&#x3C;Button /></code> component’s <code dir=\"auto\">Props</code> types:</p>\n<div class=\"expressive-code\"><figure class=\"frame has-title not-content\"><figcaption class=\"header\"><span class=\"title\">src/pages/index.astro</span></figcaption><pre data-language=\"astro\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#919F9F;--1:#5F636F\">---</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">import</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#C792EA;--1:#8844AE\">type</span><span style=\"--0:#D6DEEB;--1:#403F53\"> { ComponentProps } </span><span style=\"--0:#C792EA;--1:#8844AE\">from</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#984E4D\">astro/types</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">;</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">import</span><span style=\"--0:#D6DEEB;--1:#403F53\"> Button </span><span style=\"--0:#C792EA;--1:#8844AE\">from</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#984E4D\">./Button.astro</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">;</span></div></div><div class=\"ec-line\"><div class=\"code\">\n</div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">type</span><span style=\"--0:#D6DEEB;--1:#403F53\"> ButtonProps </span><span style=\"--0:#C792EA;--1:#8844AE\">=</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#FFCB8B;--1:#111111\">ComponentProps</span><span style=\"--0:#D6DEEB;--1:#403F53\">&#x3C;</span><span style=\"--0:#7FDBCA;--1:#096E72\">typeof</span><span style=\"--0:#D6DEEB;--1:#403F53\"> Button>;</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#919F9F;--1:#5F636F\">---</span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"---import type { ComponentProps } from &#x22;astro/types&#x22;;import Button from &#x22;./Button.astro&#x22;;type ButtonProps = ComponentProps<typeof Button>;---\"><div></div></button></div></figure></div>\n<div class=\"sl-heading-wrapper level-h3\"><h3 id=\"polymorphic-type\">Polymorphic type</h3><a class=\"sl-anchor-link\" href=\"#polymorphic-type\"><span aria-hidden=\"true\" class=\"sl-anchor-icon\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg></span><span class=\"sr-only\">Section titled “Polymorphic type”</span></a></div>\n"
    }), createVNode(_components.p, {
      children: createVNode($$Since, {
        v: "2.5.0"
      })
    }), "\n", createVNode(Fragment$1, {
      "set:html": "<p>Astro includes a helper to make it easier to build components that can render as different HTML elements with full type safety. This is useful for components like <code dir=\"auto\">&#x3C;Link></code> that can render as either <code dir=\"auto\">&#x3C;a></code> or <code dir=\"auto\">&#x3C;button></code> depending on the props passed to it.</p>\n<p>The example below implements a fully-typed, polymorphic component that can render as any HTML element. The <a href=\"#built-in-html-attributes\"><code dir=\"auto\">HTMLTag</code></a> type is used to ensure that the <code dir=\"auto\">as</code> prop is a valid HTML element.</p>\n<div class=\"expressive-code\"><figure class=\"frame not-content\"><figcaption class=\"header\"></figcaption><pre data-language=\"astro\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#919F9F;--1:#5F636F\">---</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">import</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#C792EA;--1:#8844AE\">type</span><span style=\"--0:#D6DEEB;--1:#403F53\"> { HTMLTag, Polymorphic } </span><span style=\"--0:#C792EA;--1:#8844AE\">from</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#984E4D\">astro/types</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">;</span></div></div><div class=\"ec-line\"><div class=\"code\">\n</div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">type</span><span style=\"--0:#D6DEEB;--1:#403F53\"> Props&#x3C;</span><span style=\"--0:#FFCB8B;--1:#111111\">Tag</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#C792EA;--1:#8844AE\">extends</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#FFCB8B;--1:#111111\">HTMLTag</span><span style=\"--0:#D6DEEB;--1:#403F53\">> </span><span style=\"--0:#C792EA;--1:#8844AE\">=</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#FFCB8B;--1:#111111\">Polymorphic</span><span style=\"--0:#D6DEEB;--1:#403F53\">&#x3C;{ as</span><span style=\"--0:#7FDBCA;--1:#096E72\">:</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#FFCB8B;--1:#111111\">Tag</span><span style=\"--0:#D6DEEB;--1:#403F53\"> }>;</span></div></div><div class=\"ec-line\"><div class=\"code\">\n</div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">const { </span><span style=\"--0:#D6DEEB;--1:#403F53\">as</span><span style=\"--0:#C792EA;--1:#8844AE\">: </span><span style=\"--0:#82AAFF;--1:#3B61B0\">Tag</span><span style=\"--0:#C792EA;--1:#8844AE\">, </span><span style=\"--0:#7FDBCA;--1:#096E72\">...</span><span style=\"--0:#82AAFF;--1:#3B61B0\">props</span><span style=\"--0:#C792EA;--1:#8844AE\"> } = </span><span style=\"--0:#D6DEEB;--1:#403F53\">Astro</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#7FDBCA;--1:#096E72\">props</span><span style=\"--0:#D6DEEB;--1:#403F53\">;</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#919F9F;--1:#5F636F\">---</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#7FDBCA;--1:#8844AE\">&#x3C;</span><span style=\"--0:#C5E478;--1:#3B61B0\">Tag</span><span style=\"--0:#7FDBCA;--1:#8844AE\"> {</span><span style=\"--0:#7FDBCA;--1:#096E72\">...</span><span style=\"--0:#D6DEEB;--1:#403F53\">props</span><span style=\"--0:#7FDBCA;--1:#8844AE\">} /></span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"---import type { HTMLTag, Polymorphic } from &#x22;astro/types&#x22;;type Props<Tag extends HTMLTag> = Polymorphic<{ as: Tag }>;const { as: Tag, ...props } = Astro.props;---<Tag {...props} />\"><div></div></button></div></figure></div>\n<div class=\"sl-heading-wrapper level-h3\"><h3 id=\"infer-getstaticpaths-types\">Infer <code dir=\"auto\">getStaticPaths()</code> types</h3><a class=\"sl-anchor-link\" href=\"#infer-getstaticpaths-types\"><span aria-hidden=\"true\" class=\"sl-anchor-icon\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg></span><span class=\"sr-only\">Section titled “Infer getStaticPaths() types”</span></a></div>\n"
    }), createVNode(_components.p, {
      children: createVNode($$Since, {
        v: "2.1.0"
      })
    }), "\n", createVNode(Fragment$1, {
      "set:html": "<p>Astro includes helpers for working with the types returned by your <a href=\"/en/reference/routing-reference/#getstaticpaths\"><code dir=\"auto\">getStaticPaths()</code></a> function for dynamic routes.</p>\n<p>You can get the type of <a href=\"/en/reference/api-reference/#params\"><code dir=\"auto\">Astro.params</code></a> with <code dir=\"auto\">InferGetStaticParamsType</code> and the type of <a href=\"/en/reference/api-reference/#props\"><code dir=\"auto\">Astro.props</code></a> with <code dir=\"auto\">InferGetStaticPropsType</code> or you can use <code dir=\"auto\">GetStaticPaths</code> to infer both at once:</p>\n<div class=\"expressive-code\"><figure class=\"frame has-title not-content\"><figcaption class=\"header\"><span class=\"title\">src/pages/posts/[...id].astro</span></figcaption><pre data-language=\"astro\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#919F9F;--1:#5F636F\">---</span></div></div><div class=\"ec-line highlight mark\"><div class=\"code\"><span style=\"--0:#d0a4ed;--1:#753a96\">import</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#d0a4ed;--1:#753a96\">type</span><span style=\"--0:#D6DEEB;--1:#403F53\"> {</span></div></div><div class=\"ec-line highlight mark\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">  </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">InferGetStaticParamsType,</span></div></div><div class=\"ec-line highlight mark\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">  </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">InferGetStaticPropsType,</span></div></div><div class=\"ec-line highlight mark\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">  </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">GetStaticPaths,</span></div></div><div class=\"ec-line highlight mark\"><div class=\"code\"><span style=\"--0:#D6DEEB;--1:#403F53\">} </span><span style=\"--0:#d0a4ed;--1:#753a96\">from</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#804241\">astro</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">;</span></div></div><div class=\"ec-line\"><div class=\"code\">\n</div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">export const </span><span style=\"--0:#82AAFF;--1:#3B61B0\">getStaticPaths</span><span style=\"--0:#C792EA;--1:#8844AE\"> = </span><span style=\"--0:#D6DEEB;--1:#403F53\">(</span><span style=\"--0:#C792EA;--1:#8844AE\">async </span><span style=\"--0:#D9F5DD;--1:#111111\">()</span><span style=\"--0:#C792EA;--1:#8844AE\"> => {</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#C792EA;--1:#8844AE\">  </span></span><span style=\"--0:#C792EA;--1:#8844AE\">const </span><span style=\"--0:#82AAFF;--1:#3B61B0\">posts</span><span style=\"--0:#C792EA;--1:#8844AE\"> = await </span><span style=\"--0:#82AAFF;--1:#3B61B0\">getCollection</span><span style=\"--0:#D6DEEB;--1:#403F53\">(</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#984E4D\">blog</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">)</span><span style=\"--0:#C792EA;--1:#8844AE\">;</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#C792EA;--1:#8844AE\">  </span></span><span style=\"--0:#C792EA;--1:#8844AE\">return </span><span style=\"--0:#D6DEEB;--1:#403F53\">posts</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#82AAFF;--1:#3B61B0\">map</span><span style=\"--0:#D6DEEB;--1:#403F53\">(</span><span style=\"--0:#D9F5DD;--1:#111111\">(</span><span style=\"--0:#D7DBE0;--1:#403F53\">post</span><span style=\"--0:#D9F5DD;--1:#111111\">)</span><span style=\"--0:#C792EA;--1:#8844AE\"> => {</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#C792EA;--1:#8844AE\">    </span></span><span style=\"--0:#C792EA;--1:#8844AE\">return {</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#C792EA;--1:#8844AE\">      </span></span><span style=\"--0:#C792EA;--1:#8844AE\">params: { id: </span><span style=\"--0:#D6DEEB;--1:#403F53\">post</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#7FDBCA;--1:#096E72\">id</span><span style=\"--0:#C792EA;--1:#8844AE\"> },</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#C792EA;--1:#8844AE\">      </span></span><span style=\"--0:#C792EA;--1:#8844AE\">props: { draft: </span><span style=\"--0:#D6DEEB;--1:#403F53\">post</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#FAF39F;--1:#111111\">data</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#7FDBCA;--1:#096E72\">draft</span><span style=\"--0:#C792EA;--1:#8844AE\">, title: </span><span style=\"--0:#D6DEEB;--1:#403F53\">post</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#FAF39F;--1:#111111\">data</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#7FDBCA;--1:#096E72\">title</span><span style=\"--0:#C792EA;--1:#8844AE\"> },</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#C792EA;--1:#8844AE\">    </span></span><span style=\"--0:#C792EA;--1:#8844AE\">};</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#C792EA;--1:#8844AE\">  </span></span><span style=\"--0:#C792EA;--1:#8844AE\">}</span><span style=\"--0:#D6DEEB;--1:#403F53\">)</span><span style=\"--0:#C792EA;--1:#8844AE\">;</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">}</span><span style=\"--0:#D6DEEB;--1:#403F53\">)</span><span style=\"--0:#C792EA;--1:#8844AE\"> </span><mark><span style=\"--0:#d0a4ed;--1:#753a96\">satisfies </span><span style=\"--0:#FFCB8B;--1:#111111\">GetStaticPaths</span><span style=\"--0:#D6DEEB;--1:#403F53\">;</span></mark></div></div><div class=\"ec-line\"><div class=\"code\">\n</div></div><div class=\"ec-line highlight mark\"><div class=\"code\"><span style=\"--0:#d0a4ed;--1:#753a96\">type</span><span style=\"--0:#D6DEEB;--1:#403F53\"> Params </span><span style=\"--0:#d0a4ed;--1:#753a96\">=</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#FFCB8B;--1:#111111\">InferGetStaticParamsType</span><span style=\"--0:#D6DEEB;--1:#403F53\">&#x3C;</span><span style=\"--0:#7FDBCA;--1:#085f62\">typeof</span><span style=\"--0:#D6DEEB;--1:#403F53\"> getStaticPaths>;</span></div></div><div class=\"ec-line highlight mark\"><div class=\"code\"><span style=\"--0:#d0a4ed;--1:#753a96\">type</span><span style=\"--0:#D6DEEB;--1:#403F53\"> Props </span><span style=\"--0:#d0a4ed;--1:#753a96\">=</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#FFCB8B;--1:#111111\">InferGetStaticPropsType</span><span style=\"--0:#D6DEEB;--1:#403F53\">&#x3C;</span><span style=\"--0:#7FDBCA;--1:#085f62\">typeof</span><span style=\"--0:#D6DEEB;--1:#403F53\"> getStaticPaths>;</span></div></div><div class=\"ec-line\"><div class=\"code\">\n</div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">const { </span><span style=\"--0:#82AAFF;--1:#3B61B0\">id</span><span style=\"--0:#C792EA;--1:#8844AE\"> } = </span><span style=\"--0:#D6DEEB;--1:#403F53\">Astro</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#7FDBCA;--1:#096E72\">params</span><span style=\"--0:#C792EA;--1:#8844AE\"> as </span><span style=\"--0:#FFCB8B;--1:#111111\">Params</span><span style=\"--0:#D6DEEB;--1:#403F53\">;</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#919F9F;--1:#5D6376\">//                   ^? { id: string; }</span></div></div><div class=\"ec-line\"><div class=\"code\">\n</div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">const { </span><span style=\"--0:#82AAFF;--1:#3B61B0\">title</span><span style=\"--0:#C792EA;--1:#8844AE\"> } = </span><span style=\"--0:#D6DEEB;--1:#403F53\">Astro</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#7FDBCA;--1:#096E72\">props</span><span style=\"--0:#D6DEEB;--1:#403F53\">;</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#919F9F;--1:#5D6376\">//                      ^? { draft: boolean; title: string; }</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#919F9F;--1:#5F636F\">---</span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"---import type {  InferGetStaticParamsType,  InferGetStaticPropsType,  GetStaticPaths,} from &#x22;astro&#x22;;export const getStaticPaths = (async () => {  const posts = await getCollection(&#x22;blog&#x22;);  return posts.map((post) => {    return {      params: { id: post.id },      props: { draft: post.data.draft, title: post.data.title },    };  });}) satisfies GetStaticPaths;type Params = InferGetStaticParamsType<typeof getStaticPaths>;type Props = InferGetStaticPropsType<typeof getStaticPaths>;const { id } = Astro.params as Params;//                   ^? { id: string; }const { title } = Astro.props;//                      ^? { draft: boolean; title: string; }---\"><div></div></button></div></figure></div>\n<div class=\"sl-heading-wrapper level-h2\"><h2 id=\"type-checking\">Type checking</h2><a class=\"sl-anchor-link\" href=\"#type-checking\"><span aria-hidden=\"true\" class=\"sl-anchor-icon\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg></span><span class=\"sr-only\">Section titled “Type checking”</span></a></div>\n<p>To see type errors in your editor, please make sure that you have the <a href=\"/en/editor-setup/\">Astro VS Code extension</a> installed. Please note that the <code dir=\"auto\">astro start</code> and <code dir=\"auto\">astro build</code> commands will transpile the code with esbuild, but will not run any type checking. To prevent your code from building if it contains TypeScript errors, change your “build” script in <code dir=\"auto\">package.json</code> to the following:</p>\n<div class=\"expressive-code\"><figure class=\"frame has-title not-content\"><figcaption class=\"header\"><span class=\"title\">package.json</span></figcaption><pre data-language=\"json\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#D6DEEB;--1:#403F53\">{</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#7FDBCA;--1:#096E72\">\"scripts\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">: {</span></div></div><div class=\"ec-line highlight del\"><div class=\"code\"><span class=\"indent\">    </span><span style=\"--0:#7FDBCA;--1:#075356\">\"build\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">: </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#d4a4df;--1:#5d4165\">astro build</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">,</span></div></div><div class=\"ec-line highlight ins\"><div class=\"code\"><span class=\"indent\">    </span><span style=\"--0:#7FDBCA;--1:#075457\">\"build\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">: </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><ins><span style=\"--0:#ddb8e6;--1:#533a5a\">astro check &#x26;&#x26;</span></ins><span style=\"--0:#d5a7e0;--1:#5d4165\"> astro build</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">  </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">},</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#D6DEEB;--1:#403F53\">}</span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"{  &#x22;scripts&#x22;: {    &#x22;build&#x22;: &#x22;astro build&#x22;,    &#x22;build&#x22;: &#x22;astro check &#x26;&#x26; astro build&#x22;,  },}\"><div></div></button></div></figure></div>\n<aside aria-label=\"Note\" class=\"starlight-aside starlight-aside--note\"><p class=\"starlight-aside__title\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"starlight-aside__icon\"><path d=\"M12 11C11.7348 11 11.4804 11.1054 11.2929 11.2929C11.1054 11.4804 11 11.7348 11 12V16C11 16.2652 11.1054 16.5196 11.2929 16.7071C11.4804 16.8946 11.7348 17 12 17C12.2652 17 12.5196 16.8946 12.7071 16.7071C12.8946 16.5196 13 16.2652 13 16V12C13 11.7348 12.8946 11.4804 12.7071 11.2929C12.5196 11.1054 12.2652 11 12 11ZM12.38 7.08C12.1365 6.97998 11.8635 6.97998 11.62 7.08C11.4973 7.12759 11.3851 7.19896 11.29 7.29C11.2017 7.3872 11.1306 7.49882 11.08 7.62C11.024 7.73868 10.9966 7.86882 11 8C10.9992 8.13161 11.0245 8.26207 11.0742 8.38391C11.124 8.50574 11.1973 8.61656 11.29 8.71C11.3872 8.79833 11.4988 8.86936 11.62 8.92C11.7715 8.98224 11.936 9.00632 12.099 8.99011C12.2619 8.97391 12.4184 8.91792 12.5547 8.82707C12.691 8.73622 12.8029 8.61328 12.8805 8.46907C12.9582 8.32486 12.9992 8.16378 13 8C12.9963 7.73523 12.8927 7.48163 12.71 7.29C12.6149 7.19896 12.5028 7.12759 12.38 7.08ZM12 2C10.0222 2 8.08879 2.58649 6.4443 3.6853C4.79981 4.78412 3.51809 6.3459 2.76121 8.17317C2.00433 10.0004 1.8063 12.0111 2.19215 13.9509C2.578 15.8907 3.53041 17.6725 4.92894 19.0711C6.32746 20.4696 8.10929 21.422 10.0491 21.8079C11.9889 22.1937 13.9996 21.9957 15.8268 21.2388C17.6541 20.4819 19.2159 19.2002 20.3147 17.5557C21.4135 15.9112 22 13.9778 22 12C22 10.6868 21.7413 9.38642 21.2388 8.17317C20.7363 6.95991 19.9997 5.85752 19.0711 4.92893C18.1425 4.00035 17.0401 3.26375 15.8268 2.7612C14.6136 2.25866 13.3132 2 12 2ZM12 20C10.4178 20 8.87104 19.5308 7.55544 18.6518C6.23985 17.7727 5.21447 16.5233 4.60897 15.0615C4.00347 13.5997 3.84504 11.9911 4.15372 10.4393C4.4624 8.88743 5.22433 7.46197 6.34315 6.34315C7.46197 5.22433 8.88743 4.4624 10.4393 4.15372C11.9911 3.84504 13.5997 4.00346 15.0615 4.60896C16.5233 5.21447 17.7727 6.23984 18.6518 7.55544C19.5308 8.87103 20 10.4177 20 12C20 14.1217 19.1572 16.1566 17.6569 17.6569C16.1566 19.1571 14.1217 20 12 20Z\"></path></svg>Note</p><div class=\"starlight-aside__content\"><p><code dir=\"auto\">astro check</code> checks all the files included in your TypeScript project. To check types within Svelte and Vue files, you can use the <a href=\"https://www.npmjs.com/package/svelte-check\"><code dir=\"auto\">svelte-check</code></a> and the <a href=\"https://www.npmjs.com/package/vue-tsc\"><code dir=\"auto\">vue-tsc</code></a> packages respectively.</p></div></aside>\n"
    }), "\n", createVNode($$ReadMore, {
      "set:html": "Read more about <a href=\"/en/guides/imports/#typescript\"><code dir=\"auto\">.ts</code> file imports</a> in Astro."
    }), "\n", createVNode($$ReadMore, {
      "set:html": "Read more about <a href=\"https://www.typescriptlang.org/tsconfig/\">TypeScript Configuration</a>."
    }), "\n", createVNode(Fragment$1, {
      "set:html": "<div class=\"sl-heading-wrapper level-h2\"><h2 id=\"troubleshooting\">Troubleshooting</h2><a class=\"sl-anchor-link\" href=\"#troubleshooting\"><span aria-hidden=\"true\" class=\"sl-anchor-icon\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg></span><span class=\"sr-only\">Section titled “Troubleshooting”</span></a></div>\n<div class=\"sl-heading-wrapper level-h3\"><h3 id=\"errors-typing-multiple-jsx-frameworks-at-the-same-time\">Errors typing multiple JSX frameworks at the same time</h3><a class=\"sl-anchor-link\" href=\"#errors-typing-multiple-jsx-frameworks-at-the-same-time\"><span aria-hidden=\"true\" class=\"sl-anchor-icon\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg></span><span class=\"sr-only\">Section titled “Errors typing multiple JSX frameworks at the same time”</span></a></div>\n<p>An issue may arise when using multiple JSX frameworks in the same project, as each framework requires different, sometimes conflicting, settings inside <code dir=\"auto\">tsconfig.json</code>.</p>\n<p><strong>Solution</strong>: Set the <a href=\"https://www.typescriptlang.org/tsconfig#jsxImportSource\"><code dir=\"auto\">jsxImportSource</code> setting</a> to <code dir=\"auto\">react</code> (default), <code dir=\"auto\">preact</code> or <code dir=\"auto\">solid-js</code> depending on your most-used framework. Then, use a <a href=\"https://www.typescriptlang.org/docs/handbook/jsx.html#configuring-jsx\">pragma comment</a> inside any conflicting file from a different framework.</p>\n<p>For the default setting of <code dir=\"auto\">jsxImportSource: react</code>, you would use:</p>\n<div class=\"expressive-code\"><figure class=\"frame not-content\"><figcaption class=\"header\"></figcaption><pre data-language=\"jsx\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#919F9F;--1:#5D6376\">// For Preact</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#919F9F;--1:#5F636F\">/** </span><span style=\"--0:#C792EA;--1:#8844AE\">@jsxImportSource</span><span style=\"--0:#919F9F;--1:#5F636F\"> preact */</span></div></div><div class=\"ec-line\"><div class=\"code\">\n</div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#919F9F;--1:#5D6376\">// For Solid</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#919F9F;--1:#5F636F\">/** </span><span style=\"--0:#C792EA;--1:#8844AE\">@jsxImportSource</span><span style=\"--0:#919F9F;--1:#5F636F\"> solid-js */</span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"// For Preact/** @jsxImportSource preact */// For Solid/** @jsxImportSource solid-js */\"><div></div></button></div></figure></div>"
    })]
  });
}
function MDXContent(props = {}) {
  const {wrapper: MDXLayout} = props.components || ({});
  return MDXLayout ? createVNode(MDXLayout, {
    ...props,
    children: createVNode(_createMdxContent, {
      ...props
    })
  }) : _createMdxContent(props);
}
function _missingMdxReference(id, component) {
  throw new Error("Expected " + ("component" ) + " `" + id + "` to be defined: you likely forgot to import, pass, or provide it.");
}

const url = "src/content/docs/en/guides/typescript.mdx/";
const file = "/Users/chasepursley/Development/ai/star-support/src/content/docs/en/guides/typescript.mdx";
const Content = (props = {}) => MDXContent({
  ...props,
  components: { Fragment: Fragment, ...props.components, },
});
Content[Symbol.for('mdx-component')] = true;
Content[Symbol.for('astro.needsHeadRendering')] = !Boolean(frontmatter.layout);
Content.moduleId = "/Users/chasepursley/Development/ai/star-support/src/content/docs/en/guides/typescript.mdx";
__astro_tag_component__(Content, 'astro:jsx');

export { Content, Content as default, file, frontmatter, getHeadings, url };
