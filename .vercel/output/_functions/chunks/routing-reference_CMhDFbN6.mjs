import { d as createVNode, K as Fragment, b5 as __astro_tag_component__ } from './astro/server_CeKHpNWz.mjs';
import { $ as $$Since } from './Since_BJvBqJyZ.mjs';
import './PackageManagerTabs_DXh8l6mS.mjs';
import './ReadMore_CcGJl1uo.mjs';

const frontmatter = {
  "title": "Routing Reference",
  "i18nReady": true,
  "tableOfContents": {
    "minHeadingLevel": 2,
    "maxHeadingLevel": 4
  }
};
function getHeadings() {
  return [{
    "depth": 2,
    "slug": "prerender",
    "text": "prerender"
  }, {
    "depth": 3,
    "slug": "per-page-override",
    "text": "Per-page override"
  }, {
    "depth": 3,
    "slug": "switch-to-server-mode",
    "text": "Switch to server mode"
  }, {
    "depth": 2,
    "slug": "partial",
    "text": "partial"
  }, {
    "depth": 2,
    "slug": "getstaticpaths",
    "text": "getStaticPaths()"
  }, {
    "depth": 3,
    "slug": "params",
    "text": "params"
  }, {
    "depth": 3,
    "slug": "data-passing-with-props",
    "text": "Data passing with props"
  }, {
    "depth": 3,
    "slug": "paginate",
    "text": "paginate()"
  }, {
    "depth": 4,
    "slug": "the-pagination-page-prop",
    "text": "The pagination page prop"
  }, {
    "depth": 5,
    "slug": "pagedata",
    "text": "page.data"
  }, {
    "depth": 5,
    "slug": "pagestart",
    "text": "page.start"
  }, {
    "depth": 5,
    "slug": "pageend",
    "text": "page.end"
  }, {
    "depth": 5,
    "slug": "pagesize",
    "text": "page.size"
  }, {
    "depth": 5,
    "slug": "pagetotal",
    "text": "page.total"
  }, {
    "depth": 5,
    "slug": "pagecurrentpage",
    "text": "page.currentPage"
  }, {
    "depth": 5,
    "slug": "pagelastpage",
    "text": "page.lastPage"
  }, {
    "depth": 5,
    "slug": "pageurlcurrent",
    "text": "page.url.current"
  }, {
    "depth": 5,
    "slug": "pageurlprev",
    "text": "page.url.prev"
  }, {
    "depth": 5,
    "slug": "pageurlnext",
    "text": "page.url.next"
  }, {
    "depth": 5,
    "slug": "pageurlfirst",
    "text": "page.url.first"
  }, {
    "depth": 5,
    "slug": "pageurllast",
    "text": "page.url.last"
  }];
}
function _createMdxContent(props) {
  const _components = {
    br: "br",
    code: "code",
    p: "p",
    strong: "strong",
    ...props.components
  }, { Fragment: Fragment$1 } = _components;
  if (!Fragment$1) _missingMdxReference("Fragment");
  return createVNode(Fragment, {
    children: [createVNode(Fragment$1, {
      "set:html": '<p>There is no separate routing configuration in Astro.</p>\n<p>Every <a href="/en/basics/astro-pages/#supported-page-files">supported page file</a> located within the special <code dir="auto">src/pages/</code> directory creates a route. When the file name contains a <a href="#params">parameter</a>, a route can create multiple pages dynamically, otherwise it creates a single page.</p>\n<p>By default, all Astro page routes and endpoints are generated and prerendered at build time. <a href="/en/guides/on-demand-rendering/">On-demand server rendering</a> can be set for individual routes, or as the default.</p>\n<div class="sl-heading-wrapper level-h2"><h2 id="prerender"><code dir="auto">prerender</code></h2><a class="sl-anchor-link" href="#prerender"><span aria-hidden="true" class="sl-anchor-icon"><svg width="16" height="16" viewBox="0 0 24 24"><path fill="currentcolor" d="m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z"></path></svg></span><span class="sr-only">Section titled “prerender”</span></a></div>\n'
    }), createVNode(_components.p, {
      children: [createVNode(_components.p, {
        children: [createVNode(_components.strong, {
          children: "Type:"
        }), " ", createVNode(_components.code, {
          dir: "auto",
          children: "boolean"
        }), createVNode(_components.br, {}), "\n", createVNode(_components.strong, {
          children: "Default:"
        }), " ", createVNode(_components.code, {
          dir: "auto",
          children: "true"
        }), " in static mode (default); ", createVNode(_components.code, {
          dir: "auto",
          children: "false"
        }), " with ", createVNode(_components.code, {
          dir: "auto",
          children: "output: 'server'"
        }), " configuration", createVNode(_components.br, {})]
      }), createVNode($$Since, {
        v: "1.0.0"
      })]
    }), "\n", createVNode(Fragment$1, {
      "set:html": `<p>A value exported from each individual route to determine whether or not it is prerendered.</p>
<p>By default, all pages and endpoints are prerendered and will be statically generated at build time. You can opt out of prerendering on one or more routes, and you can have both static and on-demand rendered routes in the same project.</p>
<div class="sl-heading-wrapper level-h3"><h3 id="per-page-override">Per-page override</h3><a class="sl-anchor-link" href="#per-page-override"><span aria-hidden="true" class="sl-anchor-icon"><svg width="16" height="16" viewBox="0 0 24 24"><path fill="currentcolor" d="m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z"></path></svg></span><span class="sr-only">Section titled “Per-page override”</span></a></div>
<p>You can override the default value to enable <a href="/en/guides/on-demand-rendering/">on demand rendering</a> for an individual route by exporting <code dir="auto">prerender</code> with the value <code dir="auto">false</code> from that file:</p>
<div class="expressive-code"><link rel="stylesheet" href="/_astro/ec.rvnnt.css"><script type="module" src="/_astro/ec.8zarh.js"></script><figure class="frame has-title not-content"><figcaption class="header"><span class="title">src/pages/rendered-on-demand.astro</span></figcaption><pre data-language="astro"><code><div class="ec-line"><div class="code"><span style="--0:#919F9F;--1:#5F636F">---</span></div></div><div class="ec-line highlight mark"><div class="code"><span style="--0:#d0a4ed;--1:#753a96">export const </span><span style="--0:#91b4ff;--1:#325295">prerender</span><span style="--0:#d0a4ed;--1:#753a96"> = </span><span style="--0:#ff96a8;--1:#893d3d">false</span></div></div><div class="ec-line"><div class="code"><span style="--0:#919F9F;--1:#5F636F">---</span></div></div><div class="ec-line"><div class="code"><span style="--0:#919F9F;--1:#5F636F">&#x3C;!-- server-rendered content --></span></div></div><div class="ec-line"><div class="code"><span style="--0:#919F9F;--1:#5F636F">&#x3C;!-- the rest of my site is static --></span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="---export const prerender = false---<!-- server-rendered content --><!-- the rest of my site is static -->"><div></div></button></div></figure></div>
<div class="sl-heading-wrapper level-h3"><h3 id="switch-to-server-mode">Switch to <code dir="auto">server</code> mode</h3><a class="sl-anchor-link" href="#switch-to-server-mode"><span aria-hidden="true" class="sl-anchor-icon"><svg width="16" height="16" viewBox="0 0 24 24"><path fill="currentcolor" d="m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z"></path></svg></span><span class="sr-only">Section titled “Switch to server mode”</span></a></div>
<p>You can override the default value for all routes by configuring <a href="/en/reference/configuration-reference/#output"><code dir="auto">output: 'server'</code></a>. In this output mode, all pages and endpoints will be generated on the server upon request by default instead of being prerendered.</p>
<p>In <code dir="auto">server</code> mode, enable prerendering for an individual route by exporting <code dir="auto">prerender</code> with the value <code dir="auto">true</code> from that file:</p>
<div class="expressive-code"><figure class="frame has-title not-content"><figcaption class="header"><span class="title">src/pages/static-about-page.astro</span></figcaption><pre data-language="astro"><code><div class="ec-line"><div class="code"><span style="--0:#919F9F;--1:#5F636F">---</span></div></div><div class="ec-line"><div class="code"><span style="--0:#919F9F;--1:#5D6376">// with \`output: 'server'\` configured</span></div></div><div class="ec-line highlight mark"><div class="code"><span style="--0:#d0a4ed;--1:#753a96">export const </span><span style="--0:#91b4ff;--1:#325295">prerender</span><span style="--0:#d0a4ed;--1:#753a96"> = </span><span style="--0:#ff96a8;--1:#893d3d">true</span></div></div><div class="ec-line"><div class="code"><span style="--0:#919F9F;--1:#5F636F">---</span></div></div><div class="ec-line"><div class="code"><span style="--0:#919F9F;--1:#5F636F">&#x3C;!-- My static about page --></span></div></div><div class="ec-line"><div class="code"><span style="--0:#919F9F;--1:#5F636F">&#x3C;!-- All other pages are rendered on demand --></span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="---// with &#x60;output: &#x27;server&#x27;&#x60; configuredexport const prerender = true---<!-- My static about page --><!-- All other pages are rendered on demand -->"><div></div></button></div></figure></div>
<div class="sl-heading-wrapper level-h2"><h2 id="partial"><code dir="auto">partial</code></h2><a class="sl-anchor-link" href="#partial"><span aria-hidden="true" class="sl-anchor-icon"><svg width="16" height="16" viewBox="0 0 24 24"><path fill="currentcolor" d="m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z"></path></svg></span><span class="sr-only">Section titled “partial”</span></a></div>
`
    }), createVNode(_components.p, {
      children: [createVNode(_components.p, {
        children: [createVNode(_components.strong, {
          children: "Type:"
        }), " ", createVNode(_components.code, {
          dir: "auto",
          children: "boolean"
        }), " ", createVNode(_components.br, {}), "\n", createVNode(_components.strong, {
          children: "Default:"
        }), " ", createVNode(_components.code, {
          dir: "auto",
          children: "false"
        }), " ", createVNode(_components.br, {})]
      }), createVNode($$Since, {
        v: "3.4.0"
      })]
    }), "\n", createVNode(Fragment$1, {
      "set:html": '<p>A value exported from an individual route to determine whether or not it should be rendered as a full HTML page.</p>\n<p>By default, all files located within the reserved <code dir="auto">src/pages/</code> directory automatically include the <code dir="auto">&#x3C;!DOCTYPE html></code> declaration and additional <code dir="auto">&#x3C;head></code> content such as Astro’s scoped styles and scripts.</p>\n<p>You can override the default value to designate the content as a <a href="/en/basics/astro-pages/#page-partials">page partial</a> for an individual route by exporting a value for <code dir="auto">partial</code> from that file:</p>\n<div class="expressive-code"><figure class="frame has-title not-content"><figcaption class="header"><span class="title">src/pages/my-page-partial.astro</span></figcaption><pre data-language="astro"><code><div class="ec-line"><div class="code"><span style="--0:#919F9F;--1:#5F636F">---</span></div></div><div class="ec-line highlight mark"><div class="code"><span style="--0:#d0a4ed;--1:#753a96">export const </span><span style="--0:#91b4ff;--1:#325295">partial</span><span style="--0:#d0a4ed;--1:#753a96"> = </span><span style="--0:#ff96a8;--1:#893d3d">true</span></div></div><div class="ec-line"><div class="code"><span style="--0:#919F9F;--1:#5F636F">---</span></div></div><div class="ec-line"><div class="code"><span style="--0:#919F9F;--1:#5F636F">&#x3C;!-- Generated HTML available at a URL --></span></div></div><div class="ec-line"><div class="code"><span style="--0:#919F9F;--1:#5F636F">&#x3C;!-- Available to a rendering library --></span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="---export const partial = true---<!-- Generated HTML available at a URL --><!-- Available to a rendering library -->"><div></div></button></div></figure></div>\n<p>The <code dir="auto">export const partial</code> must be identifiable statically. It can have the value of:</p>\n<ul>\n<li>The boolean <strong><code dir="auto">true</code></strong>.</li>\n<li>An environment variable using import.meta.env such as <code dir="auto">import.meta.env.USE_PARTIALS</code>.</li>\n</ul>\n<div class="sl-heading-wrapper level-h2"><h2 id="getstaticpaths"><code dir="auto">getStaticPaths()</code></h2><a class="sl-anchor-link" href="#getstaticpaths"><span aria-hidden="true" class="sl-anchor-icon"><svg width="16" height="16" viewBox="0 0 24 24"><path fill="currentcolor" d="m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z"></path></svg></span><span class="sr-only">Section titled “getStaticPaths()”</span></a></div>\n'
    }), createVNode(_components.p, {
      children: [createVNode(_components.p, {
        children: [createVNode(_components.strong, {
          children: "Type:"
        }), " ", createVNode(_components.code, {
          dir: "auto",
          children: "(options: GetStaticPathsOptions) => Promise<GetStaticPathsResult> | GetStaticPathsResult"
        }), " ", createVNode(_components.br, {})]
      }), createVNode($$Since, {
        v: "1.0.0"
      })]
    }), "\n", createVNode(Fragment$1, {
      "set:html": `<p>A function to generate multiple, prerendered page routes from a single <code dir="auto">.astro</code> page component with one or more <a href="#params">parameters</a> in its file path. Use this for routes that will be created at build time, also known as static site building.</p>
<p>The <code dir="auto">getStaticPaths()</code> function must return an array of objects to determine which URL paths will be prerendered by Astro. Each object must include a <code dir="auto">params</code> object, to specify route paths. The object may optionally contain a <code dir="auto">props</code> object with <a href="#data-passing-with-props">data to be passed</a> to each page template.</p>
<div class="expressive-code"><figure class="frame has-title not-content"><figcaption class="header"><span class="title">src/pages/blog/[post].astro</span></figcaption><pre data-language="astro"><code><div class="ec-line"><div class="code"><span style="--0:#919F9F;--1:#5F636F">---</span></div></div><div class="ec-line"><div class="code"><span style="--0:#919F9F;--1:#5D6376">// In 'server' mode, opt in to prerendering:</span></div></div><div class="ec-line"><div class="code"><span style="--0:#919F9F;--1:#5D6376">// export const prerender = true</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#C792EA;--1:#8844AE">export</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#C792EA;--1:#8844AE">async</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#C792EA;--1:#8844AE">function</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#82AAFF;--1:#3B61B0">getStaticPaths</span><span style="--0:#D9F5DD;--1:#111111">()</span><span style="--0:#D6DEEB;--1:#403F53"> {</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#C792EA;--1:#8844AE">return</span><span style="--0:#D6DEEB;--1:#403F53"> [</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#919F9F;--1:#5D6376">// { params: { /* required */ }, props: { /* optional */ } },</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#D6DEEB;--1:#403F53">    </span></span><span style="--0:#D6DEEB;--1:#403F53">{ params: { </span><mark><span style="--0:#D6DEEB;--1:#403F53">post</span></mark><span style="--0:#D6DEEB;--1:#403F53">: </span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#ECC48D;--1:#984E4D">1</span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#D6DEEB;--1:#403F53"> } }</span><span style="--0:#889FB2;--1:#4D667B">,</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#919F9F;--1:#5D6376">// [</span><mark><span style="--0:#adb7b7;--1:#4e5464">post</span></mark><span style="--0:#919F9F;--1:#5D6376">] is the parameter</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#D6DEEB;--1:#403F53">    </span></span><span style="--0:#D6DEEB;--1:#403F53">{ params: { </span><mark><span style="--0:#D6DEEB;--1:#403F53">post</span></mark><span style="--0:#D6DEEB;--1:#403F53">: </span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#ECC48D;--1:#984E4D">2</span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#D6DEEB;--1:#403F53"> } }</span><span style="--0:#889FB2;--1:#4D667B">,</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#919F9F;--1:#5D6376">// must match the file name</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#919F9F;--1:#5D6376">// ...</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#D6DEEB;--1:#403F53">  </span></span><span style="--0:#D6DEEB;--1:#403F53">];</span></div></div><div class="ec-line"><div class="code"><span style="--0:#D6DEEB;--1:#403F53">}</span></div></div><div class="ec-line"><div class="code"><span style="--0:#919F9F;--1:#5F636F">---</span></div></div><div class="ec-line"><div class="code"><span style="--0:#919F9F;--1:#5F636F">&#x3C;!-- Your HTML template here. --></span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="---// In &#x27;server&#x27; mode, opt in to prerendering:// export const prerender = trueexport async function getStaticPaths() {  return [    // { params: { /* required */ }, props: { /* optional */ } },    { params: { post: &#x27;1&#x27; } }, // [post] is the parameter    { params: { post: &#x27;2&#x27; } }, // must match the file name    // ...  ];}---<!-- Your HTML template here. -->"><div></div></button></div></figure></div>
<p><code dir="auto">getStaticPaths()</code> can also be used in static file endpoints for <a href="/en/guides/endpoints/#params-and-dynamic-routing">dynamic routing</a>.</p>
<aside aria-label="Tip" class="starlight-aside starlight-aside--tip"><p class="starlight-aside__title" aria-hidden="true"><svg viewBox="0 0 24 24" width="16" height="16" fill="currentColor" class="starlight-aside__icon"><path fill-rule="evenodd" clip-rule="evenodd" d="M1.43909 8.85483L1.44039 8.85354L4.96668 5.33815C5.30653 4.99386 5.7685 4.79662 6.2524 4.78972L6.26553 4.78963L12.9014 4.78962L13.8479 3.84308C16.9187 0.772319 20.0546 0.770617 21.4678 0.975145C21.8617 1.02914 22.2271 1.21053 22.5083 1.4917C22.7894 1.77284 22.9708 2.13821 23.0248 2.53199C23.2294 3.94517 23.2278 7.08119 20.1569 10.1521L19.2107 11.0983V17.7338L19.2106 17.7469C19.2037 18.2308 19.0067 18.6933 18.6624 19.0331L15.1456 22.5608C14.9095 22.7966 14.6137 22.964 14.29 23.0449C13.9663 23.1259 13.6267 23.1174 13.3074 23.0204C12.9881 22.9235 12.7011 22.7417 12.4771 22.4944C12.2533 22.2473 12.1006 21.9441 12.0355 21.6171L11.1783 17.3417L6.65869 12.822L4.34847 12.3589L2.38351 11.965C2.05664 11.8998 1.75272 11.747 1.50564 11.5232C1.25835 11.2992 1.07653 11.0122 0.979561 10.6929C0.882595 10.3736 0.874125 10.034 0.955057 9.7103C1.03599 9.38659 1.20328 9.09092 1.43909 8.85483ZM6.8186 10.8724L2.94619 10.096L6.32006 6.73268H10.9583L6.8186 10.8724ZM15.2219 5.21703C17.681 2.75787 20.0783 2.75376 21.1124 2.8876C21.2462 3.92172 21.2421 6.31895 18.783 8.77812L12.0728 15.4883L8.51172 11.9272L15.2219 5.21703ZM13.9042 21.0538L13.1279 17.1811L17.2676 13.0414V17.68L13.9042 21.0538Z"></path><path d="M9.31827 18.3446C9.45046 17.8529 9.17864 17.3369 8.68945 17.1724C8.56178 17.1294 8.43145 17.1145 8.30512 17.1243C8.10513 17.1398 7.91519 17.2172 7.76181 17.3434C7.62613 17.455 7.51905 17.6048 7.45893 17.7835C6.97634 19.2186 5.77062 19.9878 4.52406 20.4029C4.08525 20.549 3.6605 20.644 3.29471 20.7053C3.35607 20.3395 3.45098 19.9148 3.59711 19.476C4.01221 18.2294 4.78141 17.0237 6.21648 16.5411C6.39528 16.481 6.54504 16.3739 6.65665 16.2382C6.85126 16.0016 6.92988 15.678 6.84417 15.3647C6.83922 15.3466 6.83373 15.3286 6.82767 15.3106C6.74106 15.053 6.55701 14.8557 6.33037 14.7459C6.10949 14.6389 5.84816 14.615 5.59715 14.6994C5.47743 14.7397 5.36103 14.7831 5.24786 14.8294C3.22626 15.6569 2.2347 17.4173 1.75357 18.8621C1.49662 19.6337 1.36993 20.3554 1.30679 20.8818C1.27505 21.1464 1.25893 21.3654 1.25072 21.5213C1.24662 21.5993 1.24448 21.6618 1.24337 21.7066L1.243 21.7226L1.24235 21.7605L1.2422 21.7771L1.24217 21.7827L1.24217 21.7856C1.24217 22.3221 1.67703 22.7579 2.2137 22.7579L2.2155 22.7579L2.22337 22.7578L2.23956 22.7577C2.25293 22.7575 2.27096 22.7572 2.29338 22.7567C2.33821 22.7555 2.40073 22.7534 2.47876 22.7493C2.63466 22.7411 2.85361 22.725 3.11822 22.6932C3.64462 22.6301 4.36636 22.5034 5.13797 22.2464C6.58274 21.7653 8.3431 20.7738 9.17063 18.7522C9.21696 18.639 9.26037 18.5226 9.30064 18.4029C9.30716 18.3835 9.31304 18.364 9.31827 18.3446Z"></path></svg>Tip</p><div class="starlight-aside__content"><p>When using TypeScript, use the <a href="/en/guides/typescript/#infer-getstaticpaths-types"><code dir="auto">GetStaticPaths</code></a> type utility to ensure type-safe access of your <code dir="auto">params</code> and <code dir="auto">props</code>.</p></div></aside>
<aside aria-label="Caution" class="starlight-aside starlight-aside--caution"><p class="starlight-aside__title" aria-hidden="true"><svg viewBox="0 0 24 24" width="16" height="16" fill="currentColor" class="starlight-aside__icon"><path d="M12 16C11.8022 16 11.6089 16.0587 11.4444 16.1686C11.28 16.2784 11.1518 16.4346 11.0761 16.6173C11.0004 16.8001 10.9806 17.0011 11.0192 17.1951C11.0578 17.3891 11.153 17.5673 11.2929 17.7071C11.4327 17.847 11.6109 17.9422 11.8049 17.9808C11.9989 18.0194 12.2 17.9996 12.3827 17.9239C12.5654 17.8482 12.7216 17.72 12.8315 17.5556C12.9413 17.3911 13 17.1978 13 17C13 16.7348 12.8946 16.4805 12.7071 16.2929C12.5196 16.1054 12.2652 16 12 16ZM22.67 17.47L14.62 3.47003C14.3598 3.00354 13.9798 2.61498 13.5192 2.3445C13.0586 2.07401 12.5341 1.9314 12 1.9314C11.4659 1.9314 10.9414 2.07401 10.4808 2.3445C10.0202 2.61498 9.64019 3.00354 9.38 3.47003L1.38 17.47C1.11079 17.924 0.966141 18.441 0.960643 18.9688C0.955144 19.4966 1.089 20.0166 1.34868 20.4761C1.60837 20.9356 1.9847 21.3185 2.43968 21.5861C2.89466 21.8536 3.41218 21.9964 3.94 22H20.06C20.5921 22.0053 21.1159 21.8689 21.5779 21.6049C22.0399 21.341 22.4234 20.9589 22.689 20.4978C22.9546 20.0368 23.0928 19.5134 23.0895 18.9814C23.0862 18.4493 22.9414 17.9277 22.67 17.47ZM20.94 19.47C20.8523 19.626 20.7245 19.7556 20.5697 19.8453C20.4149 19.935 20.2389 19.9815 20.06 19.98H3.94C3.76111 19.9815 3.5851 19.935 3.43032 19.8453C3.27553 19.7556 3.14765 19.626 3.06 19.47C2.97223 19.318 2.92602 19.1456 2.92602 18.97C2.92602 18.7945 2.97223 18.622 3.06 18.47L11.06 4.47003C11.1439 4.30623 11.2714 4.16876 11.4284 4.07277C11.5855 3.97678 11.766 3.92599 11.95 3.92599C12.134 3.92599 12.3145 3.97678 12.4716 4.07277C12.6286 4.16876 12.7561 4.30623 12.84 4.47003L20.89 18.47C20.9892 18.6199 21.0462 18.7937 21.055 18.9732C21.0638 19.1527 21.0241 19.3312 20.94 19.49V19.47ZM12 8.00003C11.7348 8.00003 11.4804 8.10538 11.2929 8.29292C11.1054 8.48046 11 8.73481 11 9.00003V13C11 13.2652 11.1054 13.5196 11.2929 13.7071C11.4804 13.8947 11.7348 14 12 14C12.2652 14 12.5196 13.8947 12.7071 13.7071C12.8946 13.5196 13 13.2652 13 13V9.00003C13 8.73481 12.8946 8.48046 12.7071 8.29292C12.5196 8.10538 12.2652 8.00003 12 8.00003Z"></path></svg>Caution</p><div class="starlight-aside__content"><p>The <code dir="auto">getStaticPaths()</code> function executes in its own isolated scope once, before any page loads. Therefore you can’t reference anything from its parent scope, other than file imports. The compiler will warn you if you break this requirement.</p></div></aside>
<div class="sl-heading-wrapper level-h3"><h3 id="params"><code dir="auto">params</code></h3><a class="sl-anchor-link" href="#params"><span aria-hidden="true" class="sl-anchor-icon"><svg width="16" height="16" viewBox="0 0 24 24"><path fill="currentcolor" d="m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z"></path></svg></span><span class="sr-only">Section titled “params”</span></a></div>
<p>The <code dir="auto">params</code> key of each object in the array returned by <code dir="auto">getStaticPaths()</code> tells Astro what routes to build.</p>
<p>The keys in <code dir="auto">params</code> must match the parameters defined in your component file path. The value for each <code dir="auto">params</code> object must match the parameters used in the page name. <code dir="auto">params</code> are encoded into the URL, so only strings are supported as values.</p>
<p>For example,<code dir="auto">src/pages/posts/[id].astro</code>has an <code dir="auto">id</code> parameter in its file name. The following <code dir="auto">getStaticPaths()</code> function in this <code dir="auto">.astro</code> component tells Astro to statically generate <code dir="auto">posts/1</code>, <code dir="auto">posts/2</code>, and <code dir="auto">posts/3</code> at build time.</p>
<div class="expressive-code"><figure class="frame has-title not-content"><figcaption class="header"><span class="title">src/pages/posts/[id].astro</span></figcaption><pre data-language="astro"><code><div class="ec-line"><div class="code"><span style="--0:#919F9F;--1:#5F636F">---</span></div></div><div class="ec-line"><div class="code"><span style="--0:#C792EA;--1:#8844AE">export</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#C792EA;--1:#8844AE">async</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#C792EA;--1:#8844AE">function</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#82AAFF;--1:#3B61B0">getStaticPaths</span><span style="--0:#D9F5DD;--1:#111111">()</span><span style="--0:#D6DEEB;--1:#403F53"> {</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#C792EA;--1:#8844AE">return</span><span style="--0:#D6DEEB;--1:#403F53"> [</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#D6DEEB;--1:#403F53">    </span></span><span style="--0:#D6DEEB;--1:#403F53">{ params: { id: </span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#ECC48D;--1:#984E4D">1</span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#D6DEEB;--1:#403F53"> } }</span><span style="--0:#889FB2;--1:#4D667B">,</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#D6DEEB;--1:#403F53">    </span></span><span style="--0:#D6DEEB;--1:#403F53">{ params: { id: </span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#ECC48D;--1:#984E4D">2</span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#D6DEEB;--1:#403F53"> } }</span><span style="--0:#889FB2;--1:#4D667B">,</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#D6DEEB;--1:#403F53">    </span></span><span style="--0:#D6DEEB;--1:#403F53">{ params: { id: </span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#ECC48D;--1:#984E4D">3</span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#D6DEEB;--1:#403F53"> } }</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#D6DEEB;--1:#403F53">  </span></span><span style="--0:#D6DEEB;--1:#403F53">];</span></div></div><div class="ec-line"><div class="code"><span style="--0:#D6DEEB;--1:#403F53">}</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#C792EA;--1:#8844AE">const { </span><span style="--0:#82AAFF;--1:#3B61B0">id</span><span style="--0:#C792EA;--1:#8844AE"> } = </span><span style="--0:#D6DEEB;--1:#403F53">Astro</span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#7FDBCA;--1:#096E72">params</span><span style="--0:#D6DEEB;--1:#403F53">;</span></div></div><div class="ec-line"><div class="code"><span style="--0:#919F9F;--1:#5F636F">---</span></div></div><div class="ec-line"><div class="code"><span style="--1:#8844AE"><span style="--0:#7FDBCA">&#x3C;</span><span style="--0:#CAECE6">h1</span><span style="--0:#7FDBCA">></span></span><span style="--0:#E2817F;--1:#B23834">{</span><span style="--0:#D6DEEB;--1:#403F53">id</span><span style="--0:#E2817F;--1:#B23834">}</span><span style="--1:#8844AE"><span style="--0:#7FDBCA">&#x3C;/</span><span style="--0:#CAECE6">h1</span><span style="--0:#7FDBCA">></span></span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="---export async function getStaticPaths() {  return [    { params: { id: &#x27;1&#x27; } },    { params: { id: &#x27;2&#x27; } },    { params: { id: &#x27;3&#x27; } }  ];}const { id } = Astro.params;---<h1>{id}</h1>"><div></div></button></div></figure></div>
<div class="sl-heading-wrapper level-h3"><h3 id="data-passing-with-props">Data passing with <code dir="auto">props</code></h3><a class="sl-anchor-link" href="#data-passing-with-props"><span aria-hidden="true" class="sl-anchor-icon"><svg width="16" height="16" viewBox="0 0 24 24"><path fill="currentcolor" d="m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z"></path></svg></span><span class="sr-only">Section titled “Data passing with props”</span></a></div>
<p>To pass additional data to each generated page, you can set a <code dir="auto">props</code> value on each object in the array returned by <code dir="auto">getStaticPaths()</code>. Unlike <code dir="auto">params</code>, <code dir="auto">props</code> are not encoded into the URL and so aren’t limited to only strings.</p>
<p>For example, if you generate pages with data fetched from a remote API, you can pass the full data object to the page component inside of <code dir="auto">getStaticPaths()</code>. The page template can reference the data from each post using <code dir="auto">Astro.props</code>.</p>
<div class="expressive-code"><figure class="frame has-title not-content"><figcaption class="header"><span class="title">src/pages/posts/[id].astro</span></figcaption><pre data-language="astro"><code><div class="ec-line"><div class="code"><span style="--0:#919F9F;--1:#5F636F">---</span></div></div><div class="ec-line"><div class="code"><span style="--0:#C792EA;--1:#8844AE">export</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#C792EA;--1:#8844AE">async</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#C792EA;--1:#8844AE">function</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#82AAFF;--1:#3B61B0">getStaticPaths</span><span style="--0:#D9F5DD;--1:#111111">()</span><span style="--0:#D6DEEB;--1:#403F53"> {</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#C792EA;--1:#8844AE">const </span><span style="--0:#82AAFF;--1:#3B61B0">response</span><span style="--0:#C792EA;--1:#8844AE"> = await </span><span style="--0:#82AAFF;--1:#3B61B0">fetch</span><span style="--0:#D6DEEB;--1:#403F53">(</span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#ECC48D;--1:#984E4D">...</span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#D6DEEB;--1:#403F53">);</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#C792EA;--1:#8844AE">const </span><span style="--0:#82AAFF;--1:#3B61B0">data</span><span style="--0:#C792EA;--1:#8844AE"> = await </span><span style="--0:#D6DEEB;--1:#403F53">response</span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#82AAFF;--1:#3B61B0">json</span><span style="--0:#D6DEEB;--1:#403F53">();</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#C792EA;--1:#8844AE">return</span><span style="--0:#D6DEEB;--1:#403F53"> data</span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#82AAFF;--1:#3B61B0">map</span><span style="--0:#D6DEEB;--1:#403F53">(</span><span style="--0:#D9F5DD;--1:#111111">(</span><span style="--0:#D7DBE0;--1:#403F53">post</span><span style="--0:#D9F5DD;--1:#111111">)</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#C792EA;--1:#8844AE">=></span><span style="--0:#D6DEEB;--1:#403F53"> {</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#C792EA;--1:#8844AE">return</span><span style="--0:#D6DEEB;--1:#403F53"> {</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#D6DEEB;--1:#403F53">      </span></span><span style="--0:#D6DEEB;--1:#403F53">params: { id: post</span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#7FDBCA;--1:#096E72">id</span><span style="--0:#D6DEEB;--1:#403F53"> }</span><span style="--0:#889FB2;--1:#4D667B">,</span></div></div><div class="ec-line highlight mark"><div class="code"><span class="indent"><span style="--0:#D6DEEB;--1:#403F53">      </span></span><span style="--0:#D6DEEB;--1:#403F53">props: { post }</span><span style="--0:#a6b7c5;--1:#42586a">,</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#D6DEEB;--1:#403F53">    </span></span><span style="--0:#D6DEEB;--1:#403F53">};</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#D6DEEB;--1:#403F53">  </span></span><span style="--0:#D6DEEB;--1:#403F53">});</span></div></div><div class="ec-line"><div class="code"><span style="--0:#D6DEEB;--1:#403F53">}</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#C792EA;--1:#8844AE">const { </span><span style="--0:#82AAFF;--1:#3B61B0">id</span><span style="--0:#C792EA;--1:#8844AE"> } = </span><span style="--0:#D6DEEB;--1:#403F53">Astro</span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#7FDBCA;--1:#096E72">params</span><span style="--0:#D6DEEB;--1:#403F53">;</span></div></div><div class="ec-line"><div class="code"><span style="--0:#C792EA;--1:#8844AE">const { </span><span style="--0:#82AAFF;--1:#3B61B0">post</span><span style="--0:#C792EA;--1:#8844AE"> } = </span><span style="--0:#D6DEEB;--1:#403F53">Astro</span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#7FDBCA;--1:#096E72">props</span><span style="--0:#D6DEEB;--1:#403F53">;</span></div></div><div class="ec-line"><div class="code"><span style="--0:#919F9F;--1:#5F636F">---</span></div></div><div class="ec-line"><div class="code"><span style="--1:#8844AE"><span style="--0:#7FDBCA">&#x3C;</span><span style="--0:#CAECE6">h1</span><span style="--0:#7FDBCA">></span></span><span style="--0:#E2817F;--1:#B23834">{</span><span style="--0:#D6DEEB;--1:#403F53">id</span><span style="--0:#E2817F;--1:#B23834">}</span><span style="--0:#D6DEEB;--1:#403F53">: </span><span style="--0:#E2817F;--1:#B23834">{</span><span style="--0:#D6DEEB;--1:#403F53">post</span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#7FDBCA;--1:#096E72">name</span><span style="--0:#E2817F;--1:#B23834">}</span><span style="--1:#8844AE"><span style="--0:#7FDBCA">&#x3C;/</span><span style="--0:#CAECE6">h1</span><span style="--0:#7FDBCA">></span></span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="---export async function getStaticPaths() {  const response = await fetch(&#x27;...&#x27;);  const data = await response.json();  return data.map((post) => {    return {      params: { id: post.id },      props: { post },    };  });}const { id } = Astro.params;const { post } = Astro.props;---<h1>{id}: {post.name}</h1>"><div></div></button></div></figure></div>
<div class="sl-heading-wrapper level-h3"><h3 id="paginate"><code dir="auto">paginate()</code></h3><a class="sl-anchor-link" href="#paginate"><span aria-hidden="true" class="sl-anchor-icon"><svg width="16" height="16" viewBox="0 0 24 24"><path fill="currentcolor" d="m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z"></path></svg></span><span class="sr-only">Section titled “paginate()”</span></a></div>
`
    }), createVNode(_components.p, {
      children: createVNode($$Since, {
        v: "1.0.0"
      })
    }), "\n", createVNode(Fragment$1, {
      "set:html": '<p>A function that can be returned from <a href="#getstaticpaths"><code dir="auto">getStaticPaths()</code></a> to divide a collection of content items into separate pages.</p>\n<p><code dir="auto">paginate()</code> will automatically generate the necessary array to return from <code dir="auto">getStaticPaths()</code> to create one URL for every page of your paginated collection. The page number will be passed as a <code dir="auto">param</code>, and the page data will be passed as a <code dir="auto">page</code> prop.</p>\n<p>The following example fetches and passes 150 items to the <code dir="auto">paginate</code> function, and creates static, prerendered pages at build time that will display 10 items per page:</p>\n<div class="expressive-code"><figure class="frame has-title not-content"><figcaption class="header"><span class="title">src/pages/pokemon/[page].astro</span></figcaption><pre data-language="astro"><code><div class="ec-line"><div class="code"><span style="--0:#919F9F;--1:#5F636F">---</span></div></div><div class="ec-line"><div class="code"><span style="--0:#C792EA;--1:#8844AE">export</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#C792EA;--1:#8844AE">async</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#C792EA;--1:#8844AE">function</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#82AAFF;--1:#3B61B0">getStaticPaths</span><span style="--0:#D9F5DD;--1:#111111">(</span><span style="--1:#403F53"><span style="--0:#D6DEEB">{ </span><span style="--0:#D7DBE0">paginate</span><span style="--0:#D6DEEB"> }</span></span><span style="--0:#D9F5DD;--1:#111111">)</span><span style="--0:#D6DEEB;--1:#403F53"> {</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#919F9F;--1:#5D6376">// Load your data with fetch(), getCollection(), etc.</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#C792EA;--1:#8844AE">const </span><span style="--0:#82AAFF;--1:#3B61B0">response</span><span style="--0:#C792EA;--1:#8844AE"> = await </span><span style="--0:#82AAFF;--1:#3B61B0">fetch</span><span style="--0:#D6DEEB;--1:#403F53">(</span><span style="--0:#D6DEEB;--1:#403F53">`</span><span style="--0:#ECC48D;--1:#3B61B0">https://pokeapi.co/api/v2/pokemon?limit=150</span><span style="--0:#D6DEEB;--1:#403F53">`</span><span style="--0:#D6DEEB;--1:#403F53">);</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#C792EA;--1:#8844AE">const </span><span style="--0:#82AAFF;--1:#3B61B0">result</span><span style="--0:#C792EA;--1:#8844AE"> = await </span><span style="--0:#D6DEEB;--1:#403F53">response</span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#82AAFF;--1:#3B61B0">json</span><span style="--0:#D6DEEB;--1:#403F53">();</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#C792EA;--1:#8844AE">const </span><span style="--0:#82AAFF;--1:#3B61B0">allPokemon</span><span style="--0:#C792EA;--1:#8844AE"> = </span><span style="--0:#D6DEEB;--1:#403F53">result</span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#7FDBCA;--1:#096E72">results</span><span style="--0:#D6DEEB;--1:#403F53">;</span></div></div><div class="ec-line"><div class="code">\n</div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#919F9F;--1:#5D6376">// Return a paginated collection of paths for all items</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#C792EA;--1:#8844AE">return</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#82AAFF;--1:#3B61B0">paginate</span><span style="--0:#D6DEEB;--1:#403F53">(allPokemon</span><span style="--0:#889FB2;--1:#4D667B">,</span><span style="--0:#D6DEEB;--1:#403F53"> { pageSize: </span><span style="--0:#F78C6C;--1:#AA0982">10</span><span style="--0:#D6DEEB;--1:#403F53"> });</span></div></div><div class="ec-line"><div class="code"><span style="--0:#D6DEEB;--1:#403F53">}</span></div></div><div class="ec-line"><div class="code">\n</div></div><div class="ec-line"><div class="code"><span style="--0:#C792EA;--1:#8844AE">const { </span><span style="--0:#82AAFF;--1:#3B61B0">page</span><span style="--0:#C792EA;--1:#8844AE"> } = </span><span style="--0:#D6DEEB;--1:#403F53">Astro</span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#7FDBCA;--1:#096E72">props</span><span style="--0:#D6DEEB;--1:#403F53">;</span></div></div><div class="ec-line"><div class="code"><span style="--0:#919F9F;--1:#5F636F">---</span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="---export async function getStaticPaths({ paginate }) {  // Load your data with fetch(), getCollection(), etc.  const response = await fetch(&#x60;https://pokeapi.co/api/v2/pokemon?limit=150&#x60;);  const result = await response.json();  const allPokemon = result.results;  // Return a paginated collection of paths for all items  return paginate(allPokemon, { pageSize: 10 });}const { page } = Astro.props;---"><div></div></button></div></figure></div>\n<p><code dir="auto">paginate()</code> has the following arguments:</p>\n<ul>\n<li><code dir="auto">data</code> - array containing the page’s data passed to the <code dir="auto">paginate()</code> function</li>\n<li><code dir="auto">options</code> - Optional object with the following properties:\n<ul>\n<li><code dir="auto">pageSize</code> - The number of items shown per page (<code dir="auto">10</code> by default)</li>\n<li><code dir="auto">params</code> - Send additional parameters for creating dynamic routes</li>\n<li><code dir="auto">props</code> - Send additional props to be available on each page</li>\n</ul>\n</li>\n</ul>\n<p><code dir="auto">paginate()</code> assumes a file name of <code dir="auto">[page].astro</code> or <code dir="auto">[...page].astro</code>. The <code dir="auto">page</code> param becomes the page number in your URL:</p>\n<ul>\n<li><code dir="auto">/posts/[page].astro</code> would generate the URLs <code dir="auto">/posts/1</code>, <code dir="auto">/posts/2</code>, <code dir="auto">/posts/3</code>, etc.</li>\n<li><code dir="auto">/posts/[...page].astro</code> would generate the URLs <code dir="auto">/posts</code>, <code dir="auto">/posts/2</code>, <code dir="auto">/posts/3</code>, etc.</li>\n</ul>\n<div class="sl-heading-wrapper level-h4"><h4 id="the-pagination-page-prop">The pagination <code dir="auto">page</code> prop</h4><a class="sl-anchor-link" href="#the-pagination-page-prop"><span aria-hidden="true" class="sl-anchor-icon"><svg width="16" height="16" viewBox="0 0 24 24"><path fill="currentcolor" d="m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z"></path></svg></span><span class="sr-only">Section titled “The pagination page prop”</span></a></div>\n<p><p><strong>Type:</strong> <code dir="auto">Page&#x3C;TData></code></p></p>\n<p>Pagination will pass a <code dir="auto">page</code> prop to every rendered page that represents a single page of data in the paginated collection. This includes the data that you’ve paginated (<code dir="auto">page.data</code>) as well as metadata for the page (<code dir="auto">page.url</code>, <code dir="auto">page.start</code>, <code dir="auto">page.end</code>, <code dir="auto">page.total</code>, etc). This metadata is useful for things like a “Next Page” button or a “Showing 1-10 of 100” message.</p>\n<div class="sl-heading-wrapper level-h5"><h5 id="pagedata"><code dir="auto">page.data</code></h5><a class="sl-anchor-link" href="#pagedata"><span aria-hidden="true" class="sl-anchor-icon"><svg width="16" height="16" viewBox="0 0 24 24"><path fill="currentcolor" d="m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z"></path></svg></span><span class="sr-only">Section titled “page.data”</span></a></div>\n<p><p><strong>Type:</strong> <code dir="auto">Array&#x3C;TData></code></p></p>\n<p>Array of data returned from the <code dir="auto">paginate()</code> function for the current page.</p>\n<div class="sl-heading-wrapper level-h5"><h5 id="pagestart"><code dir="auto">page.start</code></h5><a class="sl-anchor-link" href="#pagestart"><span aria-hidden="true" class="sl-anchor-icon"><svg width="16" height="16" viewBox="0 0 24 24"><path fill="currentcolor" d="m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z"></path></svg></span><span class="sr-only">Section titled “page.start”</span></a></div>\n<p><p><strong>Type:</strong> <code dir="auto">number</code></p></p>\n<p>Index of the first item on the current page, starting at <code dir="auto">0</code>. (e.g. if <code dir="auto">pageSize: 25</code>, this would be <code dir="auto">0</code> on page 1, <code dir="auto">25</code> on page 2, etc.)</p>\n<div class="sl-heading-wrapper level-h5"><h5 id="pageend"><code dir="auto">page.end</code></h5><a class="sl-anchor-link" href="#pageend"><span aria-hidden="true" class="sl-anchor-icon"><svg width="16" height="16" viewBox="0 0 24 24"><path fill="currentcolor" d="m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z"></path></svg></span><span class="sr-only">Section titled “page.end”</span></a></div>\n<p><p><strong>Type:</strong> <code dir="auto">number</code></p></p>\n<p>Index of the last item on the current page.</p>\n<div class="sl-heading-wrapper level-h5"><h5 id="pagesize"><code dir="auto">page.size</code></h5><a class="sl-anchor-link" href="#pagesize"><span aria-hidden="true" class="sl-anchor-icon"><svg width="16" height="16" viewBox="0 0 24 24"><path fill="currentcolor" d="m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z"></path></svg></span><span class="sr-only">Section titled “page.size”</span></a></div>\n<p><p><strong>Type:</strong> <code dir="auto">number</code><br>\n<strong>Default:</strong> <code dir="auto">10</code></p></p>\n<p>The total number of items per page.</p>\n<div class="sl-heading-wrapper level-h5"><h5 id="pagetotal"><code dir="auto">page.total</code></h5><a class="sl-anchor-link" href="#pagetotal"><span aria-hidden="true" class="sl-anchor-icon"><svg width="16" height="16" viewBox="0 0 24 24"><path fill="currentcolor" d="m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z"></path></svg></span><span class="sr-only">Section titled “page.total”</span></a></div>\n<p><p><strong>Type:</strong> <code dir="auto">number</code></p></p>\n<p>The total number of items across all pages.</p>\n<div class="sl-heading-wrapper level-h5"><h5 id="pagecurrentpage"><code dir="auto">page.currentPage</code></h5><a class="sl-anchor-link" href="#pagecurrentpage"><span aria-hidden="true" class="sl-anchor-icon"><svg width="16" height="16" viewBox="0 0 24 24"><path fill="currentcolor" d="m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z"></path></svg></span><span class="sr-only">Section titled “page.currentPage”</span></a></div>\n<p><p><strong>Type:</strong> <code dir="auto">number</code></p></p>\n<p>The current page number, starting with <code dir="auto">1</code>.</p>\n<div class="sl-heading-wrapper level-h5"><h5 id="pagelastpage"><code dir="auto">page.lastPage</code></h5><a class="sl-anchor-link" href="#pagelastpage"><span aria-hidden="true" class="sl-anchor-icon"><svg width="16" height="16" viewBox="0 0 24 24"><path fill="currentcolor" d="m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z"></path></svg></span><span class="sr-only">Section titled “page.lastPage”</span></a></div>\n<p><p><strong>Type:</strong> <code dir="auto">number</code></p></p>\n<p>The total number of pages.</p>\n<div class="sl-heading-wrapper level-h5"><h5 id="pageurlcurrent"><code dir="auto">page.url.current</code></h5><a class="sl-anchor-link" href="#pageurlcurrent"><span aria-hidden="true" class="sl-anchor-icon"><svg width="16" height="16" viewBox="0 0 24 24"><path fill="currentcolor" d="m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z"></path></svg></span><span class="sr-only">Section titled “page.url.current”</span></a></div>\n<p><p><strong>Type:</strong> <code dir="auto">string</code></p></p>\n<p>Get the URL of the current page (useful for canonical URLs). If a value is set for <a href="/en/reference/configuration-reference/#base"><code dir="auto">base</code></a>, the URL starts with that value.</p>\n<div class="sl-heading-wrapper level-h5"><h5 id="pageurlprev"><code dir="auto">page.url.prev</code></h5><a class="sl-anchor-link" href="#pageurlprev"><span aria-hidden="true" class="sl-anchor-icon"><svg width="16" height="16" viewBox="0 0 24 24"><path fill="currentcolor" d="m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z"></path></svg></span><span class="sr-only">Section titled “page.url.prev”</span></a></div>\n<p><p><strong>Type:</strong> <code dir="auto">string | undefined</code></p></p>\n<p>Get the URL of the previous page (will be <code dir="auto">undefined</code> if on page 1). If a value is set for <a href="/en/reference/configuration-reference/#base"><code dir="auto">base</code></a>, prepend the base path to the URL.</p>\n<div class="sl-heading-wrapper level-h5"><h5 id="pageurlnext"><code dir="auto">page.url.next</code></h5><a class="sl-anchor-link" href="#pageurlnext"><span aria-hidden="true" class="sl-anchor-icon"><svg width="16" height="16" viewBox="0 0 24 24"><path fill="currentcolor" d="m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z"></path></svg></span><span class="sr-only">Section titled “page.url.next”</span></a></div>\n<p><p><strong>Type:</strong> <code dir="auto">string | undefined</code></p></p>\n<p>Get the URL of the next page (will be <code dir="auto">undefined</code> if no more pages). If a value is set for <a href="/en/reference/configuration-reference/#base"><code dir="auto">base</code></a>, prepend the base path to the URL.</p>\n<div class="sl-heading-wrapper level-h5"><h5 id="pageurlfirst"><code dir="auto">page.url.first</code></h5><a class="sl-anchor-link" href="#pageurlfirst"><span aria-hidden="true" class="sl-anchor-icon"><svg width="16" height="16" viewBox="0 0 24 24"><path fill="currentcolor" d="m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z"></path></svg></span><span class="sr-only">Section titled “page.url.first”</span></a></div>\n'
    }), createVNode(_components.p, {
      children: [createVNode(_components.p, {
        children: [createVNode(_components.strong, {
          children: "Type:"
        }), " ", createVNode(_components.code, {
          dir: "auto",
          children: "string | undefined"
        }), createVNode(_components.br, {})]
      }), createVNode($$Since, {
        v: "4.12.0"
      })]
    }), "\n", createVNode(Fragment$1, {
      "set:html": '<p>Get the URL of the first page (will be <code dir="auto">undefined</code> if on page 1). If a value is set for <a href="/en/reference/configuration-reference/#base"><code dir="auto">base</code></a>, prepend the base path to the URL.</p>\n<div class="sl-heading-wrapper level-h5"><h5 id="pageurllast"><code dir="auto">page.url.last</code></h5><a class="sl-anchor-link" href="#pageurllast"><span aria-hidden="true" class="sl-anchor-icon"><svg width="16" height="16" viewBox="0 0 24 24"><path fill="currentcolor" d="m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z"></path></svg></span><span class="sr-only">Section titled “page.url.last”</span></a></div>\n'
    }), createVNode(_components.p, {
      children: [createVNode(_components.p, {
        children: [createVNode(_components.strong, {
          children: "Type:"
        }), " ", createVNode(_components.code, {
          dir: "auto",
          children: "string | undefined"
        }), createVNode(_components.br, {})]
      }), createVNode($$Since, {
        v: "4.12.0"
      })]
    }), "\n", createVNode(_components.p, {
      "set:html": 'Get the URL of the last page (will be <code dir="auto">undefined</code> if no more pages). If a value is set for <a href="/en/reference/configuration-reference/#base"><code dir="auto">base</code></a>, prepend the base path to the URL.'
    })]
  });
}
function MDXContent(props = {}) {
  const { wrapper: MDXLayout } = props.components || {};
  return MDXLayout ? createVNode(MDXLayout, {
    ...props,
    children: createVNode(_createMdxContent, {
      ...props
    })
  }) : _createMdxContent(props);
}
function _missingMdxReference(id, component) {
  throw new Error("Expected " + ("component" ) + " `" + id + "` to be defined: you likely forgot to import, pass, or provide it.");
}
const url = "src/content/docs/en/reference/routing-reference.mdx/";
const file = "/Users/chasepursley/Development/ai/star-support/src/content/docs/en/reference/routing-reference.mdx";
const Content = (props = {}) => MDXContent({
  ...props,
  components: { Fragment: Fragment, ...props.components }
});
Content[Symbol.for("mdx-component")] = true;
Content[Symbol.for("astro.needsHeadRendering")] = !Boolean(frontmatter.layout);
Content.moduleId = "/Users/chasepursley/Development/ai/star-support/src/content/docs/en/reference/routing-reference.mdx";
__astro_tag_component__(Content, "astro:jsx");

export { Content, Content as default, file, frontmatter, getHeadings, url };
