import { d as createVNode, K as Fragment, b5 as __astro_tag_component__ } from './astro/server_CeKHpNWz.mjs';
import { g as $$FileTree, f as $$Steps } from './Code_CLJ7HHbi.mjs';
import { $ as $$PackageManagerTabs } from './PackageManagerTabs_DXh8l6mS.mjs';

const frontmatter = {
  "title": "Kontent.ai & Astro",
  "description": "Add content to your Astro project using Kontent.ai as CMS",
  "sidebar": {
    "label": "Kontent.ai"
  },
  "type": "cms",
  "service": "Kontent.ai",
  "i18nReady": true
};
function getHeadings() {
  return [{
    "depth": 2,
    "slug": "integrating-with-astro",
    "text": "Integrating with Astro"
  }, {
    "depth": 3,
    "slug": "prerequisites",
    "text": "Prerequisites"
  }, {
    "depth": 3,
    "slug": "setting-up-credentials",
    "text": "Setting up credentials"
  }, {
    "depth": 3,
    "slug": "installing-dependencies",
    "text": "Installing dependencies"
  }, {
    "depth": 3,
    "slug": "fetching-data",
    "text": "Fetching data"
  }, {
    "depth": 2,
    "slug": "making-a-blog-with-astro-and-kontentai",
    "text": "Making a blog with Astro and Kontent.ai"
  }, {
    "depth": 3,
    "slug": "prerequisites-1",
    "text": "Prerequisites"
  }, {
    "depth": 3,
    "slug": "setting-up-content-model",
    "text": "Setting up content model"
  }, {
    "depth": 3,
    "slug": "creating-content",
    "text": "Creating content"
  }, {
    "depth": 3,
    "slug": "generating-content-model-in-typescript",
    "text": "Generating content model in TypeScript"
  }, {
    "depth": 3,
    "slug": "displaying-a-list-of-blog-posts",
    "text": "Displaying a list of blog posts"
  }, {
    "depth": 3,
    "slug": "generating-individual-blog-posts",
    "text": "Generating individual blog posts"
  }, {
    "depth": 4,
    "slug": "static-site-generation",
    "text": "Static site generation"
  }, {
    "depth": 4,
    "slug": "on-demand-rendering",
    "text": "On-demand rendering"
  }, {
    "depth": 3,
    "slug": "publishing-your-site",
    "text": "Publishing your site"
  }, {
    "depth": 4,
    "slug": "rebuild-on-kontentai-changes",
    "text": "Rebuild on Kontent.ai changes"
  }, {
    "depth": 5,
    "slug": "netlify",
    "text": "Netlify"
  }, {
    "depth": 5,
    "slug": "vercel",
    "text": "Vercel"
  }, {
    "depth": 5,
    "slug": "adding-a-webhook-to-kontentai",
    "text": "Adding a webhook to Kontent.ai"
  }];
}
function _createMdxContent(props) {
  const { Fragment: Fragment$1 } = props.components || {};
  if (!Fragment$1) _missingMdxReference("Fragment");
  return createVNode(Fragment, {
    children: [createVNode(Fragment$1, {
      "set:html": '<p><a href="https://www.kontent.ai/">Kontent.ai</a> is a headless CMS that allows you to manage content in a structured and modular way, supported by AI capabilities.</p>\n<div class="sl-heading-wrapper level-h2"><h2 id="integrating-with-astro">Integrating with Astro</h2><a class="sl-anchor-link" href="#integrating-with-astro"><span aria-hidden="true" class="sl-anchor-icon"><svg width="16" height="16" viewBox="0 0 24 24"><path fill="currentcolor" d="m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z"></path></svg></span><span class="sr-only">Section titled “Integrating with Astro”</span></a></div>\n<p>In this section, you’ll use the <a href="https://github.com/kontent-ai/delivery-sdk-js">Kontent.ai TypeScript SDK</a> to connect your Kontent.ai project to your Astro application.</p>\n<div class="sl-heading-wrapper level-h3"><h3 id="prerequisites">Prerequisites</h3><a class="sl-anchor-link" href="#prerequisites"><span aria-hidden="true" class="sl-anchor-icon"><svg width="16" height="16" viewBox="0 0 24 24"><path fill="currentcolor" d="m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z"></path></svg></span><span class="sr-only">Section titled “Prerequisites”</span></a></div>\n<p>To get started, you’ll need the following:</p>\n<ol>\n<li>\n<p><strong>Kontent.ai project</strong> - If you don’t have a Kontent.ai account yet, <a href="https://app.kontent.ai/sign-up">sign up for free</a> and create a new project.</p>\n</li>\n<li>\n<p><strong>Delivery API keys</strong> - You will need the Environment ID for published content and the Preview API key for fetching drafts (optional). Both keys are located in the <strong>Environment Settings -> API keys</strong> tab in Kontent.ai.</p>\n</li>\n</ol>\n<div class="sl-heading-wrapper level-h3"><h3 id="setting-up-credentials">Setting up credentials</h3><a class="sl-anchor-link" href="#setting-up-credentials"><span aria-hidden="true" class="sl-anchor-icon"><svg width="16" height="16" viewBox="0 0 24 24"><path fill="currentcolor" d="m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z"></path></svg></span><span class="sr-only">Section titled “Setting up credentials”</span></a></div>\n<p>To add your Kontent.ai credentials to Astro, create a <code dir="auto">.env</code> file in the root of your project with the following variables:</p>\n<div class="expressive-code"><link rel="stylesheet" href="/_astro/ec.rvnnt.css"><script type="module" src="/_astro/ec.8zarh.js"></script><figure class="frame has-title not-content"><figcaption class="header"><span class="title">.env</span></figcaption><pre data-language="ini"><code><div class="ec-line"><div class="code"><span style="--0:#C792EA;--1:#8844AE">KONTENT_ENVIRONMENT_ID</span><span style="--0:#D6DEEB;--1:#403F53">=YOUR_ENVIRONMENT_ID</span></div></div><div class="ec-line"><div class="code"><span style="--0:#C792EA;--1:#8844AE">KONTENT_PREVIEW_API_KEY</span><span style="--0:#D6DEEB;--1:#403F53">=YOUR_PREVIEW_API_KEY</span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="KONTENT_ENVIRONMENT_ID=YOUR_ENVIRONMENT_IDKONTENT_PREVIEW_API_KEY=YOUR_PREVIEW_API_KEY"><div></div></button></div></figure></div>\n<p>Now, these environment variables can be used in your Astro project.</p>\n<p>If you would like to get <a href="/en/guides/environment-variables/#intellisense-for-typescript">TypeScript IntelliSense for these environment variables</a>, you can create a new <code dir="auto">env.d.ts</code> file in the <code dir="auto">src/</code> directory and configure <code dir="auto">ImportMetaEnv</code> like this:</p>\n<div class="expressive-code"><figure class="frame has-title not-content"><figcaption class="header"><span class="title">src/env.d.ts</span></figcaption><pre data-language="ts"><code><div class="ec-line"><div class="code"><span style="--0:#C792EA;--1:#8844AE">interface</span><span style="--0:#D6DEEB;--1:#403F53"> ImportMetaEnv {</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#C792EA;--1:#8844AE">readonly</span><span style="--0:#D6DEEB;--1:#403F53"> KONTENT_ENVIRONMENT_ID</span><span style="--0:#7FDBCA;--1:#096E72">:</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#C5E478;--1:#3B61B0">string</span><span style="--0:#D6DEEB;--1:#403F53">;</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#C792EA;--1:#8844AE">readonly</span><span style="--0:#D6DEEB;--1:#403F53"> KONTENT_PREVIEW_API_KEY</span><span style="--0:#7FDBCA;--1:#096E72">:</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#C5E478;--1:#3B61B0">string</span><span style="--0:#D6DEEB;--1:#403F53">;</span></div></div><div class="ec-line"><div class="code"><span style="--0:#D6DEEB;--1:#403F53">}</span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="interface ImportMetaEnv {  readonly KONTENT_ENVIRONMENT_ID: string;  readonly KONTENT_PREVIEW_API_KEY: string;}"><div></div></button></div></figure></div>\n<p>Your root directory should now include these new files:</p>\n'
    }), createVNode($$FileTree, {
      title: "Project Structure",
      "set:html": "<ul>\n<li>src/\n<ul>\n<li><strong>env.d.ts</strong></li>\n</ul>\n</li>\n<li><strong>.env</strong></li>\n<li>astro.config.mjs</li>\n<li>package.json</li>\n</ul>"
    }), "\n", createVNode(Fragment$1, {
      "set:html": '<div class="sl-heading-wrapper level-h3"><h3 id="installing-dependencies">Installing dependencies</h3><a class="sl-anchor-link" href="#installing-dependencies"><span aria-hidden="true" class="sl-anchor-icon"><svg width="16" height="16" viewBox="0 0 24 24"><path fill="currentcolor" d="m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z"></path></svg></span><span class="sr-only">Section titled “Installing dependencies”</span></a></div>\n<p>To connect Astro with your Kontent.ai project, install the <a href="https://github.com/kontent-ai/delivery-sdk-js">Kontent.ai TypeScript SDK</a>:</p>\n'
    }), createVNode($$PackageManagerTabs, {
      children: [createVNode(Fragment$1, {
        slot: "npm",
        "set:html": '<div class="expressive-code"><figure class="frame is-terminal not-content"><figcaption class="header"><span class="title"></span><span class="sr-only">Terminal window</span></figcaption><pre data-language="shell"><code><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#82AAFF;--1:#3B61B0">npm</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#ECC48D;--1:#3B61B0">install</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#ECC48D;--1:#3B61B0">@kontent-ai/delivery-sdk</span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="npm install @kontent-ai/delivery-sdk"><div></div></button></div></figure></div>'
      }), createVNode(Fragment$1, {
        slot: "pnpm",
        "set:html": '<div class="expressive-code"><figure class="frame is-terminal not-content"><figcaption class="header"><span class="title"></span><span class="sr-only">Terminal window</span></figcaption><pre data-language="shell"><code><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#82AAFF;--1:#3B61B0">pnpm</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#ECC48D;--1:#3B61B0">add</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#ECC48D;--1:#3B61B0">@kontent-ai/delivery-sdk</span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="pnpm add @kontent-ai/delivery-sdk"><div></div></button></div></figure></div>'
      }), createVNode(Fragment$1, {
        slot: "yarn",
        "set:html": '<div class="expressive-code"><figure class="frame is-terminal not-content"><figcaption class="header"><span class="title"></span><span class="sr-only">Terminal window</span></figcaption><pre data-language="shell"><code><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#82AAFF;--1:#3B61B0">yarn</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#ECC48D;--1:#3B61B0">add</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#ECC48D;--1:#3B61B0">@kontent-ai/delivery-sdk</span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="yarn add @kontent-ai/delivery-sdk"><div></div></button></div></figure></div>'
      })]
    }), "\n", createVNode(Fragment$1, {
      "set:html": '<p>Next, create a new file called <code dir="auto">kontent.ts</code> in the <code dir="auto">src/lib/</code> directory of your Astro project.</p>\n<div class="expressive-code"><figure class="frame has-title not-content"><figcaption class="header"><span class="title">src/lib/kontent.ts</span></figcaption><pre data-language="ts"><code><div class="ec-line"><div class="code"><span style="--0:#C792EA;--1:#8844AE">import</span><span style="--0:#D6DEEB;--1:#403F53"> { createDeliveryClient } </span><span style="--0:#C792EA;--1:#8844AE">from</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#D9F5DD;--1:#111111">"</span><span style="--0:#ECC48D;--1:#984E4D">@kontent-ai/delivery-sdk</span><span style="--0:#D9F5DD;--1:#111111">"</span><span style="--0:#D6DEEB;--1:#403F53">;</span></div></div><div class="ec-line"><div class="code">\n</div></div><div class="ec-line"><div class="code"><span style="--0:#C792EA;--1:#8844AE">export const </span><span style="--0:#82AAFF;--1:#3B61B0">deliveryClient</span><span style="--0:#C792EA;--1:#8844AE"> = </span><span style="--0:#82AAFF;--1:#3B61B0">createDeliveryClient</span><span style="--0:#D6DEEB;--1:#403F53">(</span><span style="--0:#C792EA;--1:#8844AE">{</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#C792EA;--1:#8844AE">    </span></span><span style="--0:#C792EA;--1:#8844AE">environmentId: import.</span><span style="--0:#7FDBCA;--1:#096E72">meta</span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#FAF39F;--1:#111111">env</span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#82AAFF;--1:#3B61B0">KONTENT_ENVIRONMENT_ID</span><span style="--0:#C792EA;--1:#8844AE">,</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#C792EA;--1:#8844AE">    </span></span><span style="--0:#C792EA;--1:#8844AE">previewApiKey: import.</span><span style="--0:#7FDBCA;--1:#096E72">meta</span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#FAF39F;--1:#111111">env</span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#82AAFF;--1:#3B61B0">KONTENT_PREVIEW_API_KEY</span><span style="--0:#C792EA;--1:#8844AE">,</span></div></div><div class="ec-line"><div class="code"><span style="--0:#C792EA;--1:#8844AE">}</span><span style="--0:#D6DEEB;--1:#403F53">);</span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="import { createDeliveryClient } from &#x22;@kontent-ai/delivery-sdk&#x22;;export const deliveryClient = createDeliveryClient({    environmentId: import.meta.env.KONTENT_ENVIRONMENT_ID,    previewApiKey: import.meta.env.KONTENT_PREVIEW_API_KEY,});"><div></div></button></div></figure></div>\n<aside aria-label="Note" class="starlight-aside starlight-aside--note"><p class="starlight-aside__title" aria-hidden="true"><svg viewBox="0 0 24 24" width="16" height="16" fill="currentColor" class="starlight-aside__icon"><path d="M12 11C11.7348 11 11.4804 11.1054 11.2929 11.2929C11.1054 11.4804 11 11.7348 11 12V16C11 16.2652 11.1054 16.5196 11.2929 16.7071C11.4804 16.8946 11.7348 17 12 17C12.2652 17 12.5196 16.8946 12.7071 16.7071C12.8946 16.5196 13 16.2652 13 16V12C13 11.7348 12.8946 11.4804 12.7071 11.2929C12.5196 11.1054 12.2652 11 12 11ZM12.38 7.08C12.1365 6.97998 11.8635 6.97998 11.62 7.08C11.4973 7.12759 11.3851 7.19896 11.29 7.29C11.2017 7.3872 11.1306 7.49882 11.08 7.62C11.024 7.73868 10.9966 7.86882 11 8C10.9992 8.13161 11.0245 8.26207 11.0742 8.38391C11.124 8.50574 11.1973 8.61656 11.29 8.71C11.3872 8.79833 11.4988 8.86936 11.62 8.92C11.7715 8.98224 11.936 9.00632 12.099 8.99011C12.2619 8.97391 12.4184 8.91792 12.5547 8.82707C12.691 8.73622 12.8029 8.61328 12.8805 8.46907C12.9582 8.32486 12.9992 8.16378 13 8C12.9963 7.73523 12.8927 7.48163 12.71 7.29C12.6149 7.19896 12.5028 7.12759 12.38 7.08ZM12 2C10.0222 2 8.08879 2.58649 6.4443 3.6853C4.79981 4.78412 3.51809 6.3459 2.76121 8.17317C2.00433 10.0004 1.8063 12.0111 2.19215 13.9509C2.578 15.8907 3.53041 17.6725 4.92894 19.0711C6.32746 20.4696 8.10929 21.422 10.0491 21.8079C11.9889 22.1937 13.9996 21.9957 15.8268 21.2388C17.6541 20.4819 19.2159 19.2002 20.3147 17.5557C21.4135 15.9112 22 13.9778 22 12C22 10.6868 21.7413 9.38642 21.2388 8.17317C20.7363 6.95991 19.9997 5.85752 19.0711 4.92893C18.1425 4.00035 17.0401 3.26375 15.8268 2.7612C14.6136 2.25866 13.3132 2 12 2ZM12 20C10.4178 20 8.87104 19.5308 7.55544 18.6518C6.23985 17.7727 5.21447 16.5233 4.60897 15.0615C4.00347 13.5997 3.84504 11.9911 4.15372 10.4393C4.4624 8.88743 5.22433 7.46197 6.34315 6.34315C7.46197 5.22433 8.88743 4.4624 10.4393 4.15372C11.9911 3.84504 13.5997 4.00346 15.0615 4.60896C16.5233 5.21447 17.7727 6.23984 18.6518 7.55544C19.5308 8.87103 20 10.4177 20 12C20 14.1217 19.1572 16.1566 17.6569 17.6569C16.1566 19.1571 14.1217 20 12 20Z"></path></svg>Note</p><div class="starlight-aside__content"><p>Read more on <a href="/en/guides/environment-variables/#getting-environment-variables">getting environment variables in Astro</a>.</p></div></aside>\n<p>This implementation creates a new <code dir="auto">DeliveryClient</code> object using credentials from the <code dir="auto">.env</code> file.</p>\n<aside aria-label="Previews" class="starlight-aside starlight-aside--note"><p class="starlight-aside__title" aria-hidden="true"><svg viewBox="0 0 24 24" width="16" height="16" fill="currentColor" class="starlight-aside__icon"><path d="M12 11C11.7348 11 11.4804 11.1054 11.2929 11.2929C11.1054 11.4804 11 11.7348 11 12V16C11 16.2652 11.1054 16.5196 11.2929 16.7071C11.4804 16.8946 11.7348 17 12 17C12.2652 17 12.5196 16.8946 12.7071 16.7071C12.8946 16.5196 13 16.2652 13 16V12C13 11.7348 12.8946 11.4804 12.7071 11.2929C12.5196 11.1054 12.2652 11 12 11ZM12.38 7.08C12.1365 6.97998 11.8635 6.97998 11.62 7.08C11.4973 7.12759 11.3851 7.19896 11.29 7.29C11.2017 7.3872 11.1306 7.49882 11.08 7.62C11.024 7.73868 10.9966 7.86882 11 8C10.9992 8.13161 11.0245 8.26207 11.0742 8.38391C11.124 8.50574 11.1973 8.61656 11.29 8.71C11.3872 8.79833 11.4988 8.86936 11.62 8.92C11.7715 8.98224 11.936 9.00632 12.099 8.99011C12.2619 8.97391 12.4184 8.91792 12.5547 8.82707C12.691 8.73622 12.8029 8.61328 12.8805 8.46907C12.9582 8.32486 12.9992 8.16378 13 8C12.9963 7.73523 12.8927 7.48163 12.71 7.29C12.6149 7.19896 12.5028 7.12759 12.38 7.08ZM12 2C10.0222 2 8.08879 2.58649 6.4443 3.6853C4.79981 4.78412 3.51809 6.3459 2.76121 8.17317C2.00433 10.0004 1.8063 12.0111 2.19215 13.9509C2.578 15.8907 3.53041 17.6725 4.92894 19.0711C6.32746 20.4696 8.10929 21.422 10.0491 21.8079C11.9889 22.1937 13.9996 21.9957 15.8268 21.2388C17.6541 20.4819 19.2159 19.2002 20.3147 17.5557C21.4135 15.9112 22 13.9778 22 12C22 10.6868 21.7413 9.38642 21.2388 8.17317C20.7363 6.95991 19.9997 5.85752 19.0711 4.92893C18.1425 4.00035 17.0401 3.26375 15.8268 2.7612C14.6136 2.25866 13.3132 2 12 2ZM12 20C10.4178 20 8.87104 19.5308 7.55544 18.6518C6.23985 17.7727 5.21447 16.5233 4.60897 15.0615C4.00347 13.5997 3.84504 11.9911 4.15372 10.4393C4.4624 8.88743 5.22433 7.46197 6.34315 6.34315C7.46197 5.22433 8.88743 4.4624 10.4393 4.15372C11.9911 3.84504 13.5997 4.00346 15.0615 4.60896C16.5233 5.21447 17.7727 6.23984 18.6518 7.55544C19.5308 8.87103 20 10.4177 20 12C20 14.1217 19.1572 16.1566 17.6569 17.6569C16.1566 19.1571 14.1217 20 12 20Z"></path></svg>Previews</p><div class="starlight-aside__content"><p>The <code dir="auto">previewApiKey</code> is optional. When used, you can <a href="https://github.com/kontent-ai/delivery-sdk-js#enable-preview-mode-per-query">configure each query</a> to the Delivery API endpoint to return the latest versions of content items regardless of their state in the workflow. Otherwise, only published items are returned.</p></div></aside>\n<p>Finally, the root directory of your Astro project should now include these new files:</p>\n'
    }), createVNode($$FileTree, {
      title: "Project Structure",
      "set:html": "<ul>\n<li>src/\n<ul>\n<li>lib/\n<ul>\n<li><strong>kontent.ts</strong></li>\n</ul>\n</li>\n<li>env.d.ts</li>\n</ul>\n</li>\n<li>.env</li>\n<li>astro.config.mjs</li>\n<li>package.json</li>\n</ul>"
    }), "\n", createVNode(Fragment$1, {
      "set:html": '<div class="sl-heading-wrapper level-h3"><h3 id="fetching-data">Fetching data</h3><a class="sl-anchor-link" href="#fetching-data"><span aria-hidden="true" class="sl-anchor-icon"><svg width="16" height="16" viewBox="0 0 24 24"><path fill="currentcolor" d="m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z"></path></svg></span><span class="sr-only">Section titled “Fetching data”</span></a></div>\n<p>The <code dir="auto">DeliveryClient</code> is now available to all components. To fetch content, use the <code dir="auto">DeliveryClient</code> and method chaining to define your desired items. This example shows a basic fetch of blog posts and renders their titles in a list:</p>\n<div class="expressive-code"><figure class="frame has-title not-content"><figcaption class="header"><span class="title">src/pages/index.astro</span></figcaption><pre data-language="astro"><code><div class="ec-line"><div class="code"><span style="--0:#919F9F;--1:#5F636F">---</span></div></div><div class="ec-line highlight ins"><div class="code"><span style="--0:#d2a6ee;--1:#6a3588">import</span><span style="--0:#D6DEEB;--1:#403F53"> { deliveryClient } </span><span style="--0:#d2a6ee;--1:#6a3588">from</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#D9F5DD;--1:#111111">"</span><span style="--0:#ECC48D;--1:#723b3a">../lib/kontent</span><span style="--0:#D9F5DD;--1:#111111">"</span><span style="--0:#D6DEEB;--1:#403F53">;</span></div></div><div class="ec-line highlight ins"><div class="code">\n</div></div><div class="ec-line highlight ins"><div class="code"><span style="--0:#d2a6ee;--1:#6a3588">const </span><span style="--0:#94b6ff;--1:#2d4a87">blogPosts</span><span style="--0:#d2a6ee;--1:#6a3588"> = await </span><span style="--0:#D6DEEB;--1:#403F53">deliveryClient</span></div></div><div class="ec-line highlight ins"><div class="code"><span class="indent">    </span><span style="--0:#d2a6ee;--1:#6a3588">.</span><span style="--0:#94b6ff;--1:#2d4a87">items</span><span style="--0:#D6DEEB;--1:#403F53">()</span></div></div><div class="ec-line highlight ins"><div class="code"><span class="indent">    </span><span style="--0:#d2a6ee;--1:#6a3588">.</span><span style="--0:#94b6ff;--1:#2d4a87">type</span><span style="--0:#D6DEEB;--1:#403F53">(</span><span style="--0:#D9F5DD;--1:#111111">"</span><span style="--0:#ECC48D;--1:#723b3a">blogPost</span><span style="--0:#D9F5DD;--1:#111111">"</span><span style="--0:#D6DEEB;--1:#403F53">)</span></div></div><div class="ec-line highlight ins"><div class="code"><span class="indent">    </span><span style="--0:#d2a6ee;--1:#6a3588">.</span><span style="--0:#94b6ff;--1:#2d4a87">toPromise</span><span style="--0:#D6DEEB;--1:#403F53">()</span></div></div><div class="ec-line"><div class="code"><span style="--0:#919F9F;--1:#5F636F">---</span></div></div><div class="ec-line"><div class="code"><span style="--1:#8844AE"><span style="--0:#7FDBCA">&#x3C;</span><span style="--0:#CAECE6">html</span><span style="--0:#7FDBCA"> </span></span><span style="--0:#C5E478;--1:#3B61B0">lang</span><span style="--0:#7FDBCA;--1:#8844AE">=</span><span style="--0:#D9F5DD;--1:#111111">"</span><span style="--0:#ECC48D;--1:#984E4D">en</span><span style="--0:#D9F5DD;--1:#111111">"</span><span style="--0:#7FDBCA;--1:#8844AE">></span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--1:#8844AE"><span style="--0:#7FDBCA">&#x3C;</span><span style="--0:#CAECE6">head</span><span style="--0:#7FDBCA">></span></span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--1:#8844AE"><span style="--0:#7FDBCA">&#x3C;</span><span style="--0:#CAECE6">meta</span><span style="--0:#7FDBCA"> </span></span><span style="--0:#C5E478;--1:#3B61B0">charset</span><span style="--0:#7FDBCA;--1:#8844AE">=</span><span style="--0:#D9F5DD;--1:#111111">"</span><span style="--0:#ECC48D;--1:#984E4D">utf-8</span><span style="--0:#D9F5DD;--1:#111111">"</span><span style="--0:#7FDBCA;--1:#8844AE"> /></span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--1:#8844AE"><span style="--0:#7FDBCA">&#x3C;</span><span style="--0:#CAECE6">meta</span><span style="--0:#7FDBCA"> </span></span><span style="--0:#C5E478;--1:#3B61B0">name</span><span style="--0:#7FDBCA;--1:#8844AE">=</span><span style="--0:#D9F5DD;--1:#111111">"</span><span style="--0:#ECC48D;--1:#984E4D">viewport</span><span style="--0:#D9F5DD;--1:#111111">"</span><span style="--0:#7FDBCA;--1:#8844AE"> </span><span style="--0:#C5E478;--1:#3B61B0">content</span><span style="--0:#7FDBCA;--1:#8844AE">=</span><span style="--0:#D9F5DD;--1:#111111">"</span><span style="--0:#ECC48D;--1:#984E4D">width=device-width</span><span style="--0:#D9F5DD;--1:#111111">"</span><span style="--0:#7FDBCA;--1:#8844AE"> /></span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--1:#8844AE"><span style="--0:#7FDBCA">&#x3C;</span><span style="--0:#CAECE6">title</span><span style="--0:#7FDBCA">></span></span><span style="--0:#D6DEEB;--1:#403F53">Astro</span><span style="--1:#8844AE"><span style="--0:#7FDBCA">&#x3C;/</span><span style="--0:#CAECE6">title</span><span style="--0:#7FDBCA">></span></span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--1:#8844AE"><span style="--0:#7FDBCA">&#x3C;/</span><span style="--0:#CAECE6">head</span><span style="--0:#7FDBCA">></span></span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--1:#8844AE"><span style="--0:#7FDBCA">&#x3C;</span><span style="--0:#CAECE6">body</span><span style="--0:#7FDBCA">></span></span></div></div><div class="ec-line highlight ins"><div class="code"><span class="indent">        </span><span style="--1:#6a3588"><span style="--0:#7FDBCA">&#x3C;</span><span style="--0:#CAECE6">ul</span><span style="--0:#7FDBCA">></span></span></div></div><div class="ec-line highlight ins"><div class="code"><span class="indent">        </span><span style="--0:#eaa5a4;--1:#882b28">{</span><span style="--0:#D6DEEB;--1:#403F53">blogPosts</span><span style="--0:#d2a6ee;--1:#6a3588">.</span><span style="--0:#FAF39F;--1:#111111">data</span><span style="--0:#d2a6ee;--1:#6a3588">.</span><span style="--0:#FAF39F;--1:#111111">items</span><span style="--0:#d2a6ee;--1:#6a3588">.</span><span style="--0:#94b6ff;--1:#2d4a87">map</span><span style="--1:#403F53"><span style="--0:#D6DEEB">(</span><span style="--0:#D7DBE0">blogPost</span><span style="--0:#D6DEEB"> </span></span><span style="--0:#d2a6ee;--1:#6a3588">=></span><span style="--0:#D6DEEB;--1:#403F53"> (</span></div></div><div class="ec-line highlight ins"><div class="code"><span class="indent">            </span><span style="--1:#6a3588"><span style="--0:#7FDBCA">&#x3C;</span><span style="--0:#CAECE6">li</span><span style="--0:#7FDBCA">></span></span><span style="--0:#eaa5a4;--1:#882b28">{</span><span style="--0:#D6DEEB;--1:#403F53">blogPost</span><span style="--0:#d2a6ee;--1:#6a3588">.</span><span style="--0:#FAF39F;--1:#111111">elements</span><span style="--0:#d2a6ee;--1:#6a3588">.</span><span style="--0:#FAF39F;--1:#111111">title</span><span style="--0:#d2a6ee;--1:#6a3588">.</span><span style="--0:#7FDBCA;--1:#075457">value</span><span style="--0:#eaa5a4;--1:#882b28">}</span><span style="--1:#6a3588"><span style="--0:#7FDBCA">&#x3C;/</span><span style="--0:#CAECE6">li</span><span style="--0:#7FDBCA">></span></span></div></div><div class="ec-line highlight ins"><div class="code"><span class="indent"><span style="--0:#D6DEEB;--1:#403F53">        </span></span><span style="--0:#D6DEEB;--1:#403F53">))</span><span style="--0:#eaa5a4;--1:#882b28">}</span></div></div><div class="ec-line highlight ins"><div class="code"><span class="indent">        </span><span style="--1:#6a3588"><span style="--0:#7FDBCA">&#x3C;/</span><span style="--0:#CAECE6">ul</span><span style="--0:#7FDBCA">></span></span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--1:#8844AE"><span style="--0:#7FDBCA">&#x3C;/</span><span style="--0:#CAECE6">body</span><span style="--0:#7FDBCA">></span></span></div></div><div class="ec-line"><div class="code"><span style="--1:#8844AE"><span style="--0:#7FDBCA">&#x3C;/</span><span style="--0:#CAECE6">html</span><span style="--0:#7FDBCA">></span></span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="---import { deliveryClient } from &#x22;../lib/kontent&#x22;;const blogPosts = await deliveryClient    .items()    .type(&#x22;blogPost&#x22;)    .toPromise()---<html lang=&#x22;en&#x22;>  <head>    <meta charset=&#x22;utf-8&#x22; />    <meta name=&#x22;viewport&#x22; content=&#x22;width=device-width&#x22; />    <title>Astro</title>  </head>  <body>        <ul>        {blogPosts.data.items.map(blogPost => (            <li>{blogPost.elements.title.value}</li>        ))}        </ul>    </body></html>"><div></div></button></div></figure></div>\n<p>You can find more querying options in the <a href="https://kontent.ai/learn/develop/hello-world/get-content/javascript">Kontent.ai documentation</a>.</p>\n<div class="sl-heading-wrapper level-h2"><h2 id="making-a-blog-with-astro-and-kontentai">Making a blog with Astro and Kontent.ai</h2><a class="sl-anchor-link" href="#making-a-blog-with-astro-and-kontentai"><span aria-hidden="true" class="sl-anchor-icon"><svg width="16" height="16" viewBox="0 0 24 24"><path fill="currentcolor" d="m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z"></path></svg></span><span class="sr-only">Section titled “Making a blog with Astro and Kontent.ai”</span></a></div>\n<p>With the setup above, you are now able to create a blog that uses Kontent.ai as the source of content.</p>\n<div class="sl-heading-wrapper level-h3"><h3 id="prerequisites-1">Prerequisites</h3><a class="sl-anchor-link" href="#prerequisites-1"><span aria-hidden="true" class="sl-anchor-icon"><svg width="16" height="16" viewBox="0 0 24 24"><path fill="currentcolor" d="m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z"></path></svg></span><span class="sr-only">Section titled “Prerequisites”</span></a></div>\n<ol>\n<li>\n<p><strong>Kontent.ai project</strong> - For this tutorial, using a blank project is recommended. If you already have some content types in your content model, you may use them, but you will need to modify the code snippets to match your content model.</p>\n</li>\n<li>\n<p><strong>Astro project configured for content fetching from Kontent.ai</strong> - see above for more details on how to set up an Astro project with Kontent.ai</p>\n</li>\n</ol>\n<div class="sl-heading-wrapper level-h3"><h3 id="setting-up-content-model">Setting up content model</h3><a class="sl-anchor-link" href="#setting-up-content-model"><span aria-hidden="true" class="sl-anchor-icon"><svg width="16" height="16" viewBox="0 0 24 24"><path fill="currentcolor" d="m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z"></path></svg></span><span class="sr-only">Section titled “Setting up content model”</span></a></div>\n<p>In Kontent.ai, navigate to <strong>Content model</strong> and create a new content type with the following fields and values:</p>\n<ul>\n<li><strong>Name:</strong> Blog Post</li>\n<li>Elements:\n<ul>\n<li>Text field\n<ul>\n<li><strong>Name:</strong> Title</li>\n<li><strong>Element Required:</strong> yes</li>\n</ul>\n</li>\n<li>Rich text field\n<ul>\n<li><strong>Name:</strong> Teaser</li>\n<li><strong>Element Required:</strong> yes</li>\n<li><strong>Allowed in this element:</strong> only check Text</li>\n</ul>\n</li>\n<li>Rich text field\n<ul>\n<li><strong>Name:</strong> Content</li>\n<li><strong>Element Required:</strong> yes</li>\n</ul>\n</li>\n<li>Date &#x26; time field\n<ul>\n<li><strong>Name:</strong> Date</li>\n</ul>\n</li>\n<li>URL slug field\n<ul>\n<li><strong>Name:</strong> URL slug</li>\n<li><strong>Element Required:</strong> yes</li>\n<li><strong>Auto-generate from:</strong> select “Title”</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Then, click on <strong>Save Changes</strong>.</p>\n<div class="sl-heading-wrapper level-h3"><h3 id="creating-content">Creating content</h3><a class="sl-anchor-link" href="#creating-content"><span aria-hidden="true" class="sl-anchor-icon"><svg width="16" height="16" viewBox="0 0 24 24"><path fill="currentcolor" d="m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z"></path></svg></span><span class="sr-only">Section titled “Creating content”</span></a></div>\n<p>Now, navigate to <strong>Content &#x26; assets</strong> tab and create a new content item of type <strong>Blog Post</strong>. Fill the fields using these values:</p>\n<ul>\n<li><strong>Content item name:</strong> Astro</li>\n<li><strong>Title:</strong> Astro is amazing</li>\n<li><strong>Teaser:</strong> Astro is an all-in-one framework for building fast websites faster.</li>\n<li><strong>Content:</strong> You can use JavaScript to implement the website functionality, but no client bundle is necessary.</li>\n<li><strong>Date &#x26; time:</strong> select today</li>\n<li><strong>URL slug:</strong> astro-is-amazing</li>\n</ul>\n<p>When you’re finished, publish the blog post using the <strong>Publish</strong> button at the top.</p>\n<p><em>Note: Feel free to create as many blog posts as you like before moving to the next step.</em></p>\n<div class="sl-heading-wrapper level-h3"><h3 id="generating-content-model-in-typescript">Generating content model in TypeScript</h3><a class="sl-anchor-link" href="#generating-content-model-in-typescript"><span aria-hidden="true" class="sl-anchor-icon"><svg width="16" height="16" viewBox="0 0 24 24"><path fill="currentcolor" d="m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z"></path></svg></span><span class="sr-only">Section titled “Generating content model in TypeScript”</span></a></div>\n<p>Next, you’ll generate TypeScript types out of your content model.</p>\n<aside aria-label="Note" class="starlight-aside starlight-aside--note"><p class="starlight-aside__title" aria-hidden="true"><svg viewBox="0 0 24 24" width="16" height="16" fill="currentColor" class="starlight-aside__icon"><path d="M12 11C11.7348 11 11.4804 11.1054 11.2929 11.2929C11.1054 11.4804 11 11.7348 11 12V16C11 16.2652 11.1054 16.5196 11.2929 16.7071C11.4804 16.8946 11.7348 17 12 17C12.2652 17 12.5196 16.8946 12.7071 16.7071C12.8946 16.5196 13 16.2652 13 16V12C13 11.7348 12.8946 11.4804 12.7071 11.2929C12.5196 11.1054 12.2652 11 12 11ZM12.38 7.08C12.1365 6.97998 11.8635 6.97998 11.62 7.08C11.4973 7.12759 11.3851 7.19896 11.29 7.29C11.2017 7.3872 11.1306 7.49882 11.08 7.62C11.024 7.73868 10.9966 7.86882 11 8C10.9992 8.13161 11.0245 8.26207 11.0742 8.38391C11.124 8.50574 11.1973 8.61656 11.29 8.71C11.3872 8.79833 11.4988 8.86936 11.62 8.92C11.7715 8.98224 11.936 9.00632 12.099 8.99011C12.2619 8.97391 12.4184 8.91792 12.5547 8.82707C12.691 8.73622 12.8029 8.61328 12.8805 8.46907C12.9582 8.32486 12.9992 8.16378 13 8C12.9963 7.73523 12.8927 7.48163 12.71 7.29C12.6149 7.19896 12.5028 7.12759 12.38 7.08ZM12 2C10.0222 2 8.08879 2.58649 6.4443 3.6853C4.79981 4.78412 3.51809 6.3459 2.76121 8.17317C2.00433 10.0004 1.8063 12.0111 2.19215 13.9509C2.578 15.8907 3.53041 17.6725 4.92894 19.0711C6.32746 20.4696 8.10929 21.422 10.0491 21.8079C11.9889 22.1937 13.9996 21.9957 15.8268 21.2388C17.6541 20.4819 19.2159 19.2002 20.3147 17.5557C21.4135 15.9112 22 13.9778 22 12C22 10.6868 21.7413 9.38642 21.2388 8.17317C20.7363 6.95991 19.9997 5.85752 19.0711 4.92893C18.1425 4.00035 17.0401 3.26375 15.8268 2.7612C14.6136 2.25866 13.3132 2 12 2ZM12 20C10.4178 20 8.87104 19.5308 7.55544 18.6518C6.23985 17.7727 5.21447 16.5233 4.60897 15.0615C4.00347 13.5997 3.84504 11.9911 4.15372 10.4393C4.4624 8.88743 5.22433 7.46197 6.34315 6.34315C7.46197 5.22433 8.88743 4.4624 10.4393 4.15372C11.9911 3.84504 13.5997 4.00346 15.0615 4.60896C16.5233 5.21447 17.7727 6.23984 18.6518 7.55544C19.5308 8.87103 20 10.4177 20 12C20 14.1217 19.1572 16.1566 17.6569 17.6569C16.1566 19.1571 14.1217 20 12 20Z"></path></svg>Note</p><div class="starlight-aside__content"><p>This step is optional but provides a much better developer experience and allows you to discover potential problems at build time rather than at runtime.</p></div></aside>\n<p>First, install the <a href="https://github.com/kontent-ai/model-generator-js">Kontent.ai JS model generator</a>, <a href="https://github.com/TypeStrong/ts-node">ts-node</a>, and <a href="https://github.com/motdotla/dotenv">dotenv</a>:</p>\n'
    }), createVNode($$PackageManagerTabs, {
      children: [createVNode(Fragment$1, {
        slot: "npm",
        "set:html": '<div class="expressive-code"><figure class="frame is-terminal not-content"><figcaption class="header"><span class="title"></span><span class="sr-only">Terminal window</span></figcaption><pre data-language="shell"><code><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#82AAFF;--1:#3B61B0">npm</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#ECC48D;--1:#3B61B0">install</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#ECC48D;--1:#3B61B0">@kontent-ai/model-generator</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#ECC48D;--1:#3B61B0">ts-node</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#ECC48D;--1:#3B61B0">dotenv</span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="npm install @kontent-ai/model-generator ts-node dotenv"><div></div></button></div></figure></div>'
      }), createVNode(Fragment$1, {
        slot: "pnpm",
        "set:html": '<div class="expressive-code"><figure class="frame is-terminal not-content"><figcaption class="header"><span class="title"></span><span class="sr-only">Terminal window</span></figcaption><pre data-language="shell"><code><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#82AAFF;--1:#3B61B0">pnpm</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#ECC48D;--1:#3B61B0">add</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#ECC48D;--1:#3B61B0">@kontent-ai/model-generator</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#ECC48D;--1:#3B61B0">ts-node</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#ECC48D;--1:#3B61B0">dotenv</span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="pnpm add @kontent-ai/model-generator ts-node dotenv"><div></div></button></div></figure></div>'
      }), createVNode(Fragment$1, {
        slot: "yarn",
        "set:html": '<div class="expressive-code"><figure class="frame is-terminal not-content"><figcaption class="header"><span class="title"></span><span class="sr-only">Terminal window</span></figcaption><pre data-language="shell"><code><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#82AAFF;--1:#3B61B0">yarn</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#ECC48D;--1:#3B61B0">add</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#ECC48D;--1:#3B61B0">@kontent-ai/model-generator</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#ECC48D;--1:#3B61B0">ts-node</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#ECC48D;--1:#3B61B0">dotenv</span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="yarn add @kontent-ai/model-generator ts-node dotenv"><div></div></button></div></figure></div>'
      })]
    }), "\n", createVNode(Fragment$1, {
      "set:html": `<p>Then, add the following script to package.json:</p>
<div class="expressive-code"><figure class="frame has-title not-content"><figcaption class="header"><span class="title">package.json</span></figcaption><pre data-language="json"><code><div class="ec-line"><div class="code"><span style="--0:#D6DEEB;--1:#403F53">{</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#FFFFFF;--1:#984E4D">...</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#7FDBCA;--1:#096E72">"scripts"</span><span style="--0:#D6DEEB;--1:#403F53">: {</span></div></div><div class="ec-line"><div class="code"><span class="indent">        </span><span style="--0:#FFFFFF;--1:#984E4D">...</span></div></div><div class="ec-line"><div class="code"><span class="indent">        </span><span style="--0:#7FDBCA;--1:#096E72">"regenerate:models"</span><span style="--0:#D6DEEB;--1:#403F53">: </span><span style="--0:#D9F5DD;--1:#111111">"</span><span style="--0:#C789D6;--1:#7C5686">ts-node --esm ./generate-models.ts</span><span style="--0:#D9F5DD;--1:#111111">"</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#D6DEEB;--1:#403F53">    </span></span><span style="--0:#D6DEEB;--1:#403F53">},</span></div></div><div class="ec-line"><div class="code"><span style="--0:#D6DEEB;--1:#403F53">}</span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="{    ...    &#x22;scripts&#x22;: {        ...        &#x22;regenerate:models&#x22;: &#x22;ts-node --esm ./generate-models.ts&#x22;    },}"><div></div></button></div></figure></div>
<p>Because the types require structural information about your project that is not available in the public API, you also need to add a Content Management API key to the <code dir="auto">.env</code> file. You can generate the key under <strong>Environment settings -> API keys -> Management API</strong>.</p>
<div class="expressive-code"><figure class="frame has-title not-content"><figcaption class="header"><span class="title">.env</span></figcaption><pre data-language="ini"><code><div class="ec-line"><div class="code"><span style="--0:#C792EA;--1:#8844AE">KONTENT_ENVIRONMENT_ID</span><span style="--0:#D6DEEB;--1:#403F53">=YOUR_ENVIRONMENT_ID</span></div></div><div class="ec-line"><div class="code"><span style="--0:#C792EA;--1:#8844AE">KONTENT_PREVIEW_API_KEY</span><span style="--0:#D6DEEB;--1:#403F53">=YOUR_PREVIEW_API_KEY</span></div></div><div class="ec-line highlight ins"><div class="code"><span style="--0:#d2a6ee;--1:#6a3588">KONTENT_MANAGEMENT_API_KEY</span><span style="--0:#D6DEEB;--1:#403F53">=YOUR_MANAGEMENT_API_KEY</span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="KONTENT_ENVIRONMENT_ID=YOUR_ENVIRONMENT_IDKONTENT_PREVIEW_API_KEY=YOUR_PREVIEW_API_KEYKONTENT_MANAGEMENT_API_KEY=YOUR_MANAGEMENT_API_KEY"><div></div></button></div></figure></div>
<p>Finally, add the script <code dir="auto">generate-models.ts</code> that configures the model generator to generate the models:</p>
<div class="expressive-code"><figure class="frame has-title not-content"><figcaption class="header"><span class="title">generate-models.ts</span></figcaption><pre data-language="ts"><code><div class="ec-line"><div class="code"><span style="--0:#C792EA;--1:#8844AE">import</span><span style="--0:#D6DEEB;--1:#403F53"> { generateModelsAsync, textHelper } </span><span style="--0:#C792EA;--1:#8844AE">from</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#ECC48D;--1:#984E4D">@kontent-ai/model-generator</span><span style="--0:#D9F5DD;--1:#111111">'</span></div></div><div class="ec-line"><div class="code"><span style="--0:#C792EA;--1:#8844AE">import</span><span style="--0:#D6DEEB;--1:#403F53"> { rmSync, mkdirSync } </span><span style="--0:#C792EA;--1:#8844AE">from</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#ECC48D;--1:#984E4D">fs</span><span style="--0:#D9F5DD;--1:#111111">'</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#C792EA;--1:#8844AE">import</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#82AAFF;--1:#3B61B0">*</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#C792EA;--1:#8844AE">as</span><span style="--0:#D6DEEB;--1:#403F53"> dotenv </span><span style="--0:#C792EA;--1:#8844AE">from</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#ECC48D;--1:#984E4D">dotenv</span><span style="--0:#D9F5DD;--1:#111111">'</span></div></div><div class="ec-line"><div class="code"><span style="--0:#D6DEEB;--1:#403F53">dotenv</span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#82AAFF;--1:#3B61B0">config</span><span style="--0:#D6DEEB;--1:#403F53">()</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#C792EA;--1:#8844AE">const </span><span style="--0:#82AAFF;--1:#3B61B0">runAsync</span><span style="--0:#C792EA;--1:#8844AE"> = async </span><span style="--0:#D9F5DD;--1:#111111">()</span><span style="--0:#C792EA;--1:#8844AE"> => {</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#82AAFF;--1:#3B61B0">rmSync</span><span style="--0:#D6DEEB;--1:#403F53">(</span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#ECC48D;--1:#984E4D">./src/models</span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#C792EA;--1:#8844AE">, { force: </span><span style="--0:#FF6A83;--1:#A24848">true</span><span style="--0:#C792EA;--1:#8844AE">, recursive: </span><span style="--0:#FF6A83;--1:#A24848">true</span><span style="--0:#C792EA;--1:#8844AE"> }</span><span style="--0:#D6DEEB;--1:#403F53">)</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#82AAFF;--1:#3B61B0">mkdirSync</span><span style="--0:#D6DEEB;--1:#403F53">(</span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#ECC48D;--1:#984E4D">./src/models</span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#D6DEEB;--1:#403F53">)</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#919F9F;--1:#5D6376">// change working directory to models</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#D6DEEB;--1:#403F53">process</span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#82AAFF;--1:#3B61B0">chdir</span><span style="--0:#D6DEEB;--1:#403F53">(</span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#ECC48D;--1:#984E4D">./src/models</span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#D6DEEB;--1:#403F53">)</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#C792EA;--1:#8844AE">  </span></span><span style="--0:#C792EA;--1:#8844AE">await </span><span style="--0:#82AAFF;--1:#3B61B0">generateModelsAsync</span><span style="--0:#D6DEEB;--1:#403F53">(</span><span style="--0:#C792EA;--1:#8844AE">{</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#C792EA;--1:#8844AE">    </span></span><span style="--0:#C792EA;--1:#8844AE">sdkType: </span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#ECC48D;--1:#984E4D">delivery</span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#C792EA;--1:#8844AE">,</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#C792EA;--1:#8844AE">    </span></span><span style="--0:#C792EA;--1:#8844AE">apiKey: </span><span style="--0:#D6DEEB;--1:#403F53">process</span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#FAF39F;--1:#111111">env</span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#82AAFF;--1:#3B61B0">KONTENT_MANAGEMENT_API_KEY</span><span style="--0:#C792EA;--1:#8844AE"> ?? </span><span style="--0:#D9F5DD;--1:#111111">''</span><span style="--0:#C792EA;--1:#8844AE">,</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#C792EA;--1:#8844AE">    </span></span><span style="--0:#C792EA;--1:#8844AE">environmentId: </span><span style="--0:#D6DEEB;--1:#403F53">process</span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#FAF39F;--1:#111111">env</span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#82AAFF;--1:#3B61B0">KONTENT_ENVIRONMENT_ID</span><span style="--0:#C792EA;--1:#8844AE"> ?? </span><span style="--0:#D9F5DD;--1:#111111">''</span><span style="--0:#C792EA;--1:#8844AE">,</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#C792EA;--1:#8844AE">    </span></span><span style="--0:#C792EA;--1:#8844AE">addTimestamp: </span><span style="--0:#FF6A83;--1:#A24848">false</span><span style="--0:#C792EA;--1:#8844AE">,</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#C792EA;--1:#8844AE">    </span></span><span style="--0:#C792EA;--1:#8844AE">isEnterpriseSubscription: </span><span style="--0:#FF6A83;--1:#A24848">false</span><span style="--0:#C792EA;--1:#8844AE">,</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#C792EA;--1:#8844AE">  </span></span><span style="--0:#C792EA;--1:#8844AE">}</span><span style="--0:#D6DEEB;--1:#403F53">)</span></div></div><div class="ec-line"><div class="code"><span style="--0:#C792EA;--1:#8844AE">}</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#919F9F;--1:#5D6376">// Self-invocation async function</span></div></div><div class="ec-line"><div class="code"><span style="--0:#D6DEEB;--1:#403F53">;(</span><span style="--0:#C792EA;--1:#8844AE">async</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#D9F5DD;--1:#111111">()</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#C792EA;--1:#8844AE">=></span><span style="--0:#D6DEEB;--1:#403F53"> {</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#C792EA;--1:#8844AE">await</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#82AAFF;--1:#3B61B0">runAsync</span><span style="--0:#D6DEEB;--1:#403F53">()</span></div></div><div class="ec-line"><div class="code"><span style="--0:#D6DEEB;--1:#403F53">})()</span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#82AAFF;--1:#3B61B0">catch</span><span style="--1:#403F53"><span style="--0:#D6DEEB">(</span><span style="--0:#D7DBE0">err</span><span style="--0:#D6DEEB"> </span></span><span style="--0:#C792EA;--1:#8844AE">=></span><span style="--0:#D6DEEB;--1:#403F53"> {</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#D6DEEB;--1:#403F53">  </span></span><span style="--0:#D6DEEB;--1:#403F53">console</span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#82AAFF;--1:#3B61B0">error</span><span style="--0:#D6DEEB;--1:#403F53">(err)</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#C792EA;--1:#8844AE">throw</span><span style="--0:#D6DEEB;--1:#403F53"> err</span></div></div><div class="ec-line"><div class="code"><span style="--0:#D6DEEB;--1:#403F53">})</span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="import { generateModelsAsync, textHelper } from &#x27;@kontent-ai/model-generator&#x27;import { rmSync, mkdirSync } from &#x27;fs&#x27;import * as dotenv from &#x27;dotenv&#x27;dotenv.config()const runAsync = async () => {  rmSync(&#x27;./src/models&#x27;, { force: true, recursive: true })  mkdirSync(&#x27;./src/models&#x27;)  // change working directory to models  process.chdir(&#x27;./src/models&#x27;)  await generateModelsAsync({    sdkType: &#x27;delivery&#x27;,    apiKey: process.env.KONTENT_MANAGEMENT_API_KEY ?? &#x27;&#x27;,    environmentId: process.env.KONTENT_ENVIRONMENT_ID ?? &#x27;&#x27;,    addTimestamp: false,    isEnterpriseSubscription: false,  })}// Self-invocation async function;(async () => {  await runAsync()})().catch(err => {  console.error(err)  throw err})"><div></div></button></div></figure></div>
<p>Now, execute it:</p>
`
    }), createVNode($$PackageManagerTabs, {
      children: [createVNode(Fragment$1, {
        slot: "npm",
        "set:html": '<div class="expressive-code"><figure class="frame is-terminal not-content"><figcaption class="header"><span class="title"></span><span class="sr-only">Terminal window</span></figcaption><pre data-language="shell"><code><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#82AAFF;--1:#3B61B0">npm</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#ECC48D;--1:#3B61B0">run</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#ECC48D;--1:#3B61B0">regenerate:models</span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="npm run regenerate:models"><div></div></button></div></figure></div>'
      }), createVNode(Fragment$1, {
        slot: "pnpm",
        "set:html": '<div class="expressive-code"><figure class="frame is-terminal not-content"><figcaption class="header"><span class="title"></span><span class="sr-only">Terminal window</span></figcaption><pre data-language="shell"><code><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#82AAFF;--1:#3B61B0">pnpm</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#ECC48D;--1:#3B61B0">run</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#ECC48D;--1:#3B61B0">regenerate:models</span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="pnpm run regenerate:models"><div></div></button></div></figure></div>'
      }), createVNode(Fragment$1, {
        slot: "yarn",
        "set:html": '<div class="expressive-code"><figure class="frame is-terminal not-content"><figcaption class="header"><span class="title"></span><span class="sr-only">Terminal window</span></figcaption><pre data-language="shell"><code><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#82AAFF;--1:#3B61B0">yarn</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#ECC48D;--1:#3B61B0">run</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#ECC48D;--1:#3B61B0">regenerate:models</span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="yarn run regenerate:models"><div></div></button></div></figure></div>'
      })]
    }), "\n", createVNode(Fragment$1, {
      "set:html": `<div class="sl-heading-wrapper level-h3"><h3 id="displaying-a-list-of-blog-posts">Displaying a list of blog posts</h3><a class="sl-anchor-link" href="#displaying-a-list-of-blog-posts"><span aria-hidden="true" class="sl-anchor-icon"><svg width="16" height="16" viewBox="0 0 24 24"><path fill="currentcolor" d="m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z"></path></svg></span><span class="sr-only">Section titled “Displaying a list of blog posts”</span></a></div>
<p>Now you’re ready to fetch some content. Go to the Astro page where you want to display a list of all blog posts, for example, the homepage <code dir="auto">index.astro</code> in <code dir="auto">src/pages</code>.</p>
<p>Fetch all blog posts in the frontmatter of the Astro page:</p>
<div class="expressive-code"><figure class="frame has-title not-content"><figcaption class="header"><span class="title">src/pages/index.astro</span></figcaption><pre data-language="astro"><code><div class="ec-line"><div class="code"><span style="--0:#919F9F;--1:#5F636F">---</span></div></div><div class="ec-line"><div class="code"><span style="--0:#C792EA;--1:#8844AE">import</span><span style="--0:#D6DEEB;--1:#403F53"> { deliveryClient } </span><span style="--0:#C792EA;--1:#8844AE">from</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#ECC48D;--1:#984E4D">../lib/kontent</span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#D6DEEB;--1:#403F53">;</span></div></div><div class="ec-line"><div class="code"><span style="--0:#C792EA;--1:#8844AE">import</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#C792EA;--1:#8844AE">type</span><span style="--0:#D6DEEB;--1:#403F53"> { BlogPost } </span><span style="--0:#C792EA;--1:#8844AE">from</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#ECC48D;--1:#984E4D">../models</span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#D6DEEB;--1:#403F53">;</span></div></div><div class="ec-line"><div class="code"><span style="--0:#C792EA;--1:#8844AE">import</span><span style="--0:#D6DEEB;--1:#403F53"> { contentTypes } </span><span style="--0:#C792EA;--1:#8844AE">from</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#ECC48D;--1:#984E4D">../models/project/contentTypes</span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#D6DEEB;--1:#403F53">;</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#C792EA;--1:#8844AE">const </span><span style="--0:#82AAFF;--1:#3B61B0">blogPosts</span><span style="--0:#C792EA;--1:#8844AE"> = await </span><span style="--0:#D6DEEB;--1:#403F53">deliveryClient</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#7FDBCA;--1:#096E72">items</span><span style="--0:#C792EA;--1:#8844AE">&#x3C;</span><span style="--0:#D6DEEB;--1:#403F53">BlogPost</span><span style="--0:#C792EA;--1:#8844AE">></span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#82AAFF;--1:#3B61B0">type</span><span style="--0:#D6DEEB;--1:#403F53">(contentTypes</span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#FAF39F;--1:#111111">blog_post</span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#7FDBCA;--1:#096E72">codename</span><span style="--0:#D6DEEB;--1:#403F53">)</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#82AAFF;--1:#3B61B0">toPromise</span><span style="--0:#D6DEEB;--1:#403F53">()</span></div></div><div class="ec-line"><div class="code"><span style="--0:#919F9F;--1:#5F636F">---</span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="---import { deliveryClient } from &#x27;../lib/kontent&#x27;;import type { BlogPost } from &#x27;../models&#x27;;import { contentTypes } from &#x27;../models/project/contentTypes&#x27;;const blogPosts = await deliveryClient    .items<BlogPost>    .type(contentTypes.blog_post.codename)    .toPromise()---"><div></div></button></div></figure></div>
<p>If you skipped the model generation, you can also use an untyped object and string literal to define the type:</p>
<div class="expressive-code"><figure class="frame not-content"><figcaption class="header"></figcaption><pre data-language="ts"><code><div class="ec-line"><div class="code"><span style="--0:#C792EA;--1:#8844AE">const </span><span style="--0:#82AAFF;--1:#3B61B0">blogPosts</span><span style="--0:#C792EA;--1:#8844AE"> = await </span><span style="--0:#D6DEEB;--1:#403F53">deliveryClient</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#82AAFF;--1:#3B61B0">items</span><span style="--0:#D6DEEB;--1:#403F53">()</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#82AAFF;--1:#3B61B0">type</span><span style="--0:#D6DEEB;--1:#403F53">(</span><span style="--0:#D9F5DD;--1:#111111">"</span><span style="--0:#ECC48D;--1:#984E4D">blogPost</span><span style="--0:#D9F5DD;--1:#111111">"</span><span style="--0:#D6DEEB;--1:#403F53">)</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#82AAFF;--1:#3B61B0">toPromise</span><span style="--0:#D6DEEB;--1:#403F53">()</span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="const blogPosts = await deliveryClient    .items()    .type(&#x22;blogPost&#x22;)    .toPromise()"><div></div></button></div></figure></div>
<p>The fetch call will return a <code dir="auto">response</code> object which contains a list of all blog posts in <code dir="auto">data.items</code>. In the HTML section of the Astro page, you can use the <code dir="auto">map()</code> function to list the blog posts:</p>
<div class="expressive-code"><figure class="frame has-title not-content"><figcaption class="header"><span class="title">src/pages/index.astro</span></figcaption><pre data-language="astro"><code><div class="ec-line"><div class="code"><span style="--0:#919F9F;--1:#5F636F">---</span></div></div><div class="ec-line"><div class="code"><span style="--0:#C792EA;--1:#8844AE">import</span><span style="--0:#D6DEEB;--1:#403F53"> { deliveryClient } </span><span style="--0:#C792EA;--1:#8844AE">from</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#ECC48D;--1:#984E4D">../lib/kontent</span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#D6DEEB;--1:#403F53">;</span></div></div><div class="ec-line"><div class="code"><span style="--0:#C792EA;--1:#8844AE">import</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#C792EA;--1:#8844AE">type</span><span style="--0:#D6DEEB;--1:#403F53"> { BlogPost } </span><span style="--0:#C792EA;--1:#8844AE">from</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#ECC48D;--1:#984E4D">../models</span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#D6DEEB;--1:#403F53">;</span></div></div><div class="ec-line"><div class="code"><span style="--0:#C792EA;--1:#8844AE">import</span><span style="--0:#D6DEEB;--1:#403F53"> { contentTypes } </span><span style="--0:#C792EA;--1:#8844AE">from</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#ECC48D;--1:#984E4D">../models/project/contentTypes</span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#D6DEEB;--1:#403F53">;</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#C792EA;--1:#8844AE">const </span><span style="--0:#82AAFF;--1:#3B61B0">blogPosts</span><span style="--0:#C792EA;--1:#8844AE"> = await </span><span style="--0:#D6DEEB;--1:#403F53">deliveryClient</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#7FDBCA;--1:#096E72">items</span><span style="--0:#C792EA;--1:#8844AE">&#x3C;</span><span style="--0:#D6DEEB;--1:#403F53">BlogPost</span><span style="--0:#C792EA;--1:#8844AE">></span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#82AAFF;--1:#3B61B0">type</span><span style="--0:#D6DEEB;--1:#403F53">(contentTypes</span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#FAF39F;--1:#111111">blogPost</span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#7FDBCA;--1:#096E72">codename</span><span style="--0:#D6DEEB;--1:#403F53">)</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#82AAFF;--1:#3B61B0">toPromise</span><span style="--0:#D6DEEB;--1:#403F53">()</span></div></div><div class="ec-line"><div class="code"><span style="--0:#919F9F;--1:#5F636F">---</span></div></div><div class="ec-line highlight ins"><div class="code"><span style="--1:#6a3588"><span style="--0:#7FDBCA">&#x3C;</span><span style="--0:#CAECE6">html</span><span style="--0:#7FDBCA"> </span></span><span style="--0:#C5E478;--1:#2d4a87">lang</span><span style="--0:#7FDBCA;--1:#6a3588">=</span><span style="--0:#D9F5DD;--1:#111111">"</span><span style="--0:#ECC48D;--1:#723b3a">en</span><span style="--0:#D9F5DD;--1:#111111">"</span><span style="--0:#7FDBCA;--1:#6a3588">></span></div></div><div class="ec-line highlight ins"><div class="code"><span class="indent">    </span><span style="--1:#6a3588"><span style="--0:#7FDBCA">&#x3C;</span><span style="--0:#CAECE6">head</span><span style="--0:#7FDBCA">></span></span></div></div><div class="ec-line highlight ins"><div class="code"><span class="indent">        </span><span style="--1:#6a3588"><span style="--0:#7FDBCA">&#x3C;</span><span style="--0:#CAECE6">meta</span><span style="--0:#7FDBCA"> </span></span><span style="--0:#C5E478;--1:#2d4a87">charset</span><span style="--0:#7FDBCA;--1:#6a3588">=</span><span style="--0:#D9F5DD;--1:#111111">"</span><span style="--0:#ECC48D;--1:#723b3a">utf-8</span><span style="--0:#D9F5DD;--1:#111111">"</span><span style="--0:#7FDBCA;--1:#6a3588"> /></span></div></div><div class="ec-line highlight ins"><div class="code"><span class="indent">        </span><span style="--1:#6a3588"><span style="--0:#7FDBCA">&#x3C;</span><span style="--0:#CAECE6">meta</span><span style="--0:#7FDBCA"> </span></span><span style="--0:#C5E478;--1:#2d4a87">name</span><span style="--0:#7FDBCA;--1:#6a3588">=</span><span style="--0:#D9F5DD;--1:#111111">"</span><span style="--0:#ECC48D;--1:#723b3a">viewport</span><span style="--0:#D9F5DD;--1:#111111">"</span><span style="--0:#7FDBCA;--1:#6a3588"> </span><span style="--0:#C5E478;--1:#2d4a87">content</span><span style="--0:#7FDBCA;--1:#6a3588">=</span><span style="--0:#D9F5DD;--1:#111111">"</span><span style="--0:#ECC48D;--1:#723b3a">width=device-width</span><span style="--0:#D9F5DD;--1:#111111">"</span><span style="--0:#7FDBCA;--1:#6a3588"> /></span></div></div><div class="ec-line highlight ins"><div class="code"><span class="indent">        </span><span style="--1:#6a3588"><span style="--0:#7FDBCA">&#x3C;</span><span style="--0:#CAECE6">title</span><span style="--0:#7FDBCA">></span></span><span style="--0:#D6DEEB;--1:#403F53">Astro</span><span style="--1:#6a3588"><span style="--0:#7FDBCA">&#x3C;/</span><span style="--0:#CAECE6">title</span><span style="--0:#7FDBCA">></span></span></div></div><div class="ec-line highlight ins"><div class="code"><span class="indent">    </span><span style="--1:#6a3588"><span style="--0:#7FDBCA">&#x3C;/</span><span style="--0:#CAECE6">head</span><span style="--0:#7FDBCA">></span></span></div></div><div class="ec-line highlight ins"><div class="code"><span class="indent">    </span><span style="--1:#6a3588"><span style="--0:#7FDBCA">&#x3C;</span><span style="--0:#CAECE6">body</span><span style="--0:#7FDBCA">></span></span></div></div><div class="ec-line highlight ins"><div class="code"><span class="indent">        </span><span style="--1:#6a3588"><span style="--0:#7FDBCA">&#x3C;</span><span style="--0:#CAECE6">h1</span><span style="--0:#7FDBCA">></span></span><span style="--0:#D6DEEB;--1:#403F53">Blog posts</span><span style="--1:#6a3588"><span style="--0:#7FDBCA">&#x3C;/</span><span style="--0:#CAECE6">h1</span><span style="--0:#7FDBCA">></span></span></div></div><div class="ec-line highlight ins"><div class="code"><span class="indent">        </span><span style="--1:#6a3588"><span style="--0:#7FDBCA">&#x3C;</span><span style="--0:#CAECE6">ul</span><span style="--0:#7FDBCA">></span></span></div></div><div class="ec-line highlight ins"><div class="code"><span class="indent">            </span><span style="--0:#eaa5a4;--1:#882b28">{</span><span style="--0:#D6DEEB;--1:#403F53">blogPosts</span><span style="--0:#d2a6ee;--1:#6a3588">.</span><span style="--0:#FAF39F;--1:#111111">data</span><span style="--0:#d2a6ee;--1:#6a3588">.</span><span style="--0:#FAF39F;--1:#111111">items</span><span style="--0:#d2a6ee;--1:#6a3588">.</span><span style="--0:#94b6ff;--1:#2d4a87">map</span><span style="--1:#403F53"><span style="--0:#D6DEEB">(</span><span style="--0:#D7DBE0">blogPost</span><span style="--0:#D6DEEB"> </span></span><span style="--0:#d2a6ee;--1:#6a3588">=></span><span style="--0:#D6DEEB;--1:#403F53"> (</span></div></div><div class="ec-line highlight ins"><div class="code"><span class="indent">                </span><span style="--1:#6a3588"><span style="--0:#7FDBCA">&#x3C;</span><span style="--0:#CAECE6">li</span><span style="--0:#7FDBCA">></span></span></div></div><div class="ec-line highlight ins"><div class="code"><span class="indent">                    </span><span style="--1:#6a3588"><span style="--0:#7FDBCA">&#x3C;</span><span style="--0:#CAECE6">a</span><span style="--0:#7FDBCA"> </span></span><span style="--0:#C5E478;--1:#2d4a87">href</span><span style="--0:#d2a6ee;--1:#6a3588">=</span><span style="--0:#eaa5a4;--1:#882b28">{</span><span style="--0:#D6DEEB;--1:#403F53">\`</span><span style="--0:#ECC48D;--1:#2d4a87">/blog/</span><span style="--0:#eaa5a4;--1:#882b28">\${</span><span style="--0:#D6DEEB;--1:#403F53">blogPost</span><span style="--0:#d2a6ee;--1:#6a3588">.</span><span style="--0:#FAF39F;--1:#111111">elements</span><span style="--0:#d2a6ee;--1:#6a3588">.</span><span style="--0:#FAF39F;--1:#111111">url_slug</span><span style="--0:#d2a6ee;--1:#6a3588">.</span><span style="--0:#7FDBCA;--1:#075457">value</span><span style="--0:#eaa5a4;--1:#882b28">}</span><span style="--0:#ECC48D;--1:#2d4a87">/</span><span style="--0:#D6DEEB;--1:#403F53">\`</span><span style="--0:#eaa5a4;--1:#882b28">}</span><span style="--0:#7FDBCA;--1:#6a3588"> </span><span style="--0:#C5E478;--1:#2d4a87">title</span><span style="--0:#d2a6ee;--1:#6a3588">=</span><span style="--0:#eaa5a4;--1:#882b28">{</span><span style="--0:#D6DEEB;--1:#403F53">blogPost</span><span style="--0:#d2a6ee;--1:#6a3588">.</span><span style="--0:#FAF39F;--1:#111111">elements</span><span style="--0:#d2a6ee;--1:#6a3588">.</span><span style="--0:#FAF39F;--1:#111111">title</span><span style="--0:#d2a6ee;--1:#6a3588">.</span><span style="--0:#7FDBCA;--1:#075457">value</span><span style="--0:#eaa5a4;--1:#882b28">}</span><span style="--0:#7FDBCA;--1:#6a3588">></span></div></div><div class="ec-line highlight ins"><div class="code"><span class="indent">                        </span><span style="--0:#eaa5a4;--1:#882b28">{</span><span style="--0:#D6DEEB;--1:#403F53">blogPost</span><span style="--0:#d2a6ee;--1:#6a3588">.</span><span style="--0:#FAF39F;--1:#111111">elements</span><span style="--0:#d2a6ee;--1:#6a3588">.</span><span style="--0:#FAF39F;--1:#111111">title</span><span style="--0:#d2a6ee;--1:#6a3588">.</span><span style="--0:#7FDBCA;--1:#075457">value</span><span style="--0:#eaa5a4;--1:#882b28">}</span></div></div><div class="ec-line highlight ins"><div class="code"><span class="indent">                    </span><span style="--1:#6a3588"><span style="--0:#7FDBCA">&#x3C;/</span><span style="--0:#CAECE6">a</span><span style="--0:#7FDBCA">></span></span></div></div><div class="ec-line highlight ins"><div class="code"><span class="indent">                </span><span style="--1:#6a3588"><span style="--0:#7FDBCA">&#x3C;/</span><span style="--0:#CAECE6">li</span><span style="--0:#7FDBCA">></span></span></div></div><div class="ec-line highlight ins"><div class="code"><span class="indent"><span style="--0:#D6DEEB;--1:#403F53">            </span></span><span style="--0:#D6DEEB;--1:#403F53">))</span><span style="--0:#eaa5a4;--1:#882b28">}</span></div></div><div class="ec-line highlight ins"><div class="code"><span class="indent">        </span><span style="--1:#6a3588"><span style="--0:#7FDBCA">&#x3C;/</span><span style="--0:#CAECE6">ul</span><span style="--0:#7FDBCA">></span></span></div></div><div class="ec-line highlight ins"><div class="code"><span class="indent">    </span><span style="--1:#6a3588"><span style="--0:#7FDBCA">&#x3C;/</span><span style="--0:#CAECE6">body</span><span style="--0:#7FDBCA">></span></span></div></div><div class="ec-line highlight ins"><div class="code"><span style="--1:#6a3588"><span style="--0:#7FDBCA">&#x3C;/</span><span style="--0:#CAECE6">html</span><span style="--0:#7FDBCA">></span></span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="---import { deliveryClient } from &#x27;../lib/kontent&#x27;;import type { BlogPost } from &#x27;../models&#x27;;import { contentTypes } from &#x27;../models/project/contentTypes&#x27;;const blogPosts = await deliveryClient    .items<BlogPost>    .type(contentTypes.blogPost.codename)    .toPromise()---<html lang=&#x22;en&#x22;>    <head>        <meta charset=&#x22;utf-8&#x22; />        <meta name=&#x22;viewport&#x22; content=&#x22;width=device-width&#x22; />        <title>Astro</title>    </head>    <body>        <h1>Blog posts</h1>        <ul>            {blogPosts.data.items.map(blogPost => (                <li>                    <a href={&#x60;/blog/\${blogPost.elements.url_slug.value}/&#x60;} title={blogPost.elements.title.value}>                        {blogPost.elements.title.value}                    </a>                </li>            ))}        </ul>    </body></html>"><div></div></button></div></figure></div>
<div class="sl-heading-wrapper level-h3"><h3 id="generating-individual-blog-posts">Generating individual blog posts</h3><a class="sl-anchor-link" href="#generating-individual-blog-posts"><span aria-hidden="true" class="sl-anchor-icon"><svg width="16" height="16" viewBox="0 0 24 24"><path fill="currentcolor" d="m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z"></path></svg></span><span class="sr-only">Section titled “Generating individual blog posts”</span></a></div>
<p>The last step of the tutorial is to generate detailed blog post pages.</p>
<div class="sl-heading-wrapper level-h4"><h4 id="static-site-generation">Static site generation</h4><a class="sl-anchor-link" href="#static-site-generation"><span aria-hidden="true" class="sl-anchor-icon"><svg width="16" height="16" viewBox="0 0 24 24"><path fill="currentcolor" d="m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z"></path></svg></span><span class="sr-only">Section titled “Static site generation”</span></a></div>
<p>In this section, you’ll use the <a href="/en/guides/routing/#static-ssg-mode">Static (SSG) Mode</a> with Astro.</p>
<p>First, create a file <code dir="auto">[slug].astro</code> in <code dir="auto">/src/pages/blog/</code> which needs to export a function <code dir="auto">getStaticPaths</code> that collects all data from the CMS:</p>
<div class="expressive-code"><figure class="frame has-title not-content"><figcaption class="header"><span class="title">src/pages/blog/[slug].astro</span></figcaption><pre data-language="astro"><code><div class="ec-line"><div class="code"><span style="--0:#919F9F;--1:#5F636F">---</span></div></div><div class="ec-line"><div class="code"><span style="--0:#C792EA;--1:#8844AE">import</span><span style="--0:#D6DEEB;--1:#403F53"> { deliveryClient } </span><span style="--0:#C792EA;--1:#8844AE">from</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#ECC48D;--1:#984E4D">../../lib/kontent</span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#D6DEEB;--1:#403F53">;</span></div></div><div class="ec-line"><div class="code"><span style="--0:#C792EA;--1:#8844AE">import</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#C792EA;--1:#8844AE">type</span><span style="--0:#D6DEEB;--1:#403F53"> { BlogPost } </span><span style="--0:#C792EA;--1:#8844AE">from</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#ECC48D;--1:#984E4D">../../models</span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#D6DEEB;--1:#403F53">;</span></div></div><div class="ec-line"><div class="code"><span style="--0:#C792EA;--1:#8844AE">import</span><span style="--0:#D6DEEB;--1:#403F53"> { contentTypes } </span><span style="--0:#C792EA;--1:#8844AE">from</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#ECC48D;--1:#984E4D">../../models/project/contentTypes</span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#D6DEEB;--1:#403F53">;</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#C792EA;--1:#8844AE">export</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#C792EA;--1:#8844AE">async</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#C792EA;--1:#8844AE">function</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#82AAFF;--1:#3B61B0">getStaticPaths</span><span style="--0:#D9F5DD;--1:#111111">()</span><span style="--0:#D6DEEB;--1:#403F53"> {</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#C792EA;--1:#8844AE">const </span><span style="--0:#82AAFF;--1:#3B61B0">blogPosts</span><span style="--0:#C792EA;--1:#8844AE"> = await </span><span style="--0:#D6DEEB;--1:#403F53">deliveryClient</span></div></div><div class="ec-line"><div class="code"><span class="indent">        </span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#82AAFF;--1:#3B61B0">items</span><span style="--0:#D6DEEB;--1:#403F53">&#x3C;</span><span style="--0:#FFCB8B;--1:#111111">BlogPost</span><span style="--0:#D6DEEB;--1:#403F53">>()</span></div></div><div class="ec-line"><div class="code"><span class="indent">        </span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#82AAFF;--1:#3B61B0">type</span><span style="--0:#D6DEEB;--1:#403F53">(contentTypes</span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#FAF39F;--1:#111111">blog_post</span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#7FDBCA;--1:#096E72">codename</span><span style="--0:#D6DEEB;--1:#403F53">)</span></div></div><div class="ec-line"><div class="code"><span class="indent">        </span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#82AAFF;--1:#3B61B0">toPromise</span><span style="--0:#D6DEEB;--1:#403F53">()</span></div></div><div class="ec-line"><div class="code"><span style="--0:#7FDBCA;--1:#096E72">--</span><span style="--0:#C792EA;--1:#8844AE">-</span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="---import { deliveryClient } from &#x27;../../lib/kontent&#x27;;import type { BlogPost } from &#x27;../../models&#x27;;import { contentTypes } from &#x27;../../models/project/contentTypes&#x27;;export async function getStaticPaths() {    const blogPosts = await deliveryClient        .items<BlogPost>()        .type(contentTypes.blog_post.codename)        .toPromise()---"><div></div></button></div></figure></div>
<p>So far, the function fetches all blog posts from Kontent.ai. The code snippet is exactly the same as what you used on the home page.</p>
<p>Next, the function must export paths and data for each blog post. You named the file <code dir="auto">[slug].astro</code>, so the param which represents the URL slug is called <code dir="auto">slug</code>:</p>
<div class="expressive-code"><figure class="frame has-title not-content"><figcaption class="header"><span class="title">src/pages/blog/[slug].astro</span></figcaption><pre data-language="astro"><code><div class="ec-line"><div class="code"><span style="--0:#919F9F;--1:#5F636F">---</span></div></div><div class="ec-line"><div class="code"><span style="--0:#C792EA;--1:#8844AE">import</span><span style="--0:#D6DEEB;--1:#403F53"> { deliveryClient } </span><span style="--0:#C792EA;--1:#8844AE">from</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#ECC48D;--1:#984E4D">../../lib/kontent</span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#D6DEEB;--1:#403F53">;</span></div></div><div class="ec-line"><div class="code"><span style="--0:#C792EA;--1:#8844AE">import</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#C792EA;--1:#8844AE">type</span><span style="--0:#D6DEEB;--1:#403F53"> { BlogPost } </span><span style="--0:#C792EA;--1:#8844AE">from</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#ECC48D;--1:#984E4D">../../models</span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#D6DEEB;--1:#403F53">;</span></div></div><div class="ec-line"><div class="code"><span style="--0:#C792EA;--1:#8844AE">import</span><span style="--0:#D6DEEB;--1:#403F53"> { contentTypes } </span><span style="--0:#C792EA;--1:#8844AE">from</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#ECC48D;--1:#984E4D">../../models/project/contentTypes</span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#D6DEEB;--1:#403F53">;</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#C792EA;--1:#8844AE">export</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#C792EA;--1:#8844AE">async</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#C792EA;--1:#8844AE">function</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#82AAFF;--1:#3B61B0">getStaticPaths</span><span style="--0:#D9F5DD;--1:#111111">()</span><span style="--0:#D6DEEB;--1:#403F53"> {</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#C792EA;--1:#8844AE">const </span><span style="--0:#82AAFF;--1:#3B61B0">blogPosts</span><span style="--0:#C792EA;--1:#8844AE"> = await </span><span style="--0:#D6DEEB;--1:#403F53">deliveryClient</span></div></div><div class="ec-line"><div class="code"><span class="indent">        </span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#82AAFF;--1:#3B61B0">items</span><span style="--0:#D6DEEB;--1:#403F53">&#x3C;</span><span style="--0:#FFCB8B;--1:#111111">BlogPost</span><span style="--0:#D6DEEB;--1:#403F53">>()</span></div></div><div class="ec-line"><div class="code"><span class="indent">        </span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#82AAFF;--1:#3B61B0">type</span><span style="--0:#D6DEEB;--1:#403F53">(contentTypes</span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#FAF39F;--1:#111111">blog_post</span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#7FDBCA;--1:#096E72">codename</span><span style="--0:#D6DEEB;--1:#403F53">)</span></div></div><div class="ec-line"><div class="code"><span class="indent">        </span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#82AAFF;--1:#3B61B0">toPromise</span><span style="--0:#D6DEEB;--1:#403F53">()</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line highlight ins"><div class="code"><span class="indent">    </span><span style="--0:#d2a6ee;--1:#6a3588">return</span><span style="--0:#D6DEEB;--1:#403F53"> blogPosts</span><span style="--0:#d2a6ee;--1:#6a3588">.</span><span style="--0:#FAF39F;--1:#111111">data</span><span style="--0:#d2a6ee;--1:#6a3588">.</span><span style="--0:#FAF39F;--1:#111111">items</span><span style="--0:#d2a6ee;--1:#6a3588">.</span><span style="--0:#94b6ff;--1:#2d4a87">map</span><span style="--1:#403F53"><span style="--0:#D6DEEB">(</span><span style="--0:#D7DBE0">blogPost</span><span style="--0:#D6DEEB"> </span></span><span style="--0:#d2a6ee;--1:#6a3588">=></span><span style="--0:#D6DEEB;--1:#403F53"> ({</span></div></div><div class="ec-line highlight ins"><div class="code"><span class="indent"><span style="--0:#D6DEEB;--1:#403F53">        </span></span><span style="--0:#D6DEEB;--1:#403F53">params: { slug: blogPost</span><span style="--0:#d2a6ee;--1:#6a3588">.</span><span style="--0:#FAF39F;--1:#111111">elements</span><span style="--0:#d2a6ee;--1:#6a3588">.</span><span style="--0:#FAF39F;--1:#111111">url_slug</span><span style="--0:#d2a6ee;--1:#6a3588">.</span><span style="--0:#7FDBCA;--1:#075457">value</span><span style="--0:#D6DEEB;--1:#403F53"> }</span><span style="--0:#a8b9c6;--1:#3b4e5e">,</span></div></div><div class="ec-line highlight ins"><div class="code"><span class="indent"><span style="--0:#D6DEEB;--1:#403F53">        </span></span><span style="--0:#D6DEEB;--1:#403F53">props: { blogPost }</span></div></div><div class="ec-line highlight ins"><div class="code"><span class="indent"><span style="--0:#D6DEEB;--1:#403F53">    </span></span><span style="--0:#D6DEEB;--1:#403F53">}))</span></div></div><div class="ec-line"><div class="code"><span style="--0:#D6DEEB;--1:#403F53">}</span></div></div><div class="ec-line"><div class="code"><span style="--0:#919F9F;--1:#5F636F">---</span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="---import { deliveryClient } from &#x27;../../lib/kontent&#x27;;import type { BlogPost } from &#x27;../../models&#x27;;import { contentTypes } from &#x27;../../models/project/contentTypes&#x27;;export async function getStaticPaths() {    const blogPosts = await deliveryClient        .items<BlogPost>()        .type(contentTypes.blog_post.codename)        .toPromise()    return blogPosts.data.items.map(blogPost => ({        params: { slug: blogPost.elements.url_slug.value },        props: { blogPost }    }))}---"><div></div></button></div></figure></div>
<p>The last part is to provide the HTML template and display each blog post:</p>
<div class="expressive-code"><figure class="frame has-title not-content"><figcaption class="header"><span class="title">src/pages/blog/[slug].astro</span></figcaption><pre data-language="astro"><code><div class="ec-line"><div class="code"><span style="--0:#919F9F;--1:#5F636F">---</span></div></div><div class="ec-line"><div class="code"><span style="--0:#C792EA;--1:#8844AE">import</span><span style="--0:#D6DEEB;--1:#403F53"> { deliveryClient } </span><span style="--0:#C792EA;--1:#8844AE">from</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#ECC48D;--1:#984E4D">../../lib/kontent</span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#D6DEEB;--1:#403F53">;</span></div></div><div class="ec-line"><div class="code"><span style="--0:#C792EA;--1:#8844AE">import</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#C792EA;--1:#8844AE">type</span><span style="--0:#D6DEEB;--1:#403F53"> { BlogPost } </span><span style="--0:#C792EA;--1:#8844AE">from</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#ECC48D;--1:#984E4D">../../models</span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#D6DEEB;--1:#403F53">;</span></div></div><div class="ec-line"><div class="code"><span style="--0:#C792EA;--1:#8844AE">import</span><span style="--0:#D6DEEB;--1:#403F53"> { contentTypes } </span><span style="--0:#C792EA;--1:#8844AE">from</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#ECC48D;--1:#984E4D">../../models/project/contentTypes</span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#D6DEEB;--1:#403F53">;</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#C792EA;--1:#8844AE">export</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#C792EA;--1:#8844AE">async</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#C792EA;--1:#8844AE">function</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#82AAFF;--1:#3B61B0">getStaticPaths</span><span style="--0:#D9F5DD;--1:#111111">()</span><span style="--0:#D6DEEB;--1:#403F53"> {</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#C792EA;--1:#8844AE">const </span><span style="--0:#82AAFF;--1:#3B61B0">blogPosts</span><span style="--0:#C792EA;--1:#8844AE"> = await </span><span style="--0:#D6DEEB;--1:#403F53">deliveryClient</span></div></div><div class="ec-line"><div class="code"><span class="indent">        </span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#82AAFF;--1:#3B61B0">items</span><span style="--0:#D6DEEB;--1:#403F53">&#x3C;</span><span style="--0:#FFCB8B;--1:#111111">BlogPost</span><span style="--0:#D6DEEB;--1:#403F53">>()</span></div></div><div class="ec-line"><div class="code"><span class="indent">        </span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#82AAFF;--1:#3B61B0">type</span><span style="--0:#D6DEEB;--1:#403F53">(contentTypes</span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#FAF39F;--1:#111111">blog_post</span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#7FDBCA;--1:#096E72">codename</span><span style="--0:#D6DEEB;--1:#403F53">)</span></div></div><div class="ec-line"><div class="code"><span class="indent">        </span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#82AAFF;--1:#3B61B0">toPromise</span><span style="--0:#D6DEEB;--1:#403F53">()</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#C792EA;--1:#8844AE">return</span><span style="--0:#D6DEEB;--1:#403F53"> blogPosts</span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#FAF39F;--1:#111111">data</span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#FAF39F;--1:#111111">items</span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#82AAFF;--1:#3B61B0">map</span><span style="--1:#403F53"><span style="--0:#D6DEEB">(</span><span style="--0:#D7DBE0">blogPost</span><span style="--0:#D6DEEB"> </span></span><span style="--0:#C792EA;--1:#8844AE">=></span><span style="--0:#D6DEEB;--1:#403F53"> ({</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#D6DEEB;--1:#403F53">        </span></span><span style="--0:#D6DEEB;--1:#403F53">params: { slug: blogPost</span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#FAF39F;--1:#111111">elements</span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#FAF39F;--1:#111111">url_slug</span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#7FDBCA;--1:#096E72">value</span><span style="--0:#D6DEEB;--1:#403F53"> }</span><span style="--0:#889FB2;--1:#4D667B">,</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#D6DEEB;--1:#403F53">        </span></span><span style="--0:#D6DEEB;--1:#403F53">props: { blogPost }</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#D6DEEB;--1:#403F53">    </span></span><span style="--0:#D6DEEB;--1:#403F53">}))</span></div></div><div class="ec-line"><div class="code"><span style="--0:#D6DEEB;--1:#403F53">}</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line highlight ins"><div class="code"><span style="--0:#d2a6ee;--1:#6a3588">const </span><span style="--0:#94b6ff;--1:#2d4a87">blogPost</span><span style="--0:#7FDBCA;--1:#075457">:</span><span style="--0:#d2a6ee;--1:#6a3588"> </span><span style="--0:#FFCB8B;--1:#111111">BlogPost</span><span style="--0:#d2a6ee;--1:#6a3588"> = </span><span style="--0:#D6DEEB;--1:#403F53">Astro</span><span style="--0:#d2a6ee;--1:#6a3588">.</span><span style="--0:#FAF39F;--1:#111111">props</span><span style="--0:#d2a6ee;--1:#6a3588">.</span><span style="--0:#7FDBCA;--1:#075457">blogPost</span></div></div><div class="ec-line highlight ins"><div class="code"><span style="--0:#aeb8b8;--1:#494c55">---</span></div></div><div class="ec-line highlight ins"><div class="code"><span style="--1:#6a3588"><span style="--0:#7FDBCA">&#x3C;</span><span style="--0:#CAECE6">html</span><span style="--0:#7FDBCA"> </span></span><span style="--0:#C5E478;--1:#2d4a87">lang</span><span style="--0:#7FDBCA;--1:#6a3588">=</span><span style="--0:#D9F5DD;--1:#111111">"</span><span style="--0:#ECC48D;--1:#723b3a">en</span><span style="--0:#D9F5DD;--1:#111111">"</span><span style="--0:#7FDBCA;--1:#6a3588">></span></div></div><div class="ec-line highlight ins"><div class="code"><span class="indent">    </span><span style="--1:#6a3588"><span style="--0:#7FDBCA">&#x3C;</span><span style="--0:#CAECE6">head</span><span style="--0:#7FDBCA">></span></span></div></div><div class="ec-line highlight ins"><div class="code"><span class="indent">        </span><span style="--1:#6a3588"><span style="--0:#7FDBCA">&#x3C;</span><span style="--0:#CAECE6">meta</span><span style="--0:#7FDBCA"> </span></span><span style="--0:#C5E478;--1:#2d4a87">charset</span><span style="--0:#7FDBCA;--1:#6a3588">=</span><span style="--0:#D9F5DD;--1:#111111">"</span><span style="--0:#ECC48D;--1:#723b3a">utf-8</span><span style="--0:#D9F5DD;--1:#111111">"</span><span style="--0:#7FDBCA;--1:#6a3588"> /></span></div></div><div class="ec-line highlight ins"><div class="code"><span class="indent">        </span><span style="--1:#6a3588"><span style="--0:#7FDBCA">&#x3C;</span><span style="--0:#CAECE6">meta</span><span style="--0:#7FDBCA"> </span></span><span style="--0:#C5E478;--1:#2d4a87">name</span><span style="--0:#7FDBCA;--1:#6a3588">=</span><span style="--0:#D9F5DD;--1:#111111">"</span><span style="--0:#ECC48D;--1:#723b3a">viewport</span><span style="--0:#D9F5DD;--1:#111111">"</span><span style="--0:#7FDBCA;--1:#6a3588"> </span><span style="--0:#C5E478;--1:#2d4a87">content</span><span style="--0:#7FDBCA;--1:#6a3588">=</span><span style="--0:#D9F5DD;--1:#111111">"</span><span style="--0:#ECC48D;--1:#723b3a">width=device-width</span><span style="--0:#D9F5DD;--1:#111111">"</span><span style="--0:#7FDBCA;--1:#6a3588"> /></span></div></div><div class="ec-line highlight ins"><div class="code"><span class="indent">        </span><span style="--1:#6a3588"><span style="--0:#7FDBCA">&#x3C;</span><span style="--0:#CAECE6">title</span><span style="--0:#7FDBCA">></span></span><span style="--0:#eaa5a4;--1:#882b28">{</span><span style="--0:#D6DEEB;--1:#403F53">blogPost</span><span style="--0:#d2a6ee;--1:#6a3588">.</span><span style="--0:#FAF39F;--1:#111111">elements</span><span style="--0:#d2a6ee;--1:#6a3588">.</span><span style="--0:#FAF39F;--1:#111111">title</span><span style="--0:#d2a6ee;--1:#6a3588">.</span><span style="--0:#7FDBCA;--1:#075457">value</span><span style="--0:#eaa5a4;--1:#882b28">}</span><span style="--1:#6a3588"><span style="--0:#7FDBCA">&#x3C;/</span><span style="--0:#CAECE6">title</span><span style="--0:#7FDBCA">></span></span></div></div><div class="ec-line highlight ins"><div class="code"><span class="indent">    </span><span style="--1:#6a3588"><span style="--0:#7FDBCA">&#x3C;/</span><span style="--0:#CAECE6">head</span><span style="--0:#7FDBCA">></span></span></div></div><div class="ec-line highlight ins"><div class="code"><span class="indent">    </span><span style="--1:#6a3588"><span style="--0:#7FDBCA">&#x3C;</span><span style="--0:#CAECE6">body</span><span style="--0:#7FDBCA">></span></span></div></div><div class="ec-line highlight ins"><div class="code"><span class="indent">        </span><span style="--1:#6a3588"><span style="--0:#7FDBCA">&#x3C;</span><span style="--0:#CAECE6">article</span><span style="--0:#7FDBCA">></span></span></div></div><div class="ec-line highlight ins"><div class="code"><span class="indent">            </span><span style="--1:#6a3588"><span style="--0:#7FDBCA">&#x3C;</span><span style="--0:#CAECE6">h1</span><span style="--0:#7FDBCA">></span></span><span style="--0:#eaa5a4;--1:#882b28">{</span><span style="--0:#D6DEEB;--1:#403F53">blogPost</span><span style="--0:#d2a6ee;--1:#6a3588">.</span><span style="--0:#FAF39F;--1:#111111">elements</span><span style="--0:#d2a6ee;--1:#6a3588">.</span><span style="--0:#FAF39F;--1:#111111">title</span><span style="--0:#d2a6ee;--1:#6a3588">.</span><span style="--0:#7FDBCA;--1:#075457">value</span><span style="--0:#eaa5a4;--1:#882b28">}</span><span style="--1:#6a3588"><span style="--0:#7FDBCA">&#x3C;/</span><span style="--0:#CAECE6">h1</span><span style="--0:#7FDBCA">></span></span></div></div><div class="ec-line highlight ins"><div class="code"><span class="indent">            </span><span style="--0:#7FDBCA;--1:#6a3588">&#x3C;</span><span style="--0:#C5E478;--1:#2d4a87">Fragment</span><span style="--0:#7FDBCA;--1:#6a3588"> </span><span style="--0:#C5E478;--1:#2d4a87">set:html</span><span style="--0:#7FDBCA;--1:#6a3588">=</span><span style="--0:#eaa5a4;--1:#882b28">{</span><span style="--0:#D6DEEB;--1:#403F53">blogPost</span><span style="--0:#d2a6ee;--1:#6a3588">.</span><span style="--0:#FAF39F;--1:#111111">elements</span><span style="--0:#d2a6ee;--1:#6a3588">.</span><span style="--0:#FAF39F;--1:#111111">teaser</span><span style="--0:#d2a6ee;--1:#6a3588">.</span><span style="--0:#7FDBCA;--1:#075457">value</span><span style="--0:#eaa5a4;--1:#882b28">}</span><span style="--0:#7FDBCA;--1:#6a3588"> /></span></div></div><div class="ec-line highlight ins"><div class="code"><span class="indent">            </span><span style="--0:#7FDBCA;--1:#6a3588">&#x3C;</span><span style="--0:#C5E478;--1:#2d4a87">Fragment</span><span style="--0:#7FDBCA;--1:#6a3588"> </span><span style="--0:#C5E478;--1:#2d4a87">set:html</span><span style="--0:#7FDBCA;--1:#6a3588">=</span><span style="--0:#eaa5a4;--1:#882b28">{</span><span style="--0:#D6DEEB;--1:#403F53">blogPost</span><span style="--0:#d2a6ee;--1:#6a3588">.</span><span style="--0:#FAF39F;--1:#111111">elements</span><span style="--0:#d2a6ee;--1:#6a3588">.</span><span style="--0:#FAF39F;--1:#111111">content</span><span style="--0:#d2a6ee;--1:#6a3588">.</span><span style="--0:#7FDBCA;--1:#075457">value</span><span style="--0:#eaa5a4;--1:#882b28">}</span><span style="--0:#7FDBCA;--1:#6a3588"> /></span></div></div><div class="ec-line highlight ins"><div class="code"><span class="indent">            </span><span style="--1:#6a3588"><span style="--0:#7FDBCA">&#x3C;</span><span style="--0:#CAECE6">time</span><span style="--0:#7FDBCA">></span></span><span style="--0:#eaa5a4;--1:#882b28">{</span><span style="--0:#7FDBCA;--1:#075457">new</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#94b6ff;--1:#2d4a87">Date</span><span style="--0:#D6DEEB;--1:#403F53">(blogPost</span><span style="--0:#d2a6ee;--1:#6a3588">.</span><span style="--0:#FAF39F;--1:#111111">elements</span><span style="--0:#d2a6ee;--1:#6a3588">.</span><span style="--0:#FAF39F;--1:#111111">date</span><span style="--0:#d2a6ee;--1:#6a3588">.</span><span style="--0:#7FDBCA;--1:#075457">value</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#d2a6ee;--1:#6a3588">??</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#D9F5DD;--1:#111111">""</span><span style="--0:#D6DEEB;--1:#403F53">)</span><span style="--0:#eaa5a4;--1:#882b28">}</span><span style="--1:#6a3588"><span style="--0:#7FDBCA">&#x3C;/</span><span style="--0:#CAECE6">time</span><span style="--0:#7FDBCA">></span></span></div></div><div class="ec-line highlight ins"><div class="code"><span class="indent">    </span><span style="--1:#6a3588"><span style="--0:#7FDBCA">&#x3C;/</span><span style="--0:#CAECE6">body</span><span style="--0:#7FDBCA">></span></span></div></div><div class="ec-line highlight ins"><div class="code"><span style="--1:#6a3588"><span style="--0:#7FDBCA">&#x3C;/</span><span style="--0:#CAECE6">html</span><span style="--0:#7FDBCA">></span></span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="---import { deliveryClient } from &#x27;../../lib/kontent&#x27;;import type { BlogPost } from &#x27;../../models&#x27;;import { contentTypes } from &#x27;../../models/project/contentTypes&#x27;;export async function getStaticPaths() {    const blogPosts = await deliveryClient        .items<BlogPost>()        .type(contentTypes.blog_post.codename)        .toPromise()    return blogPosts.data.items.map(blogPost => ({        params: { slug: blogPost.elements.url_slug.value },        props: { blogPost }    }))}const blogPost: BlogPost = Astro.props.blogPost---<html lang=&#x22;en&#x22;>    <head>        <meta charset=&#x22;utf-8&#x22; />        <meta name=&#x22;viewport&#x22; content=&#x22;width=device-width&#x22; />        <title>{blogPost.elements.title.value}</title>    </head>    <body>        <article>            <h1>{blogPost.elements.title.value}</h1>            <Fragment set:html={blogPost.elements.teaser.value} />            <Fragment set:html={blogPost.elements.content.value} />            <time>{new Date(blogPost.elements.date.value ?? &#x22;&#x22;)}</time>    </body></html>"><div></div></button></div></figure></div>
<p>Navigate to your Astro preview (<a href="http://localhost:4321/blog/astro-is-amazing/">http://localhost:4321/blog/astro-is-amazing/</a> by default) to see the rendered blog post.</p>
<div class="sl-heading-wrapper level-h4"><h4 id="on-demand-rendering">On-demand rendering</h4><a class="sl-anchor-link" href="#on-demand-rendering"><span aria-hidden="true" class="sl-anchor-icon"><svg width="16" height="16" viewBox="0 0 24 24"><path fill="currentcolor" d="m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z"></path></svg></span><span class="sr-only">Section titled “On-demand rendering”</span></a></div>
<p>If your routes are <a href="/en/guides/on-demand-rendering/">rendered on demand</a>, you will use dynamic routes to fetch the page data from Kontent.ai.</p>
<p>Create a new file <code dir="auto">[slug].astro</code> in <code dir="auto">/src/pages/blog/</code> and add the following code. The data fetching is very similar to previous use cases but adds an <code dir="auto">equalsFilter</code> that lets us find the right blog post based on the used URL:</p>
<div class="expressive-code"><figure class="frame has-title not-content"><figcaption class="header"><span class="title">src/pages/blog/[slug].astro</span></figcaption><pre data-language="astro"><code><div class="ec-line"><div class="code"><span style="--0:#919F9F;--1:#5F636F">---</span></div></div><div class="ec-line"><div class="code"><span style="--0:#C792EA;--1:#8844AE">import</span><span style="--0:#D6DEEB;--1:#403F53"> { deliveryClient } </span><span style="--0:#C792EA;--1:#8844AE">from</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#ECC48D;--1:#984E4D">../../lib/kontent</span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#D6DEEB;--1:#403F53">;</span></div></div><div class="ec-line"><div class="code"><span style="--0:#C792EA;--1:#8844AE">import</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#C792EA;--1:#8844AE">type</span><span style="--0:#D6DEEB;--1:#403F53"> { BlogPost } </span><span style="--0:#C792EA;--1:#8844AE">from</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#ECC48D;--1:#984E4D">../../models</span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#D6DEEB;--1:#403F53">;</span></div></div><div class="ec-line"><div class="code"><span style="--0:#C792EA;--1:#8844AE">import</span><span style="--0:#D6DEEB;--1:#403F53"> { contentTypes } </span><span style="--0:#C792EA;--1:#8844AE">from</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#ECC48D;--1:#984E4D">../../models/project/contentTypes</span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#D6DEEB;--1:#403F53">;</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#C792EA;--1:#8844AE">const { </span><span style="--0:#82AAFF;--1:#3B61B0">slug</span><span style="--0:#C792EA;--1:#8844AE"> } = </span><span style="--0:#D6DEEB;--1:#403F53">Astro</span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#7FDBCA;--1:#096E72">params</span></div></div><div class="ec-line"><div class="code"><span style="--0:#C792EA;--1:#8844AE">let </span><span style="--0:#D6DEEB;--1:#403F53">blogPost</span><span style="--0:#7FDBCA;--1:#096E72">:</span><span style="--0:#C792EA;--1:#8844AE"> </span><span style="--0:#FFCB8B;--1:#111111">BlogPost</span><span style="--0:#D6DEEB;--1:#403F53">;</span></div></div><div class="ec-line"><div class="code"><span style="--0:#C792EA;--1:#8844AE">try</span><span style="--0:#D6DEEB;--1:#403F53"> {</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#C792EA;--1:#8844AE">const </span><span style="--0:#82AAFF;--1:#3B61B0">data</span><span style="--0:#C792EA;--1:#8844AE"> = await </span><span style="--0:#D6DEEB;--1:#403F53">deliveryClient</span></div></div><div class="ec-line"><div class="code"><span class="indent">        </span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#82AAFF;--1:#3B61B0">items</span><span style="--0:#D6DEEB;--1:#403F53">&#x3C;</span><span style="--0:#FFCB8B;--1:#111111">BlogPost</span><span style="--0:#D6DEEB;--1:#403F53">>()</span></div></div><div class="ec-line"><div class="code"><span class="indent">        </span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#82AAFF;--1:#3B61B0">equalsFilter</span><span style="--0:#D6DEEB;--1:#403F53">(contentTypes</span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#FAF39F;--1:#111111">blog_post</span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#FAF39F;--1:#111111">elements</span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#FAF39F;--1:#111111">url_slug</span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#7FDBCA;--1:#096E72">codename</span><span style="--0:#D6DEEB;--1:#403F53">, slug </span><span style="--0:#C792EA;--1:#8844AE">??</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#D9F5DD;--1:#111111">''</span><span style="--0:#D6DEEB;--1:#403F53">)</span></div></div><div class="ec-line"><div class="code"><span class="indent">        </span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#82AAFF;--1:#3B61B0">type</span><span style="--0:#D6DEEB;--1:#403F53">(contentTypes</span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#FAF39F;--1:#111111">blog_post</span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#7FDBCA;--1:#096E72">codename</span><span style="--0:#D6DEEB;--1:#403F53">)</span></div></div><div class="ec-line"><div class="code"><span class="indent">        </span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#82AAFF;--1:#3B61B0">limitParameter</span><span style="--0:#D6DEEB;--1:#403F53">(</span><span style="--0:#F78C6C;--1:#AA0982">1</span><span style="--0:#D6DEEB;--1:#403F53">)</span></div></div><div class="ec-line"><div class="code"><span class="indent">        </span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#82AAFF;--1:#3B61B0">toPromise</span><span style="--0:#D6DEEB;--1:#403F53">()</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#D6DEEB;--1:#403F53">    </span></span><span style="--0:#D6DEEB;--1:#403F53">blogPost </span><span style="--0:#C792EA;--1:#8844AE">=</span><span style="--0:#D6DEEB;--1:#403F53"> data</span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#FAF39F;--1:#111111">data</span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#7FDBCA;--1:#096E72">items</span><span style="--0:#D6DEEB;--1:#403F53">[</span><span style="--0:#F78C6C;--1:#AA0982">0</span><span style="--0:#D6DEEB;--1:#403F53">]</span></div></div><div class="ec-line"><div class="code"><span style="--0:#D6DEEB;--1:#403F53">} </span><span style="--0:#C792EA;--1:#8844AE">catch</span><span style="--0:#D6DEEB;--1:#403F53"> (error) {</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#C792EA;--1:#8844AE">return</span><span style="--0:#D6DEEB;--1:#403F53"> Astro</span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#82AAFF;--1:#3B61B0">redirect</span><span style="--0:#D6DEEB;--1:#403F53">(</span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#ECC48D;--1:#984E4D">/404</span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#D6DEEB;--1:#403F53">)</span></div></div><div class="ec-line"><div class="code"><span style="--0:#D6DEEB;--1:#403F53">}</span></div></div><div class="ec-line"><div class="code"><span style="--0:#919F9F;--1:#5F636F">---</span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="---import { deliveryClient } from &#x27;../../lib/kontent&#x27;;import type { BlogPost } from &#x27;../../models&#x27;;import { contentTypes } from &#x27;../../models/project/contentTypes&#x27;;const { slug } = Astro.paramslet blogPost: BlogPost;try {    const data = await deliveryClient        .items<BlogPost>()        .equalsFilter(contentTypes.blog_post.elements.url_slug.codename, slug ?? &#x27;&#x27;)        .type(contentTypes.blog_post.codename)        .limitParameter(1)        .toPromise()    blogPost = data.data.items[0]} catch (error) {    return Astro.redirect(&#x27;/404&#x27;)}---"><div></div></button></div></figure></div>
<p>If you’re not using generated types, you can instead use string literals to define the content item type and the filtered element codename:</p>
<div class="expressive-code"><figure class="frame not-content"><figcaption class="header"></figcaption><pre data-language="ts"><code><div class="ec-line"><div class="code"><span style="--0:#C792EA;--1:#8844AE">const </span><span style="--0:#82AAFF;--1:#3B61B0">data</span><span style="--0:#C792EA;--1:#8844AE"> = await </span><span style="--0:#D6DEEB;--1:#403F53">deliveryClient</span></div></div><div class="ec-line"><div class="code"><span class="indent">        </span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#82AAFF;--1:#3B61B0">items</span><span style="--0:#D6DEEB;--1:#403F53">()</span></div></div><div class="ec-line"><div class="code"><span class="indent">        </span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#82AAFF;--1:#3B61B0">equalsFilter</span><span style="--0:#D6DEEB;--1:#403F53">(</span><span style="--0:#D9F5DD;--1:#111111">"</span><span style="--0:#ECC48D;--1:#984E4D">url_slug</span><span style="--0:#D9F5DD;--1:#111111">"</span><span style="--0:#D6DEEB;--1:#403F53">, slug </span><span style="--0:#C792EA;--1:#8844AE">??</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#D9F5DD;--1:#111111">''</span><span style="--0:#D6DEEB;--1:#403F53">)</span></div></div><div class="ec-line"><div class="code"><span class="indent">        </span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#82AAFF;--1:#3B61B0">type</span><span style="--0:#D6DEEB;--1:#403F53">(</span><span style="--0:#D9F5DD;--1:#111111">"</span><span style="--0:#ECC48D;--1:#984E4D">blog_post</span><span style="--0:#D9F5DD;--1:#111111">"</span><span style="--0:#D6DEEB;--1:#403F53">)</span></div></div><div class="ec-line"><div class="code"><span class="indent">        </span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#82AAFF;--1:#3B61B0">limitParameter</span><span style="--0:#D6DEEB;--1:#403F53">(</span><span style="--0:#F78C6C;--1:#AA0982">1</span><span style="--0:#D6DEEB;--1:#403F53">)</span></div></div><div class="ec-line"><div class="code"><span class="indent">        </span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#82AAFF;--1:#3B61B0">toPromise</span><span style="--0:#D6DEEB;--1:#403F53">()</span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="const data = await deliveryClient        .items()        .equalsFilter(&#x22;url_slug&#x22;, slug ?? &#x27;&#x27;)        .type(&#x22;blog_post&#x22;)        .limitParameter(1)        .toPromise()"><div></div></button></div></figure></div>
<p>Lastly, add the HTML code to render the blog post. This part is the same as with static generation:</p>
<div class="expressive-code"><figure class="frame has-title not-content"><figcaption class="header"><span class="title">src/pages/blog/[slug].astro</span></figcaption><pre data-language="astro"><code><div class="ec-line"><div class="code"><span style="--0:#919F9F;--1:#5F636F">---</span></div></div><div class="ec-line"><div class="code"><span style="--0:#C792EA;--1:#8844AE">import</span><span style="--0:#D6DEEB;--1:#403F53"> { deliveryClient } </span><span style="--0:#C792EA;--1:#8844AE">from</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#ECC48D;--1:#984E4D">../../lib/kontent</span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#D6DEEB;--1:#403F53">;</span></div></div><div class="ec-line"><div class="code"><span style="--0:#C792EA;--1:#8844AE">import</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#C792EA;--1:#8844AE">type</span><span style="--0:#D6DEEB;--1:#403F53"> { BlogPost } </span><span style="--0:#C792EA;--1:#8844AE">from</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#ECC48D;--1:#984E4D">../../models</span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#D6DEEB;--1:#403F53">;</span></div></div><div class="ec-line"><div class="code"><span style="--0:#C792EA;--1:#8844AE">import</span><span style="--0:#D6DEEB;--1:#403F53"> { contentTypes } </span><span style="--0:#C792EA;--1:#8844AE">from</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#ECC48D;--1:#984E4D">../../models/project/contentTypes</span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#D6DEEB;--1:#403F53">;</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#C792EA;--1:#8844AE">const { </span><span style="--0:#82AAFF;--1:#3B61B0">slug</span><span style="--0:#C792EA;--1:#8844AE"> } = </span><span style="--0:#D6DEEB;--1:#403F53">Astro</span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#7FDBCA;--1:#096E72">params</span></div></div><div class="ec-line"><div class="code"><span style="--0:#C792EA;--1:#8844AE">let </span><span style="--0:#D6DEEB;--1:#403F53">blogPost</span><span style="--0:#7FDBCA;--1:#096E72">:</span><span style="--0:#C792EA;--1:#8844AE"> </span><span style="--0:#FFCB8B;--1:#111111">BlogPost</span><span style="--0:#D6DEEB;--1:#403F53">;</span></div></div><div class="ec-line"><div class="code"><span style="--0:#C792EA;--1:#8844AE">try</span><span style="--0:#D6DEEB;--1:#403F53"> {</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#C792EA;--1:#8844AE">const </span><span style="--0:#82AAFF;--1:#3B61B0">data</span><span style="--0:#C792EA;--1:#8844AE"> = await </span><span style="--0:#D6DEEB;--1:#403F53">deliveryClient</span></div></div><div class="ec-line"><div class="code"><span class="indent">        </span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#82AAFF;--1:#3B61B0">items</span><span style="--0:#D6DEEB;--1:#403F53">&#x3C;</span><span style="--0:#FFCB8B;--1:#111111">BlogPost</span><span style="--0:#D6DEEB;--1:#403F53">>()</span></div></div><div class="ec-line"><div class="code"><span class="indent">        </span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#82AAFF;--1:#3B61B0">equalsFilter</span><span style="--0:#D6DEEB;--1:#403F53">(contentTypes</span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#FAF39F;--1:#111111">blog_post</span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#FAF39F;--1:#111111">elements</span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#FAF39F;--1:#111111">url_slug</span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#7FDBCA;--1:#096E72">codename</span><span style="--0:#D6DEEB;--1:#403F53">, slug </span><span style="--0:#C792EA;--1:#8844AE">??</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#D9F5DD;--1:#111111">''</span><span style="--0:#D6DEEB;--1:#403F53">)</span></div></div><div class="ec-line"><div class="code"><span class="indent">        </span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#82AAFF;--1:#3B61B0">type</span><span style="--0:#D6DEEB;--1:#403F53">(contentTypes</span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#FAF39F;--1:#111111">blog_post</span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#7FDBCA;--1:#096E72">codename</span><span style="--0:#D6DEEB;--1:#403F53">)</span></div></div><div class="ec-line"><div class="code"><span class="indent">        </span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#82AAFF;--1:#3B61B0">limitParameter</span><span style="--0:#D6DEEB;--1:#403F53">(</span><span style="--0:#F78C6C;--1:#AA0982">1</span><span style="--0:#D6DEEB;--1:#403F53">)</span></div></div><div class="ec-line"><div class="code"><span class="indent">        </span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#82AAFF;--1:#3B61B0">toPromise</span><span style="--0:#D6DEEB;--1:#403F53">()</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#D6DEEB;--1:#403F53">    </span></span><span style="--0:#D6DEEB;--1:#403F53">blogPost </span><span style="--0:#C792EA;--1:#8844AE">=</span><span style="--0:#D6DEEB;--1:#403F53"> data</span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#FAF39F;--1:#111111">data</span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#7FDBCA;--1:#096E72">items</span><span style="--0:#D6DEEB;--1:#403F53">[</span><span style="--0:#F78C6C;--1:#AA0982">0</span><span style="--0:#D6DEEB;--1:#403F53">]</span></div></div><div class="ec-line"><div class="code"><span style="--0:#D6DEEB;--1:#403F53">} </span><span style="--0:#C792EA;--1:#8844AE">catch</span><span style="--0:#D6DEEB;--1:#403F53"> (error) {</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#C792EA;--1:#8844AE">return</span><span style="--0:#D6DEEB;--1:#403F53"> Astro</span><span style="--0:#C792EA;--1:#8844AE">.</span><span style="--0:#82AAFF;--1:#3B61B0">redirect</span><span style="--0:#D6DEEB;--1:#403F53">(</span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#ECC48D;--1:#984E4D">/404</span><span style="--0:#D9F5DD;--1:#111111">'</span><span style="--0:#D6DEEB;--1:#403F53">)</span></div></div><div class="ec-line"><div class="code"><span style="--0:#D6DEEB;--1:#403F53">}</span></div></div><div class="ec-line"><div class="code"><span style="--0:#919F9F;--1:#5F636F">---</span></div></div><div class="ec-line highlight ins"><div class="code"><span style="--1:#6a3588"><span style="--0:#7FDBCA">&#x3C;</span><span style="--0:#CAECE6">html</span><span style="--0:#7FDBCA"> </span></span><span style="--0:#C5E478;--1:#2d4a87">lang</span><span style="--0:#7FDBCA;--1:#6a3588">=</span><span style="--0:#D9F5DD;--1:#111111">"</span><span style="--0:#ECC48D;--1:#723b3a">en</span><span style="--0:#D9F5DD;--1:#111111">"</span><span style="--0:#7FDBCA;--1:#6a3588">></span></div></div><div class="ec-line highlight ins"><div class="code"><span class="indent">    </span><span style="--1:#6a3588"><span style="--0:#7FDBCA">&#x3C;</span><span style="--0:#CAECE6">head</span><span style="--0:#7FDBCA">></span></span></div></div><div class="ec-line highlight ins"><div class="code"><span class="indent">        </span><span style="--1:#6a3588"><span style="--0:#7FDBCA">&#x3C;</span><span style="--0:#CAECE6">meta</span><span style="--0:#7FDBCA"> </span></span><span style="--0:#C5E478;--1:#2d4a87">charset</span><span style="--0:#7FDBCA;--1:#6a3588">=</span><span style="--0:#D9F5DD;--1:#111111">"</span><span style="--0:#ECC48D;--1:#723b3a">utf-8</span><span style="--0:#D9F5DD;--1:#111111">"</span><span style="--0:#7FDBCA;--1:#6a3588"> /></span></div></div><div class="ec-line highlight ins"><div class="code"><span class="indent">        </span><span style="--1:#6a3588"><span style="--0:#7FDBCA">&#x3C;</span><span style="--0:#CAECE6">meta</span><span style="--0:#7FDBCA"> </span></span><span style="--0:#C5E478;--1:#2d4a87">name</span><span style="--0:#7FDBCA;--1:#6a3588">=</span><span style="--0:#D9F5DD;--1:#111111">"</span><span style="--0:#ECC48D;--1:#723b3a">viewport</span><span style="--0:#D9F5DD;--1:#111111">"</span><span style="--0:#7FDBCA;--1:#6a3588"> </span><span style="--0:#C5E478;--1:#2d4a87">content</span><span style="--0:#7FDBCA;--1:#6a3588">=</span><span style="--0:#D9F5DD;--1:#111111">"</span><span style="--0:#ECC48D;--1:#723b3a">width=device-width</span><span style="--0:#D9F5DD;--1:#111111">"</span><span style="--0:#7FDBCA;--1:#6a3588"> /></span></div></div><div class="ec-line highlight ins"><div class="code"><span class="indent">        </span><span style="--1:#6a3588"><span style="--0:#7FDBCA">&#x3C;</span><span style="--0:#CAECE6">title</span><span style="--0:#7FDBCA">></span></span><span style="--0:#eaa5a4;--1:#882b28">{</span><span style="--0:#D6DEEB;--1:#403F53">blogPost</span><span style="--0:#d2a6ee;--1:#6a3588">.</span><span style="--0:#FAF39F;--1:#111111">elements</span><span style="--0:#d2a6ee;--1:#6a3588">.</span><span style="--0:#FAF39F;--1:#111111">title</span><span style="--0:#d2a6ee;--1:#6a3588">.</span><span style="--0:#7FDBCA;--1:#075457">value</span><span style="--0:#eaa5a4;--1:#882b28">}</span><span style="--1:#6a3588"><span style="--0:#7FDBCA">&#x3C;/</span><span style="--0:#CAECE6">title</span><span style="--0:#7FDBCA">></span></span></div></div><div class="ec-line highlight ins"><div class="code"><span class="indent">    </span><span style="--1:#6a3588"><span style="--0:#7FDBCA">&#x3C;/</span><span style="--0:#CAECE6">head</span><span style="--0:#7FDBCA">></span></span></div></div><div class="ec-line highlight ins"><div class="code"><span class="indent">    </span><span style="--1:#6a3588"><span style="--0:#7FDBCA">&#x3C;</span><span style="--0:#CAECE6">body</span><span style="--0:#7FDBCA">></span></span></div></div><div class="ec-line highlight ins"><div class="code"><span class="indent">        </span><span style="--1:#6a3588"><span style="--0:#7FDBCA">&#x3C;</span><span style="--0:#CAECE6">article</span><span style="--0:#7FDBCA">></span></span></div></div><div class="ec-line highlight ins"><div class="code"><span class="indent">            </span><span style="--1:#6a3588"><span style="--0:#7FDBCA">&#x3C;</span><span style="--0:#CAECE6">h1</span><span style="--0:#7FDBCA">></span></span><span style="--0:#eaa5a4;--1:#882b28">{</span><span style="--0:#D6DEEB;--1:#403F53">blogPost</span><span style="--0:#d2a6ee;--1:#6a3588">.</span><span style="--0:#FAF39F;--1:#111111">elements</span><span style="--0:#d2a6ee;--1:#6a3588">.</span><span style="--0:#FAF39F;--1:#111111">title</span><span style="--0:#d2a6ee;--1:#6a3588">.</span><span style="--0:#7FDBCA;--1:#075457">value</span><span style="--0:#eaa5a4;--1:#882b28">}</span><span style="--1:#6a3588"><span style="--0:#7FDBCA">&#x3C;/</span><span style="--0:#CAECE6">h1</span><span style="--0:#7FDBCA">></span></span></div></div><div class="ec-line highlight ins"><div class="code"><span class="indent">            </span><span style="--0:#7FDBCA;--1:#6a3588">&#x3C;</span><span style="--0:#C5E478;--1:#2d4a87">Fragment</span><span style="--0:#7FDBCA;--1:#6a3588"> </span><span style="--0:#C5E478;--1:#2d4a87">set:html</span><span style="--0:#7FDBCA;--1:#6a3588">=</span><span style="--0:#eaa5a4;--1:#882b28">{</span><span style="--0:#D6DEEB;--1:#403F53">blogPost</span><span style="--0:#d2a6ee;--1:#6a3588">.</span><span style="--0:#FAF39F;--1:#111111">elements</span><span style="--0:#d2a6ee;--1:#6a3588">.</span><span style="--0:#FAF39F;--1:#111111">teaser</span><span style="--0:#d2a6ee;--1:#6a3588">.</span><span style="--0:#7FDBCA;--1:#075457">value</span><span style="--0:#eaa5a4;--1:#882b28">}</span><span style="--0:#7FDBCA;--1:#6a3588"> /></span></div></div><div class="ec-line highlight ins"><div class="code"><span class="indent">            </span><span style="--0:#7FDBCA;--1:#6a3588">&#x3C;</span><span style="--0:#C5E478;--1:#2d4a87">Fragment</span><span style="--0:#7FDBCA;--1:#6a3588"> </span><span style="--0:#C5E478;--1:#2d4a87">set:html</span><span style="--0:#7FDBCA;--1:#6a3588">=</span><span style="--0:#eaa5a4;--1:#882b28">{</span><span style="--0:#D6DEEB;--1:#403F53">blogPost</span><span style="--0:#d2a6ee;--1:#6a3588">.</span><span style="--0:#FAF39F;--1:#111111">elements</span><span style="--0:#d2a6ee;--1:#6a3588">.</span><span style="--0:#FAF39F;--1:#111111">content</span><span style="--0:#d2a6ee;--1:#6a3588">.</span><span style="--0:#7FDBCA;--1:#075457">value</span><span style="--0:#eaa5a4;--1:#882b28">}</span><span style="--0:#7FDBCA;--1:#6a3588"> /></span></div></div><div class="ec-line highlight ins"><div class="code"><span class="indent">            </span><span style="--1:#6a3588"><span style="--0:#7FDBCA">&#x3C;</span><span style="--0:#CAECE6">time</span><span style="--0:#7FDBCA">></span></span><span style="--0:#eaa5a4;--1:#882b28">{</span><span style="--0:#7FDBCA;--1:#075457">new</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#94b6ff;--1:#2d4a87">Date</span><span style="--0:#D6DEEB;--1:#403F53">(blogPost</span><span style="--0:#d2a6ee;--1:#6a3588">.</span><span style="--0:#FAF39F;--1:#111111">elements</span><span style="--0:#d2a6ee;--1:#6a3588">.</span><span style="--0:#FAF39F;--1:#111111">date</span><span style="--0:#d2a6ee;--1:#6a3588">.</span><span style="--0:#7FDBCA;--1:#075457">value</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#d2a6ee;--1:#6a3588">??</span><span style="--0:#D6DEEB;--1:#403F53"> </span><span style="--0:#D9F5DD;--1:#111111">''</span><span style="--0:#D6DEEB;--1:#403F53">)</span><span style="--0:#eaa5a4;--1:#882b28">}</span><span style="--1:#6a3588"><span style="--0:#7FDBCA">&#x3C;/</span><span style="--0:#CAECE6">time</span><span style="--0:#7FDBCA">></span></span></div></div><div class="ec-line highlight ins"><div class="code"><span class="indent">    </span><span style="--1:#6a3588"><span style="--0:#7FDBCA">&#x3C;/</span><span style="--0:#CAECE6">body</span><span style="--0:#7FDBCA">></span></span></div></div><div class="ec-line highlight ins"><div class="code"><span style="--1:#6a3588"><span style="--0:#7FDBCA">&#x3C;/</span><span style="--0:#CAECE6">html</span><span style="--0:#7FDBCA">></span></span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="---import { deliveryClient } from &#x27;../../lib/kontent&#x27;;import type { BlogPost } from &#x27;../../models&#x27;;import { contentTypes } from &#x27;../../models/project/contentTypes&#x27;;const { slug } = Astro.paramslet blogPost: BlogPost;try {    const data = await deliveryClient        .items<BlogPost>()        .equalsFilter(contentTypes.blog_post.elements.url_slug.codename, slug ?? &#x27;&#x27;)        .type(contentTypes.blog_post.codename)        .limitParameter(1)        .toPromise()    blogPost = data.data.items[0]} catch (error) {    return Astro.redirect(&#x27;/404&#x27;)}---<html lang=&#x22;en&#x22;>    <head>        <meta charset=&#x22;utf-8&#x22; />        <meta name=&#x22;viewport&#x22; content=&#x22;width=device-width&#x22; />        <title>{blogPost.elements.title.value}</title>    </head>    <body>        <article>            <h1>{blogPost.elements.title.value}</h1>            <Fragment set:html={blogPost.elements.teaser.value} />            <Fragment set:html={blogPost.elements.content.value} />            <time>{new Date(blogPost.elements.date.value ?? &#x27;&#x27;)}</time>    </body></html>"><div></div></button></div></figure></div>
<div class="sl-heading-wrapper level-h3"><h3 id="publishing-your-site">Publishing your site</h3><a class="sl-anchor-link" href="#publishing-your-site"><span aria-hidden="true" class="sl-anchor-icon"><svg width="16" height="16" viewBox="0 0 24 24"><path fill="currentcolor" d="m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z"></path></svg></span><span class="sr-only">Section titled “Publishing your site”</span></a></div>
<p>To deploy your website, visit the <a href="/en/guides/deploy/">deployment guides</a> and follow the instructions for your preferred hosting provider.</p>
<div class="sl-heading-wrapper level-h4"><h4 id="rebuild-on-kontentai-changes">Rebuild on Kontent.ai changes</h4><a class="sl-anchor-link" href="#rebuild-on-kontentai-changes"><span aria-hidden="true" class="sl-anchor-icon"><svg width="16" height="16" viewBox="0 0 24 24"><path fill="currentcolor" d="m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z"></path></svg></span><span class="sr-only">Section titled “Rebuild on Kontent.ai changes”</span></a></div>
<p>If your project is using Astro’s default static mode, you will need to set up a webhook to trigger a new build when your content changes. If you are using Netlify or Vercel as your hosting provider, you can use its webhook feature to trigger a new build from Kontent.ai events.</p>
<div class="sl-heading-wrapper level-h5"><h5 id="netlify">Netlify</h5><a class="sl-anchor-link" href="#netlify"><span aria-hidden="true" class="sl-anchor-icon"><svg width="16" height="16" viewBox="0 0 24 24"><path fill="currentcolor" d="m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z"></path></svg></span><span class="sr-only">Section titled “Netlify”</span></a></div>
<p>To set up a webhook in Netlify:</p>
`
    }), createVNode($$Steps, {
      "set:html": "<ol>\n<li>\n<p>Go to your site dashboard and click on <strong>Build &#x26; deploy</strong>.</p>\n</li>\n<li>\n<p>Under the <strong>Continuous Deployment</strong> tab, find the <strong>Build hooks</strong> section and click on <strong>Add build hook</strong>.</p>\n</li>\n<li>\n<p>Provide a name for your webhook and select the branch you want to trigger the build on. Click on <strong>Save</strong> and copy the generated URL.</p>\n</li>\n</ol>"
    }), "\n", createVNode(Fragment$1, {
      "set:html": '<div class="sl-heading-wrapper level-h5"><h5 id="vercel">Vercel</h5><a class="sl-anchor-link" href="#vercel"><span aria-hidden="true" class="sl-anchor-icon"><svg width="16" height="16" viewBox="0 0 24 24"><path fill="currentcolor" d="m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z"></path></svg></span><span class="sr-only">Section titled “Vercel”</span></a></div>\n<p>To set up a webhook in Vercel:</p>\n'
    }), createVNode($$Steps, {
      "set:html": "<ol>\n<li>\n<p>Go to your project dashboard and click on <strong>Settings</strong>.</p>\n</li>\n<li>\n<p>Under the <strong>Git</strong> tab, find the <strong>Deploy Hooks</strong> section.</p>\n</li>\n<li>\n<p>Provide a name for your webhook and the branch you want to trigger the build on. Click <strong>Add</strong> and copy the generated URL.</p>\n</li>\n</ol>"
    }), "\n", createVNode(Fragment$1, {
      "set:html": '<div class="sl-heading-wrapper level-h5"><h5 id="adding-a-webhook-to-kontentai">Adding a webhook to Kontent.ai</h5><a class="sl-anchor-link" href="#adding-a-webhook-to-kontentai"><span aria-hidden="true" class="sl-anchor-icon"><svg width="16" height="16" viewBox="0 0 24 24"><path fill="currentcolor" d="m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z"></path></svg></span><span class="sr-only">Section titled “Adding a webhook to Kontent.ai”</span></a></div>\n<p>In the <a href="https://kontent.ai/learn/docs/webhooks/javascript">Kontent.ai app</a>, go to <strong>Environment settings -> Webhooks</strong>. Click on <strong>Create new webhook</strong> and provide a name for your new webhook. Paste in the URL you copied from Netlify or Vercel and select which events should trigger the webhook. By default, for rebuilding your site when published content changes, you only need <strong>Publish</strong> and <strong>Unpublish</strong> events under <strong>Delivery API triggers</strong>. When you’re finished, click on Save.</p>\n<p>Now, whenever you publish a new blog post in Kontent.ai, a new build will be triggered and your blog will be updated.</p>'
    })]
  });
}
function MDXContent(props = {}) {
  const { wrapper: MDXLayout } = props.components || {};
  return MDXLayout ? createVNode(MDXLayout, {
    ...props,
    children: createVNode(_createMdxContent, {
      ...props
    })
  }) : _createMdxContent(props);
}
function _missingMdxReference(id, component) {
  throw new Error("Expected " + ("component" ) + " `" + id + "` to be defined: you likely forgot to import, pass, or provide it.");
}
const url = "src/content/docs/en/guides/cms/kontent-ai.mdx/";
const file = "/Users/chasepursley/Development/ai/star-support/src/content/docs/en/guides/cms/kontent-ai.mdx";
const Content = (props = {}) => MDXContent({
  ...props,
  components: { Fragment: Fragment, ...props.components }
});
Content[Symbol.for("mdx-component")] = true;
Content[Symbol.for("astro.needsHeadRendering")] = !Boolean(frontmatter.layout);
Content.moduleId = "/Users/chasepursley/Development/ai/star-support/src/content/docs/en/guides/cms/kontent-ai.mdx";
__astro_tag_component__(Content, "astro:jsx");

export { Content, Content as default, file, frontmatter, getHeadings, url };
