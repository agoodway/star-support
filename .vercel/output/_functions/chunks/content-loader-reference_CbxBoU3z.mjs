import { d as createVNode, K as Fragment, b5 as __astro_tag_component__ } from './astro/server_CeKHpNWz.mjs';
import { $ as $$Since } from './Since_BJvBqJyZ.mjs';

const frontmatter = {
  "title": "Astro Content Loader API",
  "sidebar": {
    "label": "Content Loader API"
  },
  "i18nReady": true
};
function getHeadings() {
  return [{
    "depth": 2,
    "slug": "what-is-a-loader",
    "text": "What is a loader?"
  }, {
    "depth": 2,
    "slug": "built-in-loaders",
    "text": "Built-in loaders"
  }, {
    "depth": 3,
    "slug": "glob-loader",
    "text": "glob() loader"
  }, {
    "depth": 4,
    "slug": "pattern",
    "text": "pattern"
  }, {
    "depth": 4,
    "slug": "base",
    "text": "base"
  }, {
    "depth": 4,
    "slug": "generateid",
    "text": "generateId()"
  }, {
    "depth": 3,
    "slug": "file-loader",
    "text": "file() loader"
  }, {
    "depth": 4,
    "slug": "filename",
    "text": "fileName"
  }, {
    "depth": 4,
    "slug": "options",
    "text": "Options"
  }, {
    "depth": 5,
    "slug": "parser",
    "text": "parser()"
  }, {
    "depth": 2,
    "slug": "loader-types",
    "text": "Loader types"
  }, {
    "depth": 3,
    "slug": "inline-loaders",
    "text": "Inline loaders"
  }, {
    "depth": 3,
    "slug": "object-loaders",
    "text": "Object loaders"
  }, {
    "depth": 2,
    "slug": "object-loader-api",
    "text": "Object loader API"
  }, {
    "depth": 3,
    "slug": "the-loader-object",
    "text": "The Loader object"
  }, {
    "depth": 4,
    "slug": "name",
    "text": "name"
  }, {
    "depth": 4,
    "slug": "load",
    "text": "load"
  }, {
    "depth": 4,
    "slug": "schema",
    "text": "schema"
  }, {
    "depth": 3,
    "slug": "loadercontext",
    "text": "LoaderContext"
  }, {
    "depth": 4,
    "slug": "collection",
    "text": "collection"
  }, {
    "depth": 4,
    "slug": "store",
    "text": "store"
  }, {
    "depth": 4,
    "slug": "meta",
    "text": "meta"
  }, {
    "depth": 4,
    "slug": "logger",
    "text": "logger"
  }, {
    "depth": 4,
    "slug": "config",
    "text": "config"
  }, {
    "depth": 4,
    "slug": "parsedata",
    "text": "parseData"
  }, {
    "depth": 4,
    "slug": "rendermarkdown",
    "text": "renderMarkdown"
  }, {
    "depth": 4,
    "slug": "generatedigest",
    "text": "generateDigest"
  }, {
    "depth": 4,
    "slug": "watcher",
    "text": "watcher"
  }, {
    "depth": 4,
    "slug": "refreshcontextdata",
    "text": "refreshContextData"
  }, {
    "depth": 3,
    "slug": "datastore",
    "text": "DataStore"
  }, {
    "depth": 4,
    "slug": "get",
    "text": "get"
  }, {
    "depth": 4,
    "slug": "set",
    "text": "set"
  }, {
    "depth": 4,
    "slug": "entries",
    "text": "entries"
  }, {
    "depth": 4,
    "slug": "keys",
    "text": "keys"
  }, {
    "depth": 4,
    "slug": "values",
    "text": "values"
  }, {
    "depth": 4,
    "slug": "delete",
    "text": "delete"
  }, {
    "depth": 4,
    "slug": "clear",
    "text": "clear"
  }, {
    "depth": 4,
    "slug": "has",
    "text": "has"
  }, {
    "depth": 3,
    "slug": "dataentry",
    "text": "DataEntry"
  }, {
    "depth": 4,
    "slug": "id",
    "text": "id"
  }, {
    "depth": 4,
    "slug": "data",
    "text": "data"
  }, {
    "depth": 4,
    "slug": "filepath",
    "text": "filePath"
  }, {
    "depth": 4,
    "slug": "body",
    "text": "body"
  }, {
    "depth": 4,
    "slug": "digest",
    "text": "digest"
  }, {
    "depth": 4,
    "slug": "rendered",
    "text": "rendered"
  }];
}
function _createMdxContent(props) {
  const _components = {
    br: "br",
    code: "code",
    p: "p",
    strong: "strong",
    ...props.components
  }, {Fragment: Fragment$1} = _components;
  if (!Fragment$1) _missingMdxReference("Fragment");
  return createVNode(Fragment, {
    children: [createVNode(Fragment$1, {
      "set:html": "<p>Astro’s  Content Loader API allows you to load your data from any source, local or remote, and interact with Astro’s content layer to manage your <a href=\"/en/guides/content-collections/\">content collections</a>.</p>\n<div class=\"sl-heading-wrapper level-h2\"><h2 id=\"what-is-a-loader\">What is a loader?</h2><a class=\"sl-anchor-link\" href=\"#what-is-a-loader\"><span aria-hidden=\"true\" class=\"sl-anchor-icon\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg></span><span class=\"sr-only\">Section titled “What is a loader?”</span></a></div>\n<p>Astro loaders allow you to load data into <a href=\"/en/guides/content-collections/\">content collections</a>, which can then be used in pages and components. The <a href=\"/en/guides/content-collections/#built-in-loaders\">built-in <code dir=\"auto\">glob()</code> and <code dir=\"auto\">file()</code> loaders</a> are used to load content from the file system, and you can create your own loaders to load content from other sources.</p>\n<p>Each collection needs <a href=\"/en/guides/content-collections/#defining-the-collection-loader\">a loader defined in its schema</a>. You can define a loader inline in your project’s <code dir=\"auto\">src/content.config.ts</code> file, share one loader between multiple collections, or even <a href=\"/en/reference/publish-to-npm/\">publish your loader to NPM as a package</a> to share with others and be included in our integrations library.</p>\n<div class=\"sl-heading-wrapper level-h2\"><h2 id=\"built-in-loaders\">Built-in loaders</h2><a class=\"sl-anchor-link\" href=\"#built-in-loaders\"><span aria-hidden=\"true\" class=\"sl-anchor-icon\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg></span><span class=\"sr-only\">Section titled “Built-in loaders”</span></a></div>\n<p>Astro provides two built-in loaders to help you fetch your collections. Both offer options to suit a wide range of use cases.</p>\n<div class=\"sl-heading-wrapper level-h3\"><h3 id=\"glob-loader\"><code dir=\"auto\">glob()</code> loader</h3><a class=\"sl-anchor-link\" href=\"#glob-loader\"><span aria-hidden=\"true\" class=\"sl-anchor-icon\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg></span><span class=\"sr-only\">Section titled “glob() loader”</span></a></div>\n"
    }), createVNode(_components.p, {
      children: [createVNode(_components.p, {
        children: [createVNode(_components.strong, {
          children: "Type:"
        }), " ", createVNode(_components.code, {
          children: ["(options: GlobOptions) => ", createVNode("a", {
            href: "#the-loader-object",
            "set:html": "Loader"
          })]
        }), createVNode(_components.br, {})]
      }), createVNode($$Since, {
        v: "5.0.0"
      })]
    }), "\n", createVNode(Fragment$1, {
      "set:html": "<p>The <code dir=\"auto\">glob()</code> loader creates entries from directories of files from anywhere on the filesystem. The supported file types are Markdown, MDX, Markdoc, JSON, and YAML files.</p>\n<p>This loader accepts an object with the following properties: <code dir=\"auto\">pattern</code>, <code dir=\"auto\">base</code> (optional), and <code dir=\"auto\">generateId</code> (optional).</p>\n<div class=\"expressive-code\"><link rel=\"stylesheet\" href=\"/_astro/ec.rvnnt.css\"><script type=\"module\" src=\"/_astro/ec.8zarh.js\"></script><figure class=\"frame has-title not-content\"><figcaption class=\"header\"><span class=\"title\">src/content.config.ts</span></figcaption><pre data-language=\"ts\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">import</span><span style=\"--0:#D6DEEB;--1:#403F53\"> { defineCollection } </span><span style=\"--0:#C792EA;--1:#8844AE\">from</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#D9F5DD;--1:#111111\">'</span><span style=\"--0:#ECC48D;--1:#984E4D\">astro:content</span><span style=\"--0:#D9F5DD;--1:#111111\">'</span><span style=\"--0:#D6DEEB;--1:#403F53\">;</span></div></div><div class=\"ec-line highlight mark\"><div class=\"code\"><span style=\"--0:#d0a4ed;--1:#753a96\">import</span><span style=\"--0:#D6DEEB;--1:#403F53\"> { glob } </span><span style=\"--0:#d0a4ed;--1:#753a96\">from</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#D9F5DD;--1:#111111\">'</span><span style=\"--0:#ECC48D;--1:#804241\">astro/loaders</span><span style=\"--0:#D9F5DD;--1:#111111\">'</span><span style=\"--0:#D6DEEB;--1:#403F53\">;</span></div></div><div class=\"ec-line\"><div class=\"code\">\n</div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">const </span><span style=\"--0:#82AAFF;--1:#3B61B0\">pages</span><span style=\"--0:#C792EA;--1:#8844AE\"> = </span><span style=\"--0:#82AAFF;--1:#3B61B0\">defineCollection</span><span style=\"--0:#D6DEEB;--1:#403F53\">(</span><span style=\"--0:#C792EA;--1:#8844AE\">{</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#919F9F;--1:#5F636F\">/* Retrieve all Markdown files in your pages directory. */</span></div></div><div class=\"ec-line highlight mark\"><div class=\"code\"><span style=\"--0:#d0a4ed;--1:#753a96\"><span class=\"indent\">  </span>loader: </span><span style=\"--0:#91b4ff;--1:#325295\">glob</span><span style=\"--0:#D6DEEB;--1:#403F53\">(</span><span style=\"--0:#d0a4ed;--1:#753a96\">{ pattern: </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#804241\">**/*.md</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#d0a4ed;--1:#753a96\">, base: </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#804241\">./src/data/pages</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#d0a4ed;--1:#753a96\"> }</span><span style=\"--0:#D6DEEB;--1:#403F53\">)</span><span style=\"--0:#d0a4ed;--1:#753a96\">,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#C792EA;--1:#8844AE\">  </span></span><span style=\"--0:#C792EA;--1:#8844AE\">schema: </span><span style=\"--0:#919F9F;--1:#5F636F\">/* ... */</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">}</span><span style=\"--0:#D6DEEB;--1:#403F53\">);</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">const </span><span style=\"--0:#82AAFF;--1:#3B61B0\">blog</span><span style=\"--0:#C792EA;--1:#8844AE\"> = </span><span style=\"--0:#82AAFF;--1:#3B61B0\">defineCollection</span><span style=\"--0:#D6DEEB;--1:#403F53\">(</span><span style=\"--0:#C792EA;--1:#8844AE\">{</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#919F9F;--1:#5F636F\">/* Retrieve all Markdown and MDX files in your blog directory. */</span></div></div><div class=\"ec-line highlight mark\"><div class=\"code\"><span style=\"--0:#d0a4ed;--1:#753a96\"><span class=\"indent\">  </span>loader: </span><span style=\"--0:#91b4ff;--1:#325295\">glob</span><span style=\"--0:#D6DEEB;--1:#403F53\">(</span><span style=\"--0:#d0a4ed;--1:#753a96\">{ pattern: </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#804241\">**/*.(md|mdx)</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#d0a4ed;--1:#753a96\">, base: </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#804241\">./src/data/blog</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#d0a4ed;--1:#753a96\"> }</span><span style=\"--0:#D6DEEB;--1:#403F53\">)</span><span style=\"--0:#d0a4ed;--1:#753a96\">,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#C792EA;--1:#8844AE\">  </span></span><span style=\"--0:#C792EA;--1:#8844AE\">schema: </span><span style=\"--0:#919F9F;--1:#5F636F\">/* ... */</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">}</span><span style=\"--0:#D6DEEB;--1:#403F53\">);</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">const </span><span style=\"--0:#82AAFF;--1:#3B61B0\">authors</span><span style=\"--0:#C792EA;--1:#8844AE\"> = </span><span style=\"--0:#82AAFF;--1:#3B61B0\">defineCollection</span><span style=\"--0:#D6DEEB;--1:#403F53\">(</span><span style=\"--0:#C792EA;--1:#8844AE\">{</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#919F9F;--1:#5F636F\">/* Retrieve all JSON files in your authors directory while retaining</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#919F9F;--1:#5F636F\">   </span></span><span style=\"--0:#919F9F;--1:#5F636F\">* uppercase letters in the ID. */</span></div></div><div class=\"ec-line highlight mark\"><div class=\"code\"><span style=\"--0:#d0a4ed;--1:#753a96\"><span class=\"indent\">  </span>loader: </span><span style=\"--0:#91b4ff;--1:#325295\">glob</span><span style=\"--0:#D6DEEB;--1:#403F53\">(</span><span style=\"--0:#d0a4ed;--1:#753a96\">{</span></div></div><div class=\"ec-line highlight mark\"><div class=\"code\"><span style=\"--0:#d0a4ed;--1:#753a96\"><span class=\"indent\">    </span>pattern: </span><span style=\"--0:#D9F5DD;--1:#111111\">'</span><span style=\"--0:#ECC48D;--1:#804241\">**/*.json</span><span style=\"--0:#D9F5DD;--1:#111111\">'</span><span style=\"--0:#d0a4ed;--1:#753a96\">,</span></div></div><div class=\"ec-line highlight mark\"><div class=\"code\"><span style=\"--0:#d0a4ed;--1:#753a96\"><span class=\"indent\">    </span>base: </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#804241\">./src/data/authors</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#d0a4ed;--1:#753a96\">,</span></div></div><div class=\"ec-line highlight mark\"><div class=\"code\"><span class=\"indent\">    </span><span style=\"--0:#91b4ff;--1:#325295\">generateId</span><span style=\"--0:#d0a4ed;--1:#753a96\">: </span><span style=\"--0:#D9F5DD;--1:#111111\">(</span><span style=\"--0:#d0a4ed;--1:#753a96\">{ </span><span style=\"--0:#D7DBE0;--1:#403F53\">entry</span><span style=\"--0:#d0a4ed;--1:#753a96\"> }</span><span style=\"--0:#D9F5DD;--1:#111111\">)</span><span style=\"--0:#d0a4ed;--1:#753a96\"> => </span><span style=\"--0:#D6DEEB;--1:#403F53\">entry</span><span style=\"--0:#d0a4ed;--1:#753a96\">.</span><span style=\"--0:#91b4ff;--1:#325295\">replace</span><span style=\"--0:#D6DEEB;--1:#403F53\">(</span><span style=\"--0:#D9F5DD;--1:#111111\">/</span><span style=\"--0:#f89e83;--1:#9f087a\">\\.</span><span style=\"--0:#81bbea;--1:#315879\">json</span><span style=\"--0:#d0a4ed;--1:#753a96\">$</span><span style=\"--0:#D9F5DD;--1:#111111\">/</span><span style=\"--0:#d0a4ed;--1:#753a96\">, </span><span style=\"--0:#D9F5DD;--1:#111111\">''</span><span style=\"--0:#D6DEEB;--1:#403F53\">)</span><span style=\"--0:#d0a4ed;--1:#753a96\">,</span></div></div><div class=\"ec-line highlight mark\"><div class=\"code\"><span style=\"--0:#d0a4ed;--1:#753a96\"><span class=\"indent\">  </span>}</span><span style=\"--0:#D6DEEB;--1:#403F53\">)</span><span style=\"--0:#d0a4ed;--1:#753a96\">,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#C792EA;--1:#8844AE\">  </span></span><span style=\"--0:#C792EA;--1:#8844AE\">schema: </span><span style=\"--0:#919F9F;--1:#5F636F\">/* ... */</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">}</span><span style=\"--0:#D6DEEB;--1:#403F53\">);</span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"import { defineCollection } from &#x27;astro:content&#x27;;import { glob } from &#x27;astro/loaders&#x27;;const pages = defineCollection({  /* Retrieve all Markdown files in your pages directory. */  loader: glob({ pattern: &#x22;**/*.md&#x22;, base: &#x22;./src/data/pages&#x22; }),  schema: /* ... */});const blog = defineCollection({  /* Retrieve all Markdown and MDX files in your blog directory. */  loader: glob({ pattern: &#x22;**/*.(md|mdx)&#x22;, base: &#x22;./src/data/blog&#x22; }),  schema: /* ... */});const authors = defineCollection({  /* Retrieve all JSON files in your authors directory while retaining   * uppercase letters in the ID. */  loader: glob({    pattern: &#x27;**/*.json&#x27;,    base: &#x22;./src/data/authors&#x22;,    generateId: ({ entry }) => entry.replace(/\\.json$/, &#x27;&#x27;),  }),  schema: /* ... */});\"><div></div></button></div></figure></div>\n<div class=\"sl-heading-wrapper level-h4\"><h4 id=\"pattern\"><code dir=\"auto\">pattern</code></h4><a class=\"sl-anchor-link\" href=\"#pattern\"><span aria-hidden=\"true\" class=\"sl-anchor-icon\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg></span><span class=\"sr-only\">Section titled “pattern”</span></a></div>\n<p><p><strong>Type:</strong> <code dir=\"auto\">string | string[]</code></p></p>\n<p>The <code dir=\"auto\">pattern</code> property accepts a string or an array of strings using glob matching (e.g. wildcards, globstars). The patterns must be relative to the base directory of entry files to match.</p>\n<p>You can learn more about the syntax to use in the <a href=\"https://github.com/micromatch/micromatch#matching-features\">micromatch documentation</a>. You can also verify the validity of your pattern using an online tool like the <a href=\"https://www.digitalocean.com/community/tools/glob\">DigitalOcean Glob Tool</a>.</p>\n<div class=\"sl-heading-wrapper level-h4\"><h4 id=\"base\"><code dir=\"auto\">base</code></h4><a class=\"sl-anchor-link\" href=\"#base\"><span aria-hidden=\"true\" class=\"sl-anchor-icon\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg></span><span class=\"sr-only\">Section titled “base”</span></a></div>\n<p><p><strong>Type:</strong> <code dir=\"auto\">string | URL</code><br>\n<strong>Default:</strong> <code dir=\"auto\">\".\"</code></p></p>\n<p>A relative path or <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/URL\">URL</a> to the directory from which to resolve the <code dir=\"auto\">pattern</code>.</p>\n<div class=\"sl-heading-wrapper level-h4\"><h4 id=\"generateid\"><code dir=\"auto\">generateId()</code></h4><a class=\"sl-anchor-link\" href=\"#generateid\"><span aria-hidden=\"true\" class=\"sl-anchor-icon\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg></span><span class=\"sr-only\">Section titled “generateId()”</span></a></div>\n<p><p><strong>Type:</strong> <code dir=\"auto\">(options: GenerateIdOptions) => string</code></p></p>\n<p>A callback function that returns a unique string per entry in a collection. It accepts an object as parameter with the following properties:</p>\n<ul>\n<li><code dir=\"auto\">entry</code> - the path to the entry file, relative to the base directory</li>\n<li><code dir=\"auto\">base</code> - the base directory <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/URL\">URL</a></li>\n<li><code dir=\"auto\">data</code> - the parsed, unvalidated data of the entry</li>\n</ul>\n<p>By default it uses <a href=\"https://github.com/Flet/github-slugger\"><code dir=\"auto\">github-slugger</code></a> to generate a slug with <a href=\"https://developer.mozilla.org/en-US/docs/Glossary/Kebab_case\">kebab-cased</a> words.</p>\n<div class=\"sl-heading-wrapper level-h3\"><h3 id=\"file-loader\"><code dir=\"auto\">file()</code> loader</h3><a class=\"sl-anchor-link\" href=\"#file-loader\"><span aria-hidden=\"true\" class=\"sl-anchor-icon\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg></span><span class=\"sr-only\">Section titled “file() loader”</span></a></div>\n"
    }), createVNode(_components.p, {
      children: [createVNode(_components.p, {
        children: [createVNode(_components.strong, {
          children: "Type:"
        }), " ", createVNode(_components.code, {
          children: ["(fileName: string, options?: FileOptions) => ", createVNode("a", {
            href: "#the-loader-object",
            "set:html": "Loader"
          })]
        }), createVNode(_components.br, {})]
      }), createVNode($$Since, {
        v: "5.0.0"
      })]
    }), "\n", createVNode(Fragment$1, {
      "set:html": "<p>The <code dir=\"auto\">file()</code> loader creates entries from a single file that contains an array of objects with a unique <code dir=\"auto\">id</code> field, or an object with IDs as keys and entries as values. It supports JSON or YAML, and you can provide a custom <code dir=\"auto\">parser</code> for data files it cannot parse by default.</p>\n<p>This loader accepts a <code dir=\"auto\">fileName</code> property and an optional object as second argument:</p>\n<div class=\"expressive-code\"><figure class=\"frame has-title not-content\"><figcaption class=\"header\"><span class=\"title\">src/content.config.ts</span></figcaption><pre data-language=\"ts\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">import</span><span style=\"--0:#D6DEEB;--1:#403F53\"> { defineCollection } </span><span style=\"--0:#C792EA;--1:#8844AE\">from</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#D9F5DD;--1:#111111\">'</span><span style=\"--0:#ECC48D;--1:#984E4D\">astro:content</span><span style=\"--0:#D9F5DD;--1:#111111\">'</span><span style=\"--0:#D6DEEB;--1:#403F53\">;</span></div></div><div class=\"ec-line highlight mark\"><div class=\"code\"><span style=\"--0:#d0a4ed;--1:#753a96\">import</span><span style=\"--0:#D6DEEB;--1:#403F53\"> { file } </span><span style=\"--0:#d0a4ed;--1:#753a96\">from</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#D9F5DD;--1:#111111\">'</span><span style=\"--0:#ECC48D;--1:#804241\">astro/loaders</span><span style=\"--0:#D9F5DD;--1:#111111\">'</span><span style=\"--0:#D6DEEB;--1:#403F53\">;</span></div></div><div class=\"ec-line\"><div class=\"code\">\n</div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">const </span><span style=\"--0:#82AAFF;--1:#3B61B0\">authors</span><span style=\"--0:#C792EA;--1:#8844AE\"> = </span><span style=\"--0:#82AAFF;--1:#3B61B0\">defineCollection</span><span style=\"--0:#D6DEEB;--1:#403F53\">(</span><span style=\"--0:#C792EA;--1:#8844AE\">{</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#919F9F;--1:#5F636F\">/* Retrieve all entries from a JSON file. */</span></div></div><div class=\"ec-line highlight mark\"><div class=\"code\"><span style=\"--0:#d0a4ed;--1:#753a96\"><span class=\"indent\">  </span>loader: </span><span style=\"--0:#91b4ff;--1:#325295\">file</span><span style=\"--0:#D6DEEB;--1:#403F53\">(</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#804241\">src/data/authors.json</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">)</span><span style=\"--0:#d0a4ed;--1:#753a96\">,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#C792EA;--1:#8844AE\">  </span></span><span style=\"--0:#C792EA;--1:#8844AE\">schema: </span><span style=\"--0:#919F9F;--1:#5F636F\">/* ... */</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">}</span><span style=\"--0:#D6DEEB;--1:#403F53\">);</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">const </span><span style=\"--0:#82AAFF;--1:#3B61B0\">products</span><span style=\"--0:#C792EA;--1:#8844AE\"> = </span><span style=\"--0:#82AAFF;--1:#3B61B0\">defineCollection</span><span style=\"--0:#D6DEEB;--1:#403F53\">(</span><span style=\"--0:#C792EA;--1:#8844AE\">{</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#919F9F;--1:#5F636F\">/* Retrieve all entries from a CSV file using a custom parser. */</span></div></div><div class=\"ec-line highlight mark\"><div class=\"code\"><span style=\"--0:#d0a4ed;--1:#753a96\"><span class=\"indent\">  </span>loader: </span><span style=\"--0:#91b4ff;--1:#325295\">file</span><span style=\"--0:#D6DEEB;--1:#403F53\">(</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#804241\">src/data/products.csv</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#d0a4ed;--1:#753a96\">, {</span></div></div><div class=\"ec-line highlight mark\"><div class=\"code\"><span class=\"indent\">    </span><span style=\"--0:#91b4ff;--1:#325295\">parser</span><span style=\"--0:#d0a4ed;--1:#753a96\">: </span><span style=\"--0:#D9F5DD;--1:#111111\">(</span><span style=\"--0:#D7DBE0;--1:#403F53\">fileContent</span><span style=\"--0:#D9F5DD;--1:#111111\">)</span><span style=\"--0:#d0a4ed;--1:#753a96\"> => { </span><span style=\"--0:#adb7b7;--1:#50545e\">/* your parser logic */</span><span style=\"--0:#d0a4ed;--1:#753a96\"> },</span></div></div><div class=\"ec-line highlight mark\"><div class=\"code\"><span style=\"--0:#d0a4ed;--1:#753a96\"><span class=\"indent\">  </span>}</span><span style=\"--0:#D6DEEB;--1:#403F53\">)</span><span style=\"--0:#d0a4ed;--1:#753a96\">,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#C792EA;--1:#8844AE\">  </span></span><span style=\"--0:#C792EA;--1:#8844AE\">schema: </span><span style=\"--0:#919F9F;--1:#5F636F\">/* ... */</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">}</span><span style=\"--0:#D6DEEB;--1:#403F53\">);</span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"import { defineCollection } from &#x27;astro:content&#x27;;import { file } from &#x27;astro/loaders&#x27;;const authors = defineCollection({  /* Retrieve all entries from a JSON file. */  loader: file(&#x22;src/data/authors.json&#x22;),  schema: /* ... */});const products = defineCollection({  /* Retrieve all entries from a CSV file using a custom parser. */  loader: file(&#x22;src/data/products.csv&#x22;, {    parser: (fileContent) => { /* your parser logic */ },  }),  schema: /* ... */});\"><div></div></button></div></figure></div>\n<div class=\"sl-heading-wrapper level-h4\"><h4 id=\"filename\"><code dir=\"auto\">fileName</code></h4><a class=\"sl-anchor-link\" href=\"#filename\"><span aria-hidden=\"true\" class=\"sl-anchor-icon\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg></span><span class=\"sr-only\">Section titled “fileName”</span></a></div>\n<p><p><strong>Type:</strong> <code dir=\"auto\">string</code></p></p>\n<p>Sets the path to the file to load, relative to the root directory.</p>\n<div class=\"sl-heading-wrapper level-h4\"><h4 id=\"options\">Options</h4><a class=\"sl-anchor-link\" href=\"#options\"><span aria-hidden=\"true\" class=\"sl-anchor-icon\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg></span><span class=\"sr-only\">Section titled “Options”</span></a></div>\n<p><p><strong>Type:</strong> <code dir=\"auto\">FileOptions</code></p></p>\n<p>An optional object with the following properties:</p>\n<div class=\"sl-heading-wrapper level-h5\"><h5 id=\"parser\"><code dir=\"auto\">parser()</code></h5><a class=\"sl-anchor-link\" href=\"#parser\"><span aria-hidden=\"true\" class=\"sl-anchor-icon\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg></span><span class=\"sr-only\">Section titled “parser()”</span></a></div>\n<p><p><strong>Type:</strong> <code dir=\"auto\">(text: string) => Record&#x3C;string, Record&#x3C;string, unknown>> | Array&#x3C;Record&#x3C;string, unknown>></code></p></p>\n<p>A callback function to create a collection from a file’s contents. Use it when you need to process file not supported by default (e.g. <code dir=\"auto\">.csv</code>) or when using <a href=\"/en/guides/content-collections/#nested-json-documents\">nested <code dir=\"auto\">.json</code> documents</a>.</p>\n<div class=\"sl-heading-wrapper level-h2\"><h2 id=\"loader-types\">Loader types</h2><a class=\"sl-anchor-link\" href=\"#loader-types\"><span aria-hidden=\"true\" class=\"sl-anchor-icon\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg></span><span class=\"sr-only\">Section titled “Loader types”</span></a></div>\n<p>Loaders can be defined either as a simple function that returns an array of entries or with the more powerful object Content Loader API for more control over the loading process.</p>\n<div class=\"sl-heading-wrapper level-h3\"><h3 id=\"inline-loaders\">Inline loaders</h3><a class=\"sl-anchor-link\" href=\"#inline-loaders\"><span aria-hidden=\"true\" class=\"sl-anchor-icon\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg></span><span class=\"sr-only\">Section titled “Inline loaders”</span></a></div>\n<p>An inline loader is an async function that returns an array or object containing entries. Use this for simple loaders, particularly those that are defined inline in the <code dir=\"auto\">src/content.config.ts</code> file.</p>\n<p>The function can be async and must return either an array of entries that each contain a unique <code dir=\"auto\">id</code> field, or an object where each key is a unique ID and each value is the entry. Whenever the loader is invoked, it will clear the store and reload all the entries.</p>\n<div class=\"expressive-code\"><figure class=\"frame has-title not-content\"><figcaption class=\"header\"><span class=\"title\">src/content.config.ts</span></figcaption><pre data-language=\"ts\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">const </span><span style=\"--0:#82AAFF;--1:#3B61B0\">countries</span><span style=\"--0:#C792EA;--1:#8844AE\"> = </span><span style=\"--0:#82AAFF;--1:#3B61B0\">defineCollection</span><span style=\"--0:#D6DEEB;--1:#403F53\">(</span><span style=\"--0:#C792EA;--1:#8844AE\">{</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#82AAFF;--1:#3B61B0\">loader</span><span style=\"--0:#C792EA;--1:#8844AE\">: async </span><span style=\"--0:#D9F5DD;--1:#111111\">()</span><span style=\"--0:#C792EA;--1:#8844AE\"> => {</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#C792EA;--1:#8844AE\">    </span></span><span style=\"--0:#C792EA;--1:#8844AE\">const </span><span style=\"--0:#82AAFF;--1:#3B61B0\">response</span><span style=\"--0:#C792EA;--1:#8844AE\"> = await </span><span style=\"--0:#82AAFF;--1:#3B61B0\">fetch</span><span style=\"--0:#D6DEEB;--1:#403F53\">(</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#984E4D\">https://restcountries.com/v3.1/all</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">)</span><span style=\"--0:#C792EA;--1:#8844AE\">;</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#C792EA;--1:#8844AE\">    </span></span><span style=\"--0:#C792EA;--1:#8844AE\">const </span><span style=\"--0:#82AAFF;--1:#3B61B0\">data</span><span style=\"--0:#C792EA;--1:#8844AE\"> = await </span><span style=\"--0:#D6DEEB;--1:#403F53\">response</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#82AAFF;--1:#3B61B0\">json</span><span style=\"--0:#D6DEEB;--1:#403F53\">()</span><span style=\"--0:#C792EA;--1:#8844AE\">;</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">    </span><span style=\"--0:#919F9F;--1:#5D6376\">// Must return an array of entries with an id property</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">    </span><span style=\"--0:#919F9F;--1:#5D6376\">// or an object with IDs as keys and entries as values</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#C792EA;--1:#8844AE\">    </span></span><span style=\"--0:#C792EA;--1:#8844AE\">return </span><span style=\"--0:#D6DEEB;--1:#403F53\">data</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#82AAFF;--1:#3B61B0\">map</span><span style=\"--0:#D6DEEB;--1:#403F53\">(</span><span style=\"--0:#D9F5DD;--1:#111111\">(</span><span style=\"--0:#D7DBE0;--1:#403F53\">country</span><span style=\"--0:#D9F5DD;--1:#111111\">)</span><span style=\"--0:#C792EA;--1:#8844AE\"> => </span><span style=\"--0:#D6DEEB;--1:#403F53\">(</span><span style=\"--0:#C792EA;--1:#8844AE\">{</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#C792EA;--1:#8844AE\">      </span></span><span style=\"--0:#C792EA;--1:#8844AE\">id: </span><span style=\"--0:#D6DEEB;--1:#403F53\">country</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#7FDBCA;--1:#096E72\">cca3</span><span style=\"--0:#C792EA;--1:#8844AE\">,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">      </span><span style=\"--0:#7FDBCA;--1:#096E72\">...</span><span style=\"--0:#D6DEEB;--1:#403F53\">country</span><span style=\"--0:#C792EA;--1:#8844AE\">,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#C792EA;--1:#8844AE\">    </span></span><span style=\"--0:#C792EA;--1:#8844AE\">}</span><span style=\"--0:#D6DEEB;--1:#403F53\">))</span><span style=\"--0:#C792EA;--1:#8844AE\">;</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#C792EA;--1:#8844AE\">  </span></span><span style=\"--0:#C792EA;--1:#8844AE\">},</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#C792EA;--1:#8844AE\">  </span></span><span style=\"--0:#C792EA;--1:#8844AE\">schema: </span><span style=\"--0:#919F9F;--1:#5F636F\">/* ... */</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">}</span><span style=\"--0:#D6DEEB;--1:#403F53\">);</span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"const countries = defineCollection({  loader: async () => {    const response = await fetch(&#x22;https://restcountries.com/v3.1/all&#x22;);    const data = await response.json();    // Must return an array of entries with an id property    // or an object with IDs as keys and entries as values    return data.map((country) => ({      id: country.cca3,      ...country,    }));  },  schema: /* ... */});\"><div></div></button></div></figure></div>\n<div class=\"sl-heading-wrapper level-h3\"><h3 id=\"object-loaders\">Object loaders</h3><a class=\"sl-anchor-link\" href=\"#object-loaders\"><span aria-hidden=\"true\" class=\"sl-anchor-icon\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg></span><span class=\"sr-only\">Section titled “Object loaders”</span></a></div>\n<p>A loader is an object with a <code dir=\"auto\">load()</code> method that is called at build time to fetch data and update the data store. It allows entries to be updated incrementally, or for the store to be cleared only when necessary. It can also define a schema for the entries, which can be used to validate the data and generate static types.</p>\n<p>The recommended pattern is to define a function that accepts configuration options and returns the loader object, in the same way that you would normally define an Astro integration or Vite plugin.</p>\n<div class=\"expressive-code\"><figure class=\"frame has-title not-content\"><figcaption class=\"header\"><span class=\"title\">loader.ts</span></figcaption><pre data-language=\"ts\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">import</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#C792EA;--1:#8844AE\">type</span><span style=\"--0:#D6DEEB;--1:#403F53\"> { Loader, LoaderContext } </span><span style=\"--0:#C792EA;--1:#8844AE\">from</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#D9F5DD;--1:#111111\">'</span><span style=\"--0:#ECC48D;--1:#984E4D\">astro/loaders</span><span style=\"--0:#D9F5DD;--1:#111111\">'</span><span style=\"--0:#D6DEEB;--1:#403F53\">;</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">import</span><span style=\"--0:#D6DEEB;--1:#403F53\"> { z } </span><span style=\"--0:#C792EA;--1:#8844AE\">from</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#D9F5DD;--1:#111111\">'</span><span style=\"--0:#ECC48D;--1:#984E4D\">astro:content</span><span style=\"--0:#D9F5DD;--1:#111111\">'</span><span style=\"--0:#D6DEEB;--1:#403F53\">;</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">import</span><span style=\"--0:#D6DEEB;--1:#403F53\"> { loadFeedData } </span><span style=\"--0:#C792EA;--1:#8844AE\">from</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#984E4D\">./feed.js</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">;</span></div></div><div class=\"ec-line\"><div class=\"code\">\n</div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#919F9F;--1:#5D6376\">// Define any options that the loader needs</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">export</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#C792EA;--1:#8844AE\">function</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#82AAFF;--1:#3B61B0\">myLoader</span><span style=\"--0:#D9F5DD;--1:#111111\">(</span><span style=\"--0:#D7DBE0;--1:#403F53\">options</span><span style=\"--0:#7FDBCA;--1:#096E72\">:</span><span style=\"--0:#D6DEEB;--1:#403F53\"> { url</span><span style=\"--0:#7FDBCA;--1:#096E72\">:</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#C5E478;--1:#3B61B0\">string</span><span style=\"--0:#889FB2;--1:#4D667B\">,</span><span style=\"--0:#D6DEEB;--1:#403F53\"> apiKey</span><span style=\"--0:#7FDBCA;--1:#096E72\">:</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#C5E478;--1:#3B61B0\">string</span><span style=\"--0:#D6DEEB;--1:#403F53\"> }</span><span style=\"--0:#D9F5DD;--1:#111111\">)</span><span style=\"--0:#7FDBCA;--1:#096E72\">:</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#FFCB8B;--1:#111111\">Loader</span><span style=\"--0:#D6DEEB;--1:#403F53\"> {</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#919F9F;--1:#5D6376\">// Configure the loader</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#C792EA;--1:#8844AE\">const </span><span style=\"--0:#82AAFF;--1:#3B61B0\">feedUrl</span><span style=\"--0:#C792EA;--1:#8844AE\"> = </span><span style=\"--0:#7FDBCA;--1:#096E72\">new</span><span style=\"--0:#C792EA;--1:#8844AE\"> </span><span style=\"--0:#82AAFF;--1:#3B61B0\">URL</span><span style=\"--0:#D6DEEB;--1:#403F53\">(options</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#7FDBCA;--1:#096E72\">url</span><span style=\"--0:#D6DEEB;--1:#403F53\">);</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#919F9F;--1:#5D6376\">// Return a loader object</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#C792EA;--1:#8844AE\">return</span><span style=\"--0:#D6DEEB;--1:#403F53\"> {</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">    </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">name: </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#984E4D\">my-loader</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#889FB2;--1:#4D667B\">,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">    </span><span style=\"--0:#919F9F;--1:#5D6376\">// Called when updating the collection.</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">    </span><span style=\"--0:#82AAFF;--1:#3B61B0\">load</span><span style=\"--0:#D6DEEB;--1:#403F53\">: </span><span style=\"--0:#C792EA;--1:#8844AE\">async</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#D9F5DD;--1:#111111\">(</span><span style=\"--0:#D7DBE0;--1:#403F53\">context</span><span style=\"--0:#7FDBCA;--1:#096E72\">:</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--1:#111111\"><span style=\"--0:#FFCB8B\">LoaderContext</span><span style=\"--0:#D9F5DD\">)</span></span><span style=\"--0:#7FDBCA;--1:#096E72\">:</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#FFCB8B;--1:#111111\">Promise</span><span style=\"--0:#D6DEEB;--1:#403F53\">&#x3C;</span><span style=\"--0:#C5E478;--1:#3B61B0\">void</span><span style=\"--0:#D6DEEB;--1:#403F53\">> </span><span style=\"--0:#C792EA;--1:#8844AE\">=></span><span style=\"--0:#D6DEEB;--1:#403F53\"> {</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">      </span><span style=\"--0:#919F9F;--1:#5D6376\">// Load data and update the store</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">      </span><span style=\"--0:#C792EA;--1:#8844AE\">const </span><span style=\"--0:#82AAFF;--1:#3B61B0\">response</span><span style=\"--0:#C792EA;--1:#8844AE\"> = await </span><span style=\"--0:#82AAFF;--1:#3B61B0\">loadFeedData</span><span style=\"--0:#D6DEEB;--1:#403F53\">(feedUrl</span><span style=\"--0:#889FB2;--1:#4D667B\">,</span><span style=\"--0:#C792EA;--1:#8844AE\"> </span><span style=\"--0:#D6DEEB;--1:#403F53\">options</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#7FDBCA;--1:#096E72\">apiKey</span><span style=\"--0:#D6DEEB;--1:#403F53\">);</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">    </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">}</span><span style=\"--0:#889FB2;--1:#4D667B\">,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">    </span><span style=\"--0:#919F9F;--1:#5D6376\">// Optionally, define the schema of an entry.</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">    </span><span style=\"--0:#919F9F;--1:#5D6376\">// It will be overridden by user-defined schema.</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">    </span><span style=\"--0:#82AAFF;--1:#3B61B0\">schema</span><span style=\"--0:#D6DEEB;--1:#403F53\">: </span><span style=\"--0:#C792EA;--1:#8844AE\">async</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#D9F5DD;--1:#111111\">()</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#C792EA;--1:#8844AE\">=></span><span style=\"--0:#D6DEEB;--1:#403F53\"> z</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#82AAFF;--1:#3B61B0\">object</span><span style=\"--0:#D6DEEB;--1:#403F53\">({</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">      </span><span style=\"--0:#919F9F;--1:#5D6376\">// ...</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">    </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">})</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">  </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">};</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#D6DEEB;--1:#403F53\">}</span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"import type { Loader, LoaderContext } from &#x27;astro/loaders&#x27;;import { z } from &#x27;astro:content&#x27;;import { loadFeedData } from &#x22;./feed.js&#x22;;// Define any options that the loader needsexport function myLoader(options: { url: string, apiKey: string }): Loader {  // Configure the loader  const feedUrl = new URL(options.url);  // Return a loader object  return {    name: &#x22;my-loader&#x22;,    // Called when updating the collection.    load: async (context: LoaderContext): Promise<void> => {      // Load data and update the store      const response = await loadFeedData(feedUrl, options.apiKey);    },    // Optionally, define the schema of an entry.    // It will be overridden by user-defined schema.    schema: async () => z.object({      // ...    })  };}\"><div></div></button></div></figure></div>\n<p>These configuration options can then be set when defining a collection:</p>\n<div class=\"expressive-code\"><figure class=\"frame has-title not-content\"><figcaption class=\"header\"><span class=\"title\">src/content.config.ts</span></figcaption><pre data-language=\"ts\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">import</span><span style=\"--0:#D6DEEB;--1:#403F53\"> { defineCollection, z } </span><span style=\"--0:#C792EA;--1:#8844AE\">from</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#D9F5DD;--1:#111111\">'</span><span style=\"--0:#ECC48D;--1:#984E4D\">astro:content</span><span style=\"--0:#D9F5DD;--1:#111111\">'</span><span style=\"--0:#D6DEEB;--1:#403F53\">;</span></div></div><div class=\"ec-line highlight mark\"><div class=\"code\"><span style=\"--0:#d0a4ed;--1:#753a96\">import</span><span style=\"--0:#D6DEEB;--1:#403F53\"> myLoader </span><span style=\"--0:#d0a4ed;--1:#753a96\">from</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#D9F5DD;--1:#111111\">'</span><span style=\"--0:#ECC48D;--1:#804241\">../../loader.ts</span><span style=\"--0:#D9F5DD;--1:#111111\">'</span><span style=\"--0:#D6DEEB;--1:#403F53\">;</span></div></div><div class=\"ec-line\"><div class=\"code\">\n</div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">const </span><span style=\"--0:#82AAFF;--1:#3B61B0\">blog</span><span style=\"--0:#C792EA;--1:#8844AE\"> = </span><span style=\"--0:#82AAFF;--1:#3B61B0\">defineCollection</span><span style=\"--0:#D6DEEB;--1:#403F53\">(</span><span style=\"--0:#C792EA;--1:#8844AE\">{</span></div></div><div class=\"ec-line highlight mark\"><div class=\"code\"><span style=\"--0:#d0a4ed;--1:#753a96\"><span class=\"indent\">  </span>loader: </span><span style=\"--0:#91b4ff;--1:#325295\">myLoader</span><span style=\"--0:#D6DEEB;--1:#403F53\">(</span><span style=\"--0:#d0a4ed;--1:#753a96\">{</span></div></div><div class=\"ec-line highlight mark\"><div class=\"code\"><span style=\"--0:#d0a4ed;--1:#753a96\"><span class=\"indent\">    </span>url: </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#804241\">https://api.example.com/posts</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#d0a4ed;--1:#753a96\">,</span></div></div><div class=\"ec-line highlight mark\"><div class=\"code\"><span style=\"--0:#d0a4ed;--1:#753a96\"><span class=\"indent\">    </span>apiKey: </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#804241\">my-secret</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#d0a4ed;--1:#753a96\">,</span></div></div><div class=\"ec-line highlight mark\"><div class=\"code\"><span style=\"--0:#d0a4ed;--1:#753a96\"><span class=\"indent\">  </span>}</span><span style=\"--0:#D6DEEB;--1:#403F53\">)</span><span style=\"--0:#d0a4ed;--1:#753a96\">,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#C792EA;--1:#8844AE\">  </span></span><span style=\"--0:#C792EA;--1:#8844AE\">schema: </span><span style=\"--0:#919F9F;--1:#5F636F\">/* ... */</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">}</span><span style=\"--0:#D6DEEB;--1:#403F53\">);</span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"import { defineCollection, z } from &#x27;astro:content&#x27;;import myLoader from &#x27;../../loader.ts&#x27;;const blog = defineCollection({  loader: myLoader({    url: &#x22;https://api.example.com/posts&#x22;,    apiKey: &#x22;my-secret&#x22;,  }),  schema: /* ... */});\"><div></div></button></div></figure></div>\n<div class=\"sl-heading-wrapper level-h2\"><h2 id=\"object-loader-api\">Object loader API</h2><a class=\"sl-anchor-link\" href=\"#object-loader-api\"><span aria-hidden=\"true\" class=\"sl-anchor-icon\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg></span><span class=\"sr-only\">Section titled “Object loader API”</span></a></div>\n<p>The API for <a href=\"#inline-loaders\">inline loaders</a> is very simple, and is shown above. This section shows the API for defining an object loader.</p>\n<div class=\"sl-heading-wrapper level-h3\"><h3 id=\"the-loader-object\">The <code dir=\"auto\">Loader</code> object</h3><a class=\"sl-anchor-link\" href=\"#the-loader-object\"><span aria-hidden=\"true\" class=\"sl-anchor-icon\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg></span><span class=\"sr-only\">Section titled “The Loader object”</span></a></div>\n<p>The loader object has the following properties:</p>\n<div class=\"sl-heading-wrapper level-h4\"><h4 id=\"name\"><code dir=\"auto\">name</code></h4><a class=\"sl-anchor-link\" href=\"#name\"><span aria-hidden=\"true\" class=\"sl-anchor-icon\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg></span><span class=\"sr-only\">Section titled “name”</span></a></div>\n<p><p><strong>Type</strong>: <code dir=\"auto\">string</code></p></p>\n<p>A unique name for the loader, used in logs and <a href=\"/en/reference/integrations-reference/#refreshcontent-option\">for conditional loading</a>.</p>\n<div class=\"sl-heading-wrapper level-h4\"><h4 id=\"load\"><code dir=\"auto\">load</code></h4><a class=\"sl-anchor-link\" href=\"#load\"><span aria-hidden=\"true\" class=\"sl-anchor-icon\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg></span><span class=\"sr-only\">Section titled “load”</span></a></div>\n"
    }), createVNode(_components.p, {
      children: createVNode(_components.p, {
        children: [createVNode(_components.strong, {
          children: "Type"
        }), ": ", createVNode(_components.code, {
          children: ["(context: ", createVNode("a", {
            href: "#loadercontext",
            "set:html": "LoaderContext"
          }), ") => Promise<void>"]
        })]
      })
    }), "\n", createVNode(Fragment$1, {
      "set:html": "<p>An async function that is called at build time to load data and update the store. See <a href=\"#loadercontext\"><code dir=\"auto\">LoaderContext</code></a> for more information.</p>\n<div class=\"sl-heading-wrapper level-h4\"><h4 id=\"schema\"><code dir=\"auto\">schema</code></h4><a class=\"sl-anchor-link\" href=\"#schema\"><span aria-hidden=\"true\" class=\"sl-anchor-icon\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg></span><span class=\"sr-only\">Section titled “schema”</span></a></div>\n<p><p><strong>Type</strong>: <code dir=\"auto\">ZodSchema | Promise&#x3C;ZodSchema> | (() => ZodSchema | Promise&#x3C;ZodSchema>)</code></p></p>\n<p>An optional <a href=\"/en/guides/content-collections/#defining-datatypes-with-zod\">Zod schema</a> that defines the shape of the entries. It is used to both validate the data and also to generate TypeScript types for the collection.</p>\n<p>If a function is provided, it will be called at build time before <code dir=\"auto\">load()</code> to generate the schema. You can use this to dynamically generate the schema based on the configuration options or by introspecting an API.</p>\n<div class=\"sl-heading-wrapper level-h3\"><h3 id=\"loadercontext\"><code dir=\"auto\">LoaderContext</code></h3><a class=\"sl-anchor-link\" href=\"#loadercontext\"><span aria-hidden=\"true\" class=\"sl-anchor-icon\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg></span><span class=\"sr-only\">Section titled “LoaderContext”</span></a></div>\n<p>This object is passed to the <code dir=\"auto\">load()</code> method of the loader, and contains the following properties:</p>\n<div class=\"sl-heading-wrapper level-h4\"><h4 id=\"collection\"><code dir=\"auto\">collection</code></h4><a class=\"sl-anchor-link\" href=\"#collection\"><span aria-hidden=\"true\" class=\"sl-anchor-icon\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg></span><span class=\"sr-only\">Section titled “collection”</span></a></div>\n<p><p><strong>Type</strong>: <code dir=\"auto\">string</code></p></p>\n<p>The unique name of the collection. This is the key in the <code dir=\"auto\">collections</code> object in the <code dir=\"auto\">src/content.config.ts</code> file.</p>\n<div class=\"sl-heading-wrapper level-h4\"><h4 id=\"store\"><code dir=\"auto\">store</code></h4><a class=\"sl-anchor-link\" href=\"#store\"><span aria-hidden=\"true\" class=\"sl-anchor-icon\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg></span><span class=\"sr-only\">Section titled “store”</span></a></div>\n<p><p><strong>Type</strong>: <a href=\"#datastore\"><code dir=\"auto\">DataStore</code></a></p></p>\n<p>A database to store the actual data. Use this to update the store with new entries. See <a href=\"#datastore\"><code dir=\"auto\">DataStore</code></a> for more information.</p>\n<div class=\"sl-heading-wrapper level-h4\"><h4 id=\"meta\"><code dir=\"auto\">meta</code></h4><a class=\"sl-anchor-link\" href=\"#meta\"><span aria-hidden=\"true\" class=\"sl-anchor-icon\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg></span><span class=\"sr-only\">Section titled “meta”</span></a></div>\n<p><p><strong>Type</strong>: <code dir=\"auto\">MetaStore</code></p></p>\n<p>A key-value store scoped to the collection, designed for things like sync tokens and last-modified times. This metadata is persisted between builds alongside the collection data but is only available inside the loader.</p>\n<div class=\"expressive-code\"><figure class=\"frame not-content\"><figcaption class=\"header\"></figcaption><pre data-language=\"ts\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">const </span><span style=\"--0:#82AAFF;--1:#3B61B0\">lastModified</span><span style=\"--0:#C792EA;--1:#8844AE\"> = </span><span style=\"--0:#D6DEEB;--1:#403F53\">meta</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#82AAFF;--1:#3B61B0\">get</span><span style=\"--0:#D6DEEB;--1:#403F53\">(</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#984E4D\">lastModified</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">);</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#919F9F;--1:#5D6376\">// ...</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#D6DEEB;--1:#403F53\">meta</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#82AAFF;--1:#3B61B0\">set</span><span style=\"--0:#D6DEEB;--1:#403F53\">(</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#984E4D\">lastModified</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">, </span><span style=\"--0:#7FDBCA;--1:#096E72\">new</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#82AAFF;--1:#3B61B0\">Date</span><span style=\"--0:#D6DEEB;--1:#403F53\">()</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#82AAFF;--1:#3B61B0\">toISOString</span><span style=\"--0:#D6DEEB;--1:#403F53\">());</span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"const lastModified = meta.get(&#x22;lastModified&#x22;);// ...meta.set(&#x22;lastModified&#x22;, new Date().toISOString());\"><div></div></button></div></figure></div>\n<div class=\"sl-heading-wrapper level-h4\"><h4 id=\"logger\"><code dir=\"auto\">logger</code></h4><a class=\"sl-anchor-link\" href=\"#logger\"><span aria-hidden=\"true\" class=\"sl-anchor-icon\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg></span><span class=\"sr-only\">Section titled “logger”</span></a></div>\n<p><p><strong>Type</strong>: <a href=\"/en/reference/integrations-reference/#astrointegrationlogger\"><code dir=\"auto\">AstroIntegrationLogger</code></a></p></p>\n<p>A logger that can be used to log messages to the console. Use this instead of <code dir=\"auto\">console.log</code> for more helpful logs that include the loader name in the log message. See <a href=\"/en/reference/integrations-reference/#astrointegrationlogger\"><code dir=\"auto\">AstroIntegrationLogger</code></a> for more information.</p>\n<div class=\"sl-heading-wrapper level-h4\"><h4 id=\"config\"><code dir=\"auto\">config</code></h4><a class=\"sl-anchor-link\" href=\"#config\"><span aria-hidden=\"true\" class=\"sl-anchor-icon\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg></span><span class=\"sr-only\">Section titled “config”</span></a></div>\n<p><p><strong>Type</strong>: <code dir=\"auto\">AstroConfig</code></p></p>\n<p>The full, resolved Astro configuration object with all defaults applied. See <a href=\"/en/reference/configuration-reference/\">the configuration reference</a> for more information.</p>\n<div class=\"sl-heading-wrapper level-h4\"><h4 id=\"parsedata\"><code dir=\"auto\">parseData</code></h4><a class=\"sl-anchor-link\" href=\"#parsedata\"><span aria-hidden=\"true\" class=\"sl-anchor-icon\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg></span><span class=\"sr-only\">Section titled “parseData”</span></a></div>\n<p><p><strong>Type</strong>: <code dir=\"auto\">(props: ParseDataOptions&#x3C;TData>) => Promise&#x3C;TData></code></p></p>\n<p>Validates and parses the data according to the collection schema. Pass data to this function to validate and parse it before storing it in the data store.</p>\n<div class=\"expressive-code\"><figure class=\"frame has-title not-content\"><figcaption class=\"header\"><span class=\"title\">loader.ts</span></figcaption><pre data-language=\"ts\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">import</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#C792EA;--1:#8844AE\">type</span><span style=\"--0:#D6DEEB;--1:#403F53\"> { Loader } </span><span style=\"--0:#C792EA;--1:#8844AE\">from</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#984E4D\">astro/loaders</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">;</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">import</span><span style=\"--0:#D6DEEB;--1:#403F53\"> { loadFeed } </span><span style=\"--0:#C792EA;--1:#8844AE\">from</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#984E4D\">./feed.js</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">;</span></div></div><div class=\"ec-line\"><div class=\"code\">\n</div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">export</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#C792EA;--1:#8844AE\">function</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#82AAFF;--1:#3B61B0\">feedLoader</span><span style=\"--0:#D9F5DD;--1:#111111\">(</span><span style=\"--1:#403F53\"><span style=\"--0:#D6DEEB\">{ </span><span style=\"--0:#D7DBE0\">url</span><span style=\"--0:#D6DEEB\"> }</span></span><span style=\"--0:#D9F5DD;--1:#111111\">)</span><span style=\"--0:#7FDBCA;--1:#096E72\">:</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#FFCB8B;--1:#111111\">Loader</span><span style=\"--0:#D6DEEB;--1:#403F53\"> {</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#C792EA;--1:#8844AE\">const </span><span style=\"--0:#82AAFF;--1:#3B61B0\">feedUrl</span><span style=\"--0:#C792EA;--1:#8844AE\"> = </span><span style=\"--0:#7FDBCA;--1:#096E72\">new</span><span style=\"--0:#C792EA;--1:#8844AE\"> </span><span style=\"--0:#82AAFF;--1:#3B61B0\">URL</span><span style=\"--0:#D6DEEB;--1:#403F53\">(url);</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#C792EA;--1:#8844AE\">return</span><span style=\"--0:#D6DEEB;--1:#403F53\"> {</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">    </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">name: </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#984E4D\">feed-loader</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#889FB2;--1:#4D667B\">,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">    </span><span style=\"--0:#82AAFF;--1:#3B61B0\">load</span><span style=\"--0:#D6DEEB;--1:#403F53\">: </span><span style=\"--0:#C792EA;--1:#8844AE\">async</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#D9F5DD;--1:#111111\">(</span><span style=\"--1:#403F53\"><span style=\"--0:#D6DEEB\">{ </span><span style=\"--0:#D7DBE0\">store</span></span><span style=\"--0:#889FB2;--1:#4D667B\">,</span><span style=\"--1:#403F53\"><span style=\"--0:#D6DEEB\"> </span><span style=\"--0:#D7DBE0\">logger</span></span><span style=\"--0:#889FB2;--1:#4D667B\">,</span><span style=\"--1:#403F53\"><span style=\"--0:#D6DEEB\"> </span><span style=\"--0:#D7DBE0\">parseData</span></span><span style=\"--0:#889FB2;--1:#4D667B\">,</span><span style=\"--1:#403F53\"><span style=\"--0:#D6DEEB\"> </span><span style=\"--0:#D7DBE0\">meta</span></span><span style=\"--0:#889FB2;--1:#4D667B\">,</span><span style=\"--1:#403F53\"><span style=\"--0:#D6DEEB\"> </span><span style=\"--0:#D7DBE0\">generateDigest</span><span style=\"--0:#D6DEEB\"> }</span></span><span style=\"--0:#D9F5DD;--1:#111111\">)</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#C792EA;--1:#8844AE\">=></span><span style=\"--0:#D6DEEB;--1:#403F53\"> {</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">      </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">logger</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#82AAFF;--1:#3B61B0\">info</span><span style=\"--0:#D6DEEB;--1:#403F53\">(</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#984E4D\">Loading posts</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">);</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">      </span><span style=\"--0:#C792EA;--1:#8844AE\">const </span><span style=\"--0:#82AAFF;--1:#3B61B0\">feed</span><span style=\"--0:#C792EA;--1:#8844AE\"> = </span><span style=\"--0:#82AAFF;--1:#3B61B0\">loadFeed</span><span style=\"--0:#D6DEEB;--1:#403F53\">(feedUrl);</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">      </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">store</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#82AAFF;--1:#3B61B0\">clear</span><span style=\"--0:#D6DEEB;--1:#403F53\">();</span></div></div><div class=\"ec-line\"><div class=\"code\">\n</div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">      </span><span style=\"--0:#C792EA;--1:#8844AE\">for</span><span style=\"--0:#D6DEEB;--1:#403F53\"> (</span><span style=\"--0:#C792EA;--1:#8844AE\">const </span><span style=\"--0:#82AAFF;--1:#3B61B0\">item</span><span style=\"--0:#C792EA;--1:#8844AE\"> </span><span style=\"--0:#7FDBCA;--1:#096E72\">of</span><span style=\"--0:#D6DEEB;--1:#403F53\"> feed</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#7FDBCA;--1:#096E72\">items</span><span style=\"--0:#D6DEEB;--1:#403F53\">) {</span></div></div><div class=\"ec-line highlight mark\"><div class=\"code\"><span class=\"indent\">        </span><span style=\"--0:#d0a4ed;--1:#753a96\">const </span><span style=\"--0:#91b4ff;--1:#325295\">data</span><span style=\"--0:#d0a4ed;--1:#753a96\"> = await </span><span style=\"--0:#91b4ff;--1:#325295\">parseData</span><span style=\"--0:#D6DEEB;--1:#403F53\">(</span><span style=\"--0:#d0a4ed;--1:#753a96\">{</span></div></div><div class=\"ec-line highlight mark\"><div class=\"code\"><span style=\"--0:#d0a4ed;--1:#753a96\"><span class=\"indent\">          </span>id: </span><span style=\"--0:#D6DEEB;--1:#403F53\">item</span><span style=\"--0:#d0a4ed;--1:#753a96\">.</span><span style=\"--0:#7FDBCA;--1:#085f62\">guid</span><span style=\"--0:#a6b7c5;--1:#42586a\">,</span></div></div><div class=\"ec-line highlight mark\"><div class=\"code\"><span style=\"--0:#d0a4ed;--1:#753a96\"><span class=\"indent\">          </span>data: </span><span style=\"--0:#D6DEEB;--1:#403F53\">item</span><span style=\"--0:#a6b7c5;--1:#42586a\">,</span></div></div><div class=\"ec-line highlight mark\"><div class=\"code\"><span style=\"--0:#d0a4ed;--1:#753a96\"><span class=\"indent\">        </span>}</span><span style=\"--0:#D6DEEB;--1:#403F53\">);</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">        </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">store</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#82AAFF;--1:#3B61B0\">set</span><span style=\"--0:#D6DEEB;--1:#403F53\">({</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">          </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">id</span><span style=\"--0:#889FB2;--1:#4D667B\">,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">          </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">data</span><span style=\"--0:#889FB2;--1:#4D667B\">,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">        </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">});</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">      </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">}</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">    </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">}</span><span style=\"--0:#889FB2;--1:#4D667B\">,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">  </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">};</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#D6DEEB;--1:#403F53\">}</span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"import type { Loader } from &#x22;astro/loaders&#x22;;import { loadFeed } from &#x22;./feed.js&#x22;;export function feedLoader({ url }): Loader {  const feedUrl = new URL(url);  return {    name: &#x22;feed-loader&#x22;,    load: async ({ store, logger, parseData, meta, generateDigest }) => {      logger.info(&#x22;Loading posts&#x22;);      const feed = loadFeed(feedUrl);      store.clear();      for (const item of feed.items) {        const data = await parseData({          id: item.guid,          data: item,        });        store.set({          id,          data,        });      }    },  };}\"><div></div></button></div></figure></div>\n<div class=\"sl-heading-wrapper level-h4\"><h4 id=\"rendermarkdown\"><code dir=\"auto\">renderMarkdown</code></h4><a class=\"sl-anchor-link\" href=\"#rendermarkdown\"><span aria-hidden=\"true\" class=\"sl-anchor-icon\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg></span><span class=\"sr-only\">Section titled “renderMarkdown”</span></a></div>\n"
    }), createVNode(_components.p, {
      children: [createVNode(_components.p, {
        children: [createVNode(_components.strong, {
          children: "Type"
        }), ": ", createVNode(_components.code, {
          dir: "auto",
          children: "(markdown: string) => Promise<RenderedContent>"
        })]
      }), createVNode($$Since, {
        v: "5.9.0"
      })]
    }), "\n", createVNode(Fragment$1, {
      "set:html": "<p>Renders a Markdown string to HTML, returning a <code dir=\"auto\">RenderedContent</code> object.</p>\n<p>This allows you to render Markdown content directly within your loaders using the same Markdown processing as Astro’s built-in <code dir=\"auto\">glob</code> loader and provides access to the <code dir=\"auto\">render()</code> function and <code dir=\"auto\">&#x3C;Content /></code> component for <a href=\"/en/guides/content-collections/#rendering-body-content\">rendering body content</a>.</p>\n<p>Assign this object to the <a href=\"#rendered\">rendered</a> field of the <a href=\"#dataentry\">DataEntry</a> object to allow users to <a href=\"/en/guides/content-collections/#rendering-body-content\">render the content in a page</a>.</p>\n<div class=\"expressive-code\"><figure class=\"frame has-title not-content\"><figcaption class=\"header\"><span class=\"title\">loader.ts</span></figcaption><pre data-language=\"ts\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">import</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#C792EA;--1:#8844AE\">type</span><span style=\"--0:#D6DEEB;--1:#403F53\"> { Loader } </span><span style=\"--0:#C792EA;--1:#8844AE\">from</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#D9F5DD;--1:#111111\">'</span><span style=\"--0:#ECC48D;--1:#984E4D\">astro/loaders</span><span style=\"--0:#D9F5DD;--1:#111111\">'</span><span style=\"--0:#D6DEEB;--1:#403F53\">;</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">import</span><span style=\"--0:#D6DEEB;--1:#403F53\"> { loadFromCMS } </span><span style=\"--0:#C792EA;--1:#8844AE\">from</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#D9F5DD;--1:#111111\">'</span><span style=\"--0:#ECC48D;--1:#984E4D\">./cms.js</span><span style=\"--0:#D9F5DD;--1:#111111\">'</span><span style=\"--0:#D6DEEB;--1:#403F53\">;</span></div></div><div class=\"ec-line\"><div class=\"code\">\n</div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">export</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#C792EA;--1:#8844AE\">function</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#82AAFF;--1:#3B61B0\">myLoader</span><span style=\"--0:#D9F5DD;--1:#111111\">(</span><span style=\"--0:#D7DBE0;--1:#403F53\">settings</span><span style=\"--0:#D9F5DD;--1:#111111\">)</span><span style=\"--0:#7FDBCA;--1:#096E72\">:</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#FFCB8B;--1:#111111\">Loader</span><span style=\"--0:#D6DEEB;--1:#403F53\"> {</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#C792EA;--1:#8844AE\">return</span><span style=\"--0:#D6DEEB;--1:#403F53\"> {</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">    </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">name: </span><span style=\"--0:#D9F5DD;--1:#111111\">'</span><span style=\"--0:#ECC48D;--1:#984E4D\">cms-loader</span><span style=\"--0:#D9F5DD;--1:#111111\">'</span><span style=\"--0:#889FB2;--1:#4D667B\">,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">    </span><span style=\"--0:#C792EA;--1:#8844AE\">async</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#82AAFF;--1:#3B61B0\">load</span><span style=\"--0:#D9F5DD;--1:#111111\">(</span><span style=\"--1:#403F53\"><span style=\"--0:#D6DEEB\">{ </span><span style=\"--0:#D7DBE0\">renderMarkdown</span></span><span style=\"--0:#889FB2;--1:#4D667B\">,</span><span style=\"--1:#403F53\"><span style=\"--0:#D6DEEB\"> </span><span style=\"--0:#D7DBE0\">store</span><span style=\"--0:#D6DEEB\"> }</span></span><span style=\"--0:#D9F5DD;--1:#111111\">)</span><span style=\"--0:#D6DEEB;--1:#403F53\"> {</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">      </span><span style=\"--0:#82AAFF;--1:#3B61B0\">const</span><span style=\"--0:#C792EA;--1:#8844AE\"> </span><span style=\"--0:#82AAFF;--1:#3B61B0\">entries</span><span style=\"--0:#C792EA;--1:#8844AE\"> = await </span><span style=\"--0:#82AAFF;--1:#3B61B0\">loadFromCMS</span><span style=\"--0:#D6DEEB;--1:#403F53\">();</span></div></div><div class=\"ec-line\"><div class=\"code\">\n</div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">      </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">store</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#82AAFF;--1:#3B61B0\">clear</span><span style=\"--0:#D6DEEB;--1:#403F53\">();</span></div></div><div class=\"ec-line\"><div class=\"code\">\n</div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">      </span><span style=\"--0:#C792EA;--1:#8844AE\">for</span><span style=\"--0:#D6DEEB;--1:#403F53\"> (</span><span style=\"--0:#82AAFF;--1:#3B61B0\">const</span><span style=\"--0:#C792EA;--1:#8844AE\"> </span><span style=\"--0:#82AAFF;--1:#3B61B0\">entry</span><span style=\"--0:#C792EA;--1:#8844AE\"> </span><span style=\"--0:#7FDBCA;--1:#096E72\">of</span><span style=\"--0:#D6DEEB;--1:#403F53\"> entries) {</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">        </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">store</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#82AAFF;--1:#3B61B0\">set</span><span style=\"--0:#D6DEEB;--1:#403F53\">({</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">          </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">id: entry</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#7FDBCA;--1:#096E72\">id</span><span style=\"--0:#889FB2;--1:#4D667B\">,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">          </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">data: entry</span><span style=\"--0:#889FB2;--1:#4D667B\">,</span></div></div><div class=\"ec-line highlight mark\"><div class=\"code\"><span class=\"indent\">          </span><span style=\"--0:#adb7b7;--1:#4e5464\">// Assume each entry has a 'content' field with markdown content</span></div></div><div class=\"ec-line highlight mark\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">          </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">rendered: </span><span style=\"--0:#d0a4ed;--1:#753a96\">await</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#91b4ff;--1:#325295\">renderMarkdown</span><span style=\"--0:#D6DEEB;--1:#403F53\">(entry</span><span style=\"--0:#d0a4ed;--1:#753a96\">.</span><span style=\"--0:#7FDBCA;--1:#085f62\">content</span><span style=\"--0:#D6DEEB;--1:#403F53\">)</span><span style=\"--0:#a6b7c5;--1:#42586a\">,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">        </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">});</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">      </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">}</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">    </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">}</span><span style=\"--0:#889FB2;--1:#4D667B\">,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">  </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">};</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#D6DEEB;--1:#403F53\">}</span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"import type { Loader } from &#x27;astro/loaders&#x27;;import { loadFromCMS } from &#x27;./cms.js&#x27;;export function myLoader(settings): Loader {  return {    name: &#x27;cms-loader&#x27;,    async load({ renderMarkdown, store }) {      const entries = await loadFromCMS();      store.clear();      for (const entry of entries) {        store.set({          id: entry.id,          data: entry,          // Assume each entry has a &#x27;content&#x27; field with markdown content          rendered: await renderMarkdown(entry.content),        });      }    },  };}\"><div></div></button></div></figure></div>\n<div class=\"sl-heading-wrapper level-h4\"><h4 id=\"generatedigest\"><code dir=\"auto\">generateDigest</code></h4><a class=\"sl-anchor-link\" href=\"#generatedigest\"><span aria-hidden=\"true\" class=\"sl-anchor-icon\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg></span><span class=\"sr-only\">Section titled “generateDigest”</span></a></div>\n<p><p><strong>Type</strong>: <code dir=\"auto\">(data: Record&#x3C;string, unknown> | string) => string</code></p></p>\n<p>Generates a non-cryptographic content digest of an object or string. This can be used to track if the data has changed by setting <a href=\"#digest\">the <code dir=\"auto\">digest</code> field</a> of an entry.</p>\n<div class=\"expressive-code\"><figure class=\"frame has-title not-content\"><figcaption class=\"header\"><span class=\"title\">loader.ts</span></figcaption><pre data-language=\"ts\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">import</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#C792EA;--1:#8844AE\">type</span><span style=\"--0:#D6DEEB;--1:#403F53\"> { Loader } </span><span style=\"--0:#C792EA;--1:#8844AE\">from</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#984E4D\">astro/loaders</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">;</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">import</span><span style=\"--0:#D6DEEB;--1:#403F53\"> { loadFeed } </span><span style=\"--0:#C792EA;--1:#8844AE\">from</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#984E4D\">./feed.js</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">;</span></div></div><div class=\"ec-line\"><div class=\"code\">\n</div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">export</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#C792EA;--1:#8844AE\">function</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#82AAFF;--1:#3B61B0\">feedLoader</span><span style=\"--0:#D9F5DD;--1:#111111\">(</span><span style=\"--1:#403F53\"><span style=\"--0:#D6DEEB\">{ </span><span style=\"--0:#D7DBE0\">url</span><span style=\"--0:#D6DEEB\"> }</span></span><span style=\"--0:#D9F5DD;--1:#111111\">)</span><span style=\"--0:#7FDBCA;--1:#096E72\">:</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#FFCB8B;--1:#111111\">Loader</span><span style=\"--0:#D6DEEB;--1:#403F53\"> {</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#C792EA;--1:#8844AE\">const </span><span style=\"--0:#82AAFF;--1:#3B61B0\">feedUrl</span><span style=\"--0:#C792EA;--1:#8844AE\"> = </span><span style=\"--0:#7FDBCA;--1:#096E72\">new</span><span style=\"--0:#C792EA;--1:#8844AE\"> </span><span style=\"--0:#82AAFF;--1:#3B61B0\">URL</span><span style=\"--0:#D6DEEB;--1:#403F53\">(url);</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#C792EA;--1:#8844AE\">return</span><span style=\"--0:#D6DEEB;--1:#403F53\"> {</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">    </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">name: </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#984E4D\">feed-loader</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#889FB2;--1:#4D667B\">,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">    </span><span style=\"--0:#82AAFF;--1:#3B61B0\">load</span><span style=\"--0:#D6DEEB;--1:#403F53\">: </span><span style=\"--0:#C792EA;--1:#8844AE\">async</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#D9F5DD;--1:#111111\">(</span><span style=\"--1:#403F53\"><span style=\"--0:#D6DEEB\">{ </span><span style=\"--0:#D7DBE0\">store</span></span><span style=\"--0:#889FB2;--1:#4D667B\">,</span><span style=\"--1:#403F53\"><span style=\"--0:#D6DEEB\"> </span><span style=\"--0:#D7DBE0\">logger</span></span><span style=\"--0:#889FB2;--1:#4D667B\">,</span><span style=\"--1:#403F53\"><span style=\"--0:#D6DEEB\"> </span><span style=\"--0:#D7DBE0\">parseData</span></span><span style=\"--0:#889FB2;--1:#4D667B\">,</span><span style=\"--1:#403F53\"><span style=\"--0:#D6DEEB\"> </span><span style=\"--0:#D7DBE0\">meta</span></span><span style=\"--0:#889FB2;--1:#4D667B\">,</span><span style=\"--1:#403F53\"><span style=\"--0:#D6DEEB\"> </span><span style=\"--0:#D7DBE0\">generateDigest</span><span style=\"--0:#D6DEEB\"> }</span></span><span style=\"--0:#D9F5DD;--1:#111111\">)</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#C792EA;--1:#8844AE\">=></span><span style=\"--0:#D6DEEB;--1:#403F53\"> {</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">      </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">logger</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#82AAFF;--1:#3B61B0\">info</span><span style=\"--0:#D6DEEB;--1:#403F53\">(</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#984E4D\">Loading posts</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">);</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">      </span><span style=\"--0:#C792EA;--1:#8844AE\">const </span><span style=\"--0:#82AAFF;--1:#3B61B0\">feed</span><span style=\"--0:#C792EA;--1:#8844AE\"> = </span><span style=\"--0:#82AAFF;--1:#3B61B0\">loadFeed</span><span style=\"--0:#D6DEEB;--1:#403F53\">(feedUrl);</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">      </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">store</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#82AAFF;--1:#3B61B0\">clear</span><span style=\"--0:#D6DEEB;--1:#403F53\">();</span></div></div><div class=\"ec-line\"><div class=\"code\">\n</div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">      </span><span style=\"--0:#C792EA;--1:#8844AE\">for</span><span style=\"--0:#D6DEEB;--1:#403F53\"> (</span><span style=\"--0:#C792EA;--1:#8844AE\">const </span><span style=\"--0:#82AAFF;--1:#3B61B0\">item</span><span style=\"--0:#C792EA;--1:#8844AE\"> </span><span style=\"--0:#7FDBCA;--1:#096E72\">of</span><span style=\"--0:#D6DEEB;--1:#403F53\"> feed</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#7FDBCA;--1:#096E72\">items</span><span style=\"--0:#D6DEEB;--1:#403F53\">) {</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">        </span><span style=\"--0:#C792EA;--1:#8844AE\">const </span><span style=\"--0:#82AAFF;--1:#3B61B0\">data</span><span style=\"--0:#C792EA;--1:#8844AE\"> = await </span><span style=\"--0:#82AAFF;--1:#3B61B0\">parseData</span><span style=\"--0:#D6DEEB;--1:#403F53\">(</span><span style=\"--0:#C792EA;--1:#8844AE\">{</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#C792EA;--1:#8844AE\">          </span></span><span style=\"--0:#C792EA;--1:#8844AE\">id: </span><span style=\"--0:#D6DEEB;--1:#403F53\">item</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#7FDBCA;--1:#096E72\">guid</span><span style=\"--0:#889FB2;--1:#4D667B\">,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#C792EA;--1:#8844AE\">          </span></span><span style=\"--0:#C792EA;--1:#8844AE\">data: </span><span style=\"--0:#D6DEEB;--1:#403F53\">item</span><span style=\"--0:#889FB2;--1:#4D667B\">,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#C792EA;--1:#8844AE\">        </span></span><span style=\"--0:#C792EA;--1:#8844AE\">}</span><span style=\"--0:#D6DEEB;--1:#403F53\">);</span></div></div><div class=\"ec-line\"><div class=\"code\">\n</div></div><div class=\"ec-line highlight mark\"><div class=\"code\"><span class=\"indent\">        </span><span style=\"--0:#d0a4ed;--1:#753a96\">const </span><span style=\"--0:#91b4ff;--1:#325295\">digest</span><span style=\"--0:#d0a4ed;--1:#753a96\"> = </span><span style=\"--0:#91b4ff;--1:#325295\">generateDigest</span><span style=\"--0:#D6DEEB;--1:#403F53\">(data);</span></div></div><div class=\"ec-line\"><div class=\"code\">\n</div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">        </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">store</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#82AAFF;--1:#3B61B0\">set</span><span style=\"--0:#D6DEEB;--1:#403F53\">({</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">          </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">id</span><span style=\"--0:#889FB2;--1:#4D667B\">,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">          </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">data</span><span style=\"--0:#889FB2;--1:#4D667B\">,</span></div></div><div class=\"ec-line highlight mark\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">          </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">digest</span><span style=\"--0:#a6b7c5;--1:#42586a\">,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">        </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">});</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">      </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">}</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">    </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">}</span><span style=\"--0:#889FB2;--1:#4D667B\">,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">  </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">};</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#D6DEEB;--1:#403F53\">}</span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"import type { Loader } from &#x22;astro/loaders&#x22;;import { loadFeed } from &#x22;./feed.js&#x22;;export function feedLoader({ url }): Loader {  const feedUrl = new URL(url);  return {    name: &#x22;feed-loader&#x22;,    load: async ({ store, logger, parseData, meta, generateDigest }) => {      logger.info(&#x22;Loading posts&#x22;);      const feed = loadFeed(feedUrl);      store.clear();      for (const item of feed.items) {        const data = await parseData({          id: item.guid,          data: item,        });        const digest = generateDigest(data);        store.set({          id,          data,          digest,        });      }    },  };}\"><div></div></button></div></figure></div>\n<div class=\"sl-heading-wrapper level-h4\"><h4 id=\"watcher\"><code dir=\"auto\">watcher</code></h4><a class=\"sl-anchor-link\" href=\"#watcher\"><span aria-hidden=\"true\" class=\"sl-anchor-icon\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg></span><span class=\"sr-only\">Section titled “watcher”</span></a></div>\n<p><p><strong>Type</strong>: <code dir=\"auto\">FSWatcher</code></p></p>\n<p>When running in dev mode, this is a filesystem watcher that can be used to trigger updates. See <a href=\"https://vite.dev/guide/api-javascript.html#vitedevserver\"><code dir=\"auto\">ViteDevServer</code></a> for more information.</p>\n<div class=\"expressive-code\"><figure class=\"frame has-title not-content\"><figcaption class=\"header\"><span class=\"title\">Extract from the file() loader</span></figcaption><pre data-language=\"ts\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">return</span><span style=\"--0:#D6DEEB;--1:#403F53\"> {</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">  </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">name: </span><span style=\"--0:#D9F5DD;--1:#111111\">'</span><span style=\"--0:#ECC48D;--1:#984E4D\">file-loader</span><span style=\"--0:#D9F5DD;--1:#111111\">'</span><span style=\"--0:#D6DEEB;--1:#403F53\">,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#82AAFF;--1:#3B61B0\">load</span><span style=\"--0:#D6DEEB;--1:#403F53\">: </span><span style=\"--0:#C792EA;--1:#8844AE\">async</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#D9F5DD;--1:#111111\">(</span><span style=\"--1:#403F53\"><span style=\"--0:#D6DEEB\">{ </span><span style=\"--0:#D7DBE0\">config</span><span style=\"--0:#D6DEEB\">, </span><span style=\"--0:#D7DBE0\">store</span><span style=\"--0:#D6DEEB\">, </span><span style=\"--0:#D7DBE0\">watcher</span><span style=\"--0:#D6DEEB\"> }</span></span><span style=\"--0:#D9F5DD;--1:#111111\">)</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#C792EA;--1:#8844AE\">=></span><span style=\"--0:#D6DEEB;--1:#403F53\"> {</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">    </span><span style=\"--0:#C792EA;--1:#8844AE\">const </span><span style=\"--0:#82AAFF;--1:#3B61B0\">url</span><span style=\"--0:#C792EA;--1:#8844AE\"> = </span><span style=\"--0:#7FDBCA;--1:#096E72\">new</span><span style=\"--0:#C792EA;--1:#8844AE\"> </span><span style=\"--0:#82AAFF;--1:#3B61B0\">URL</span><span style=\"--0:#D6DEEB;--1:#403F53\">(fileName</span><span style=\"--0:#C792EA;--1:#8844AE\">, </span><span style=\"--0:#D6DEEB;--1:#403F53\">config</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#7FDBCA;--1:#096E72\">root</span><span style=\"--0:#D6DEEB;--1:#403F53\">);</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">    </span><span style=\"--0:#C792EA;--1:#8844AE\">const </span><span style=\"--0:#82AAFF;--1:#3B61B0\">filePath</span><span style=\"--0:#C792EA;--1:#8844AE\"> = </span><span style=\"--0:#82AAFF;--1:#3B61B0\">fileURLToPath</span><span style=\"--0:#D6DEEB;--1:#403F53\">(url);</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">    </span><span style=\"--0:#C792EA;--1:#8844AE\">await</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#82AAFF;--1:#3B61B0\">syncData</span><span style=\"--0:#D6DEEB;--1:#403F53\">(filePath, store);</span></div></div><div class=\"ec-line\"><div class=\"code\">\n</div></div><div class=\"ec-line highlight mark\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">    </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">watcher</span><span style=\"--0:#d0a4ed;--1:#753a96\">?.</span><span style=\"--0:#91b4ff;--1:#325295\">on</span><span style=\"--0:#D6DEEB;--1:#403F53\">(</span><span style=\"--0:#D9F5DD;--1:#111111\">'</span><span style=\"--0:#ECC48D;--1:#804241\">change</span><span style=\"--0:#D9F5DD;--1:#111111\">'</span><span style=\"--0:#D6DEEB;--1:#403F53\">, </span><span style=\"--0:#d0a4ed;--1:#753a96\">async</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#D9F5DD;--1:#111111\">(</span><span style=\"--0:#D7DBE0;--1:#403F53\">changedPath</span><span style=\"--0:#D9F5DD;--1:#111111\">)</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#d0a4ed;--1:#753a96\">=></span><span style=\"--0:#D6DEEB;--1:#403F53\"> {</span></div></div><div class=\"ec-line highlight mark\"><div class=\"code\"><span class=\"indent\">      </span><span style=\"--0:#d0a4ed;--1:#753a96\">if</span><span style=\"--0:#D6DEEB;--1:#403F53\"> (changedPath </span><span style=\"--0:#d0a4ed;--1:#753a96\">===</span><span style=\"--0:#D6DEEB;--1:#403F53\"> filePath) {</span></div></div><div class=\"ec-line highlight mark\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">        </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">logger</span><span style=\"--0:#d0a4ed;--1:#753a96\">.</span><span style=\"--0:#91b4ff;--1:#325295\">info</span><span style=\"--0:#D6DEEB;--1:#403F53\">(</span><span style=\"--0:#D6DEEB;--1:#403F53\">`</span><span style=\"--0:#ECC48D;--1:#325295\">Reloading data from </span><span style=\"--0:#eaa2a1;--1:#99302d\">${</span><span style=\"--0:#D6DEEB;--1:#403F53\">fileName</span><span style=\"--0:#eaa2a1;--1:#99302d\">}</span><span style=\"--0:#D6DEEB;--1:#403F53\">`</span><span style=\"--0:#D6DEEB;--1:#403F53\">);</span></div></div><div class=\"ec-line highlight mark\"><div class=\"code\"><span class=\"indent\">        </span><span style=\"--0:#d0a4ed;--1:#753a96\">await</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#91b4ff;--1:#325295\">syncData</span><span style=\"--0:#D6DEEB;--1:#403F53\">(filePath, store);</span></div></div><div class=\"ec-line highlight mark\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">      </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">}</span></div></div><div class=\"ec-line highlight mark\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">    </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">});</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">  </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">},</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#D6DEEB;--1:#403F53\">};</span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"return {  name: &#x27;file-loader&#x27;,  load: async ({ config, store, watcher }) => {    const url = new URL(fileName, config.root);    const filePath = fileURLToPath(url);    await syncData(filePath, store);    watcher?.on(&#x27;change&#x27;, async (changedPath) => {      if (changedPath === filePath) {        logger.info(&#x60;Reloading data from ${fileName}&#x60;);        await syncData(filePath, store);      }    });  },};\"><div></div></button></div></figure></div>\n<div class=\"sl-heading-wrapper level-h4\"><h4 id=\"refreshcontextdata\"><code dir=\"auto\">refreshContextData</code></h4><a class=\"sl-anchor-link\" href=\"#refreshcontextdata\"><span aria-hidden=\"true\" class=\"sl-anchor-icon\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg></span><span class=\"sr-only\">Section titled “refreshContextData”</span></a></div>\n<p><p><strong>Type</strong>: <code dir=\"auto\">Record&#x3C;string, unknown></code></p></p>\n<p>If the loader has been triggered by an integration, this may optionally contain extra data set by that integration. It is only set when the loader is triggered by an integration. See the <a href=\"/en/reference/integrations-reference/#refreshcontent-option\"><code dir=\"auto\">astro:server:setup</code></a> hook reference for more information.</p>\n<div class=\"expressive-code\"><figure class=\"frame has-title not-content\"><figcaption class=\"header\"><span class=\"title\">loader.ts</span></figcaption><pre data-language=\"ts\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">export</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#C792EA;--1:#8844AE\">function</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#82AAFF;--1:#3B61B0\">myLoader</span><span style=\"--0:#D9F5DD;--1:#111111\">(</span><span style=\"--0:#D7DBE0;--1:#403F53\">options</span><span style=\"--0:#7FDBCA;--1:#096E72\">:</span><span style=\"--0:#D6DEEB;--1:#403F53\"> { url</span><span style=\"--0:#7FDBCA;--1:#096E72\">:</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#C5E478;--1:#3B61B0\">string</span><span style=\"--0:#D6DEEB;--1:#403F53\"> }</span><span style=\"--0:#D9F5DD;--1:#111111\">)</span><span style=\"--0:#7FDBCA;--1:#096E72\">:</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#FFCB8B;--1:#111111\">Loader</span><span style=\"--0:#D6DEEB;--1:#403F53\"> {</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#C792EA;--1:#8844AE\">return</span><span style=\"--0:#D6DEEB;--1:#403F53\"> {</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">    </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">name: </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#984E4D\">my-loader</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#889FB2;--1:#4D667B\">,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">    </span><span style=\"--0:#82AAFF;--1:#3B61B0\">load</span><span style=\"--0:#D6DEEB;--1:#403F53\">: </span><span style=\"--0:#C792EA;--1:#8844AE\">async</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#D9F5DD;--1:#111111\">(</span><span style=\"--1:#403F53\"><span style=\"--0:#D6DEEB\">{ </span><span style=\"--0:#D7DBE0\">refreshContextData</span></span><span style=\"--0:#889FB2;--1:#4D667B\">,</span><span style=\"--1:#403F53\"><span style=\"--0:#D6DEEB\"> </span><span style=\"--0:#D7DBE0\">store</span></span><span style=\"--0:#889FB2;--1:#4D667B\">,</span><span style=\"--1:#403F53\"><span style=\"--0:#D6DEEB\"> </span><span style=\"--0:#D7DBE0\">logger</span><span style=\"--0:#D6DEEB\"> }</span></span><span style=\"--0:#D9F5DD;--1:#111111\">)</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#C792EA;--1:#8844AE\">=></span><span style=\"--0:#D6DEEB;--1:#403F53\"> {</span></div></div><div class=\"ec-line highlight mark\"><div class=\"code\"><span class=\"indent\">      </span><span style=\"--0:#d0a4ed;--1:#753a96\">if</span><span style=\"--0:#D6DEEB;--1:#403F53\">(refreshContextData</span><span style=\"--0:#d0a4ed;--1:#753a96\">?.</span><span style=\"--0:#7FDBCA;--1:#085f62\">webhookBody</span><span style=\"--0:#D6DEEB;--1:#403F53\">) {</span></div></div><div class=\"ec-line highlight mark\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">        </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">logger</span><span style=\"--0:#d0a4ed;--1:#753a96\">.</span><span style=\"--0:#91b4ff;--1:#325295\">info</span><span style=\"--0:#D6DEEB;--1:#403F53\">(</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#804241\">Webhook triggered with body</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">);</span></div></div><div class=\"ec-line highlight mark\"><div class=\"code\"><span class=\"indent\">        </span><span style=\"--0:#91b4ff;--1:#325295\">processWebhook</span><span style=\"--0:#D6DEEB;--1:#403F53\">(store</span><span style=\"--0:#a6b7c5;--1:#42586a\">,</span><span style=\"--0:#D6DEEB;--1:#403F53\"> refreshContextData</span><span style=\"--0:#d0a4ed;--1:#753a96\">.</span><span style=\"--0:#7FDBCA;--1:#085f62\">webhookBody</span><span style=\"--0:#D6DEEB;--1:#403F53\">);</span></div></div><div class=\"ec-line highlight mark\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">      </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">}</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">      </span><span style=\"--0:#919F9F;--1:#5D6376\">// ...</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">    </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">}</span><span style=\"--0:#889FB2;--1:#4D667B\">,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">  </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">};</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#D6DEEB;--1:#403F53\">}</span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"export function myLoader(options: { url: string }): Loader {  return {    name: &#x22;my-loader&#x22;,    load: async ({ refreshContextData, store, logger }) => {      if(refreshContextData?.webhookBody) {        logger.info(&#x22;Webhook triggered with body&#x22;);        processWebhook(store, refreshContextData.webhookBody);      }      // ...    },  };}\"><div></div></button></div></figure></div>\n<div class=\"sl-heading-wrapper level-h3\"><h3 id=\"datastore\"><code dir=\"auto\">DataStore</code></h3><a class=\"sl-anchor-link\" href=\"#datastore\"><span aria-hidden=\"true\" class=\"sl-anchor-icon\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg></span><span class=\"sr-only\">Section titled “DataStore”</span></a></div>\n<p>The data store is a loader’s interface to the content collection data. It is a key-value (KV) store, scoped to the collection, and therefore a loader can only access the data for its own collection.</p>\n<div class=\"sl-heading-wrapper level-h4\"><h4 id=\"get\"><code dir=\"auto\">get</code></h4><a class=\"sl-anchor-link\" href=\"#get\"><span aria-hidden=\"true\" class=\"sl-anchor-icon\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg></span><span class=\"sr-only\">Section titled “get”</span></a></div>\n"
    }), createVNode(_components.p, {
      children: createVNode(_components.p, {
        children: [createVNode(_components.strong, {
          children: "Type"
        }), ": ", createVNode(_components.code, {
          children: ["(key: string) => ", createVNode("a", {
            href: "#dataentry",
            "set:html": "DataEntry"
          }), " | undefined"]
        })]
      })
    }), "\n", createVNode(Fragment$1, {
      "set:html": "<p>Get an entry from the store by its ID. Returns <code dir=\"auto\">undefined</code> if the entry does not exist.</p>\n<div class=\"expressive-code\"><figure class=\"frame not-content\"><figcaption class=\"header\"></figcaption><pre data-language=\"ts\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">const </span><span style=\"--0:#82AAFF;--1:#3B61B0\">existingEntry</span><span style=\"--0:#C792EA;--1:#8844AE\"> = </span><span style=\"--0:#D6DEEB;--1:#403F53\">store</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#82AAFF;--1:#3B61B0\">get</span><span style=\"--0:#D6DEEB;--1:#403F53\">(</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#984E4D\">my-entry</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">);</span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"const existingEntry = store.get(&#x22;my-entry&#x22;);\"><div></div></button></div></figure></div>\n<p>The returned object is a <a href=\"#dataentry\"><code dir=\"auto\">DataEntry</code></a> object.</p>\n<div class=\"sl-heading-wrapper level-h4\"><h4 id=\"set\"><code dir=\"auto\">set</code></h4><a class=\"sl-anchor-link\" href=\"#set\"><span aria-hidden=\"true\" class=\"sl-anchor-icon\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg></span><span class=\"sr-only\">Section titled “set”</span></a></div>\n"
    }), createVNode(_components.p, {
      children: createVNode(_components.p, {
        children: [createVNode(_components.strong, {
          children: "Type"
        }), ": ", createVNode(_components.code, {
          children: ["(entry: ", createVNode("a", {
            href: "#dataentry",
            "set:html": "DataEntry"
          }), ") => boolean"]
        })]
      })
    }), "\n", createVNode(Fragment$1, {
      "set:html": "<p>Used after data has been <a href=\"#parsedata\">validated and parsed</a> to add an entry to the store, returning <code dir=\"auto\">true</code> if the entry was set. This returns <code dir=\"auto\">false</code> when the <a href=\"#digest\"><code dir=\"auto\">digest</code></a> property determines that an entry has not changed and should not be updated.</p>\n<div class=\"expressive-code\"><figure class=\"frame has-title not-content\"><figcaption class=\"header\"><span class=\"title\">loader.ts</span></figcaption><pre data-language=\"ts\"><code><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">    </span><span style=\"--0:#C792EA;--1:#8844AE\">for</span><span style=\"--0:#D6DEEB;--1:#403F53\"> (</span><span style=\"--0:#C792EA;--1:#8844AE\">const </span><span style=\"--0:#82AAFF;--1:#3B61B0\">item</span><span style=\"--0:#C792EA;--1:#8844AE\"> </span><span style=\"--0:#7FDBCA;--1:#096E72\">of</span><span style=\"--0:#D6DEEB;--1:#403F53\"> feed</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#7FDBCA;--1:#096E72\">items</span><span style=\"--0:#D6DEEB;--1:#403F53\">) {</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">      </span><span style=\"--0:#C792EA;--1:#8844AE\">const </span><span style=\"--0:#82AAFF;--1:#3B61B0\">data</span><span style=\"--0:#C792EA;--1:#8844AE\"> = await </span><span style=\"--0:#82AAFF;--1:#3B61B0\">parseData</span><span style=\"--0:#D6DEEB;--1:#403F53\">(</span><span style=\"--0:#C792EA;--1:#8844AE\">{</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#C792EA;--1:#8844AE\">        </span></span><span style=\"--0:#C792EA;--1:#8844AE\">id: </span><span style=\"--0:#D6DEEB;--1:#403F53\">item</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#7FDBCA;--1:#096E72\">guid</span><span style=\"--0:#C792EA;--1:#8844AE\">,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#C792EA;--1:#8844AE\">        </span></span><span style=\"--0:#C792EA;--1:#8844AE\">data: </span><span style=\"--0:#D6DEEB;--1:#403F53\">item</span><span style=\"--0:#C792EA;--1:#8844AE\">,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#C792EA;--1:#8844AE\">      </span></span><span style=\"--0:#C792EA;--1:#8844AE\">}</span><span style=\"--0:#D6DEEB;--1:#403F53\">);</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">      </span><span style=\"--0:#C792EA;--1:#8844AE\">const </span><span style=\"--0:#82AAFF;--1:#3B61B0\">digest</span><span style=\"--0:#C792EA;--1:#8844AE\"> = </span><span style=\"--0:#82AAFF;--1:#3B61B0\">generateDigest</span><span style=\"--0:#D6DEEB;--1:#403F53\">(data);</span></div></div><div class=\"ec-line highlight mark\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">      </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">store</span><span style=\"--0:#d0a4ed;--1:#753a96\">.</span><span style=\"--0:#91b4ff;--1:#325295\">set</span><span style=\"--0:#D6DEEB;--1:#403F53\">({</span></div></div><div class=\"ec-line highlight mark\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">        </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">id,</span></div></div><div class=\"ec-line highlight mark\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">        </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">data,</span></div></div><div class=\"ec-line highlight mark\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">        </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">rendered: {</span></div></div><div class=\"ec-line highlight mark\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">          </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">html: data</span><span style=\"--0:#d0a4ed;--1:#753a96\">.</span><span style=\"--0:#7FDBCA;--1:#085f62\">description</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#d0a4ed;--1:#753a96\">??</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#D9F5DD;--1:#111111\">\"\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">,</span></div></div><div class=\"ec-line highlight mark\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">        </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">},</span></div></div><div class=\"ec-line highlight mark\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">        </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">digest,</span></div></div><div class=\"ec-line highlight mark\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">      </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">});</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">    </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">}</span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"    for (const item of feed.items) {      const data = await parseData({        id: item.guid,        data: item,      });      const digest = generateDigest(data);      store.set({        id,        data,        rendered: {          html: data.description ?? &#x22;&#x22;,        },        digest,      });    }\"><div></div></button></div></figure></div>\n<div class=\"sl-heading-wrapper level-h4\"><h4 id=\"entries\"><code dir=\"auto\">entries</code></h4><a class=\"sl-anchor-link\" href=\"#entries\"><span aria-hidden=\"true\" class=\"sl-anchor-icon\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg></span><span class=\"sr-only\">Section titled “entries”</span></a></div>\n<p><p><strong>Type</strong>: <code dir=\"auto\">() => Array&#x3C;[id: string, DataEntry]></code></p></p>\n<p>Get all entries in the collection as an array of key-value pairs.</p>\n<div class=\"sl-heading-wrapper level-h4\"><h4 id=\"keys\"><code dir=\"auto\">keys</code></h4><a class=\"sl-anchor-link\" href=\"#keys\"><span aria-hidden=\"true\" class=\"sl-anchor-icon\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg></span><span class=\"sr-only\">Section titled “keys”</span></a></div>\n<p><p><strong>Type</strong>: <code dir=\"auto\">() => Array&#x3C;string></code></p></p>\n<p>Get all the keys of the entries in the collection.</p>\n<div class=\"sl-heading-wrapper level-h4\"><h4 id=\"values\"><code dir=\"auto\">values</code></h4><a class=\"sl-anchor-link\" href=\"#values\"><span aria-hidden=\"true\" class=\"sl-anchor-icon\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg></span><span class=\"sr-only\">Section titled “values”</span></a></div>\n<p><p><strong>Type</strong>: <code dir=\"auto\">() => Array&#x3C;DataEntry></code></p></p>\n<p>Get all entries in the collection as an array.</p>\n<div class=\"sl-heading-wrapper level-h4\"><h4 id=\"delete\"><code dir=\"auto\">delete</code></h4><a class=\"sl-anchor-link\" href=\"#delete\"><span aria-hidden=\"true\" class=\"sl-anchor-icon\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg></span><span class=\"sr-only\">Section titled “delete”</span></a></div>\n<p><p><strong>Type</strong>: <code dir=\"auto\">(key: string) => void</code></p></p>\n<p>Delete an entry from the store by its ID.</p>\n<div class=\"sl-heading-wrapper level-h4\"><h4 id=\"clear\"><code dir=\"auto\">clear</code></h4><a class=\"sl-anchor-link\" href=\"#clear\"><span aria-hidden=\"true\" class=\"sl-anchor-icon\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg></span><span class=\"sr-only\">Section titled “clear”</span></a></div>\n<p><p><strong>Type</strong>: <code dir=\"auto\">() => void</code></p></p>\n<p>Clear all entries from the collection.</p>\n<div class=\"sl-heading-wrapper level-h4\"><h4 id=\"has\"><code dir=\"auto\">has</code></h4><a class=\"sl-anchor-link\" href=\"#has\"><span aria-hidden=\"true\" class=\"sl-anchor-icon\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg></span><span class=\"sr-only\">Section titled “has”</span></a></div>\n<p><p><strong>Type</strong>: <code dir=\"auto\">(key: string) => boolean</code></p></p>\n<p>Check if an entry exists in the store by its ID.</p>\n<div class=\"sl-heading-wrapper level-h3\"><h3 id=\"dataentry\"><code dir=\"auto\">DataEntry</code></h3><a class=\"sl-anchor-link\" href=\"#dataentry\"><span aria-hidden=\"true\" class=\"sl-anchor-icon\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg></span><span class=\"sr-only\">Section titled “DataEntry”</span></a></div>\n<p>This is the type of the object that is stored in the data store. It has the following properties:</p>\n<div class=\"sl-heading-wrapper level-h4\"><h4 id=\"id\"><code dir=\"auto\">id</code></h4><a class=\"sl-anchor-link\" href=\"#id\"><span aria-hidden=\"true\" class=\"sl-anchor-icon\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg></span><span class=\"sr-only\">Section titled “id”</span></a></div>\n<p><p><strong>Type</strong>: <code dir=\"auto\">string</code></p></p>\n<p>An identifier for the entry, which must be unique within the collection. This is used to look up the entry in the store and is the key used with <code dir=\"auto\">getEntry</code> for that collection.</p>\n<div class=\"sl-heading-wrapper level-h4\"><h4 id=\"data\"><code dir=\"auto\">data</code></h4><a class=\"sl-anchor-link\" href=\"#data\"><span aria-hidden=\"true\" class=\"sl-anchor-icon\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg></span><span class=\"sr-only\">Section titled “data”</span></a></div>\n<p><p><strong>Type</strong>: <code dir=\"auto\">Record&#x3C;string, unknown></code></p></p>\n<p>The actual data for the entry. When a user accesses the collection, this will have TypeScript types generated according to the collection schema.</p>\n<p>It is the loader’s responsibility to use <a href=\"#parsedata\"><code dir=\"auto\">parseData</code></a> to validate and parse the data before storing it in the data store: no validation is done when getting or setting the data.</p>\n<div class=\"sl-heading-wrapper level-h4\"><h4 id=\"filepath\"><code dir=\"auto\">filePath</code></h4><a class=\"sl-anchor-link\" href=\"#filepath\"><span aria-hidden=\"true\" class=\"sl-anchor-icon\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg></span><span class=\"sr-only\">Section titled “filePath”</span></a></div>\n<p><p><strong>Type</strong>: <code dir=\"auto\">string | undefined</code></p></p>\n<p>A path to the file that is the source of this entry, relative to the root of the site. This only applies to file-based loaders and is used to resolve paths such as images or other assets.</p>\n<p>If not set, then any fields in the schema that use <a href=\"/en/guides/images/#images-in-content-collections\">the <code dir=\"auto\">image()</code> helper</a> will be treated as <a href=\"/en/guides/images/#where-to-store-images\">public paths</a> and not transformed.</p>\n<div class=\"sl-heading-wrapper level-h4\"><h4 id=\"body\"><code dir=\"auto\">body</code></h4><a class=\"sl-anchor-link\" href=\"#body\"><span aria-hidden=\"true\" class=\"sl-anchor-icon\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg></span><span class=\"sr-only\">Section titled “body”</span></a></div>\n<p><p><strong>Type</strong>: <code dir=\"auto\">string | undefined</code></p></p>\n<p>The raw body of the entry, if applicable. If the entry includes <a href=\"#rendered\">rendered content</a>, then this field can be used to store the raw source. This is optional and is not used internally.</p>\n<div class=\"sl-heading-wrapper level-h4\"><h4 id=\"digest\"><code dir=\"auto\">digest</code></h4><a class=\"sl-anchor-link\" href=\"#digest\"><span aria-hidden=\"true\" class=\"sl-anchor-icon\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg></span><span class=\"sr-only\">Section titled “digest”</span></a></div>\n<p><p><strong>Type</strong>: <code dir=\"auto\">string | undefined</code></p></p>\n<p>An optional content digest for the entry. This can be used to check if the data has changed.</p>\n<p>When <a href=\"#set\">setting an entry</a>, the entry will only update if the digest does not match an existing entry with the same ID.</p>\n<p>The format of the digest is up to the loader, but it must be a string that changes when the data changes. This can be done with the <a href=\"#generatedigest\"><code dir=\"auto\">generateDigest</code></a> function.</p>\n<div class=\"sl-heading-wrapper level-h4\"><h4 id=\"rendered\"><code dir=\"auto\">rendered</code></h4><a class=\"sl-anchor-link\" href=\"#rendered\"><span aria-hidden=\"true\" class=\"sl-anchor-icon\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg></span><span class=\"sr-only\">Section titled “rendered”</span></a></div>\n<p><p><strong>Type</strong>: <code dir=\"auto\">RenderedContent | undefined</code></p></p>\n<p>Stores an object with an entry’s rendered content and metadata if it has been rendered to HTML. For example, this can be used to store the rendered content of a Markdown entry, or HTML from a CMS.</p>\n<p>If this field is provided, then <a href=\"/en/guides/content-collections/#rendering-body-content\">the <code dir=\"auto\">render()</code> function and <code dir=\"auto\">&#x3C;Content /></code> component</a> are available to render the entry in a page.</p>\n<p>The format of the <code dir=\"auto\">RenderedContent</code> object is:</p>\n<div class=\"expressive-code\"><figure class=\"frame not-content\"><figcaption class=\"header\"></figcaption><pre data-language=\"ts\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#D6DEEB;--1:#403F53\">{</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#919F9F;--1:#5F636F\">/** Rendered HTML string. If present then `render(entry)` will return a component that renders this HTML. */</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">  </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">html: string;</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">  </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">metadata</span><span style=\"--0:#C792EA;--1:#8844AE\">?:</span><span style=\"--0:#D6DEEB;--1:#403F53\"> {</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">    </span><span style=\"--0:#919F9F;--1:#5F636F\">/** Any images that are present in this entry. Relative to the DataEntry filePath. */</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">    </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">imagePaths?: Array</span><span style=\"--0:#C792EA;--1:#8844AE\">&#x3C;</span><span style=\"--0:#D6DEEB;--1:#403F53\">string</span><span style=\"--0:#C792EA;--1:#8844AE\">></span><span style=\"--0:#D6DEEB;--1:#403F53\">;</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">    </span><span style=\"--0:#919F9F;--1:#5F636F\">/** Any headings that are present in this file. Returned as `headings` from `render()` */</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">    </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">headings</span><span style=\"--0:#C792EA;--1:#8844AE\">?:</span><span style=\"--0:#D6DEEB;--1:#403F53\"> MarkdownHeading[];</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">    </span><span style=\"--0:#919F9F;--1:#5F636F\">/** Raw frontmatter, parsed from the file. This may include data from remark plugins. */</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">    </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">frontmatter</span><span style=\"--0:#C792EA;--1:#8844AE\">?:</span><span style=\"--0:#D6DEEB;--1:#403F53\"> Record</span><span style=\"--0:#C792EA;--1:#8844AE\">&#x3C;</span><span style=\"--0:#D6DEEB;--1:#403F53\">string, any>;</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">    </span><span style=\"--0:#919F9F;--1:#5F636F\">/** Any other metadata that is present in this file. */</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">    </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">[key: string]: unknown;</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">  </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">};</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#D6DEEB;--1:#403F53\">}</span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"{  /** Rendered HTML string. If present then &#x60;render(entry)&#x60; will return a component that renders this HTML. */  html: string;  metadata?: {    /** Any images that are present in this entry. Relative to the DataEntry filePath. */    imagePaths?: Array<string>;    /** Any headings that are present in this file. Returned as &#x60;headings&#x60; from &#x60;render()&#x60; */    headings?: MarkdownHeading[];    /** Raw frontmatter, parsed from the file. This may include data from remark plugins. */    frontmatter?: Record<string, any>;    /** Any other metadata that is present in this file. */    [key: string]: unknown;  };}\"><div></div></button></div></figure></div>\n<p>If the entry has Markdown content then you can use the <a href=\"#rendermarkdown\"><code dir=\"auto\">renderMarkdown()</code></a> function to generate this object from the Markdown string.</p>"
    })]
  });
}
function MDXContent(props = {}) {
  const {wrapper: MDXLayout} = props.components || ({});
  return MDXLayout ? createVNode(MDXLayout, {
    ...props,
    children: createVNode(_createMdxContent, {
      ...props
    })
  }) : _createMdxContent(props);
}
function _missingMdxReference(id, component) {
  throw new Error("Expected " + ("component" ) + " `" + id + "` to be defined: you likely forgot to import, pass, or provide it.");
}

const url = "src/content/docs/en/reference/content-loader-reference.mdx/";
const file = "/Users/chasepursley/Development/ai/star-support/src/content/docs/en/reference/content-loader-reference.mdx";
const Content = (props = {}) => MDXContent({
  ...props,
  components: { Fragment: Fragment, ...props.components, },
});
Content[Symbol.for('mdx-component')] = true;
Content[Symbol.for('astro.needsHeadRendering')] = !Boolean(frontmatter.layout);
Content.moduleId = "/Users/chasepursley/Development/ai/star-support/src/content/docs/en/reference/content-loader-reference.mdx";
__astro_tag_component__(Content, 'astro:jsx');

export { Content, Content as default, file, frontmatter, getHeadings, url };
